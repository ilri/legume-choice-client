{"version":3,"sources":["components/home-component/home-component-markdown.md","components/home-component/home-component.js","AppContext.js","components/admin-data-entry-component/admin-data-entry-component.js","components/login-component/login-component.js","components/data-entry-component/data-entry-data.js","components/agro-ecological-filter-component/agro-ecological-data.js","components/agro-ecological-filter-component/agro-ecological-filter.js","components/context-scores-component/context-scores-data.js","components/context-scores-component/context-scores-component.js","components/participatory-matrix-scoring-component/participatory-matrix-data.js","components/participatory-matrix-scoring-component/participatory-matrix-scoring.js","components/pairwise-ranking-component/pairwise-ranking-data.js","components/pairwise-ranking-component/pairwise-ranking-component.js","components/data-entry-component/data-entry-component.js","components/results-component/results-data.js","components/legumes-component/legume-information-clean.js","components/legumes-component/legume-data.js","components/results-component/results-component.js","components/view-context-component/view-context-component.js","components/map-polygon-component/map-polygon-component.js","components/project-information-component/project-information-component.js","components/project-information-component/countries-list.js","components/submit-data-component/submit-data-component.js","components/sidebar-component/sidebar-data.js","components/sidebar-component/sidebar-component.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Home","props","state","file","markdownFile","markdown","axios","get","this","then","response","setState","data","className","children","type","href","download","Button","Component","AppContext","createContext","Login","handleChange","event","variable","target","value","authenticateUser","preventDefault","authenticated","username","password","undefined","context","currentProject","user","newState","_","cloneDeep","newContext","Form","Label","Control","onChange","onClick","React","contextType","legfunc","name","label","typologies","participants","attributes","biofilters","minValue","maxValue","AgroEcoData","AgroEco","tableHeader","renderDefaultValue","tableBody","map","biofilter","index","FormControl","bioFiltersArray","forEach","biofilterSubset","biofilterIndex","parseFloat","agroEcoData","console","log","Card","Header","Body","Text","Table","striped","bordered","hover","ContextScoreData","scores","attributesIndex","length","push","scoreType","attribute","score","participantIndex","typologyIndex","participant","typology","ContextScore","renderRadarChart","avergeScores","scoreLabels","radarData","meta","class","color","defaultOptions","size","axes","scales","captions","captionMargin","dots","zoomDistance","setViewBox","options","smoothing","points","d","toFixed","i","axisProps","scaleProps","fill","shapeProps","captionProps","textAnchor","fontSize","fontFamily","dotProps","mouseEnter","dot","mouseLeave","parseInt","scoresArray","element","averageAttributes","changeIndividualScores","arr","total","numberofscores","average","scoreIndex","averageAttribute","attributetoAverage","scoresLength","renderRowAverage","valueToReturn","contextRow","rowAttribute","rowTypology","rowParticipant","as","allRows","key","rowSpan","colSpan","contextScores","newSelections","JSON","parse","stringify","func","includes","MatrixData","farmerAttributes","farmers","legumeFunctions","blankFarmer","number","gender","selections","summary","scoreTypes","scoresIndividual","legumefunction","legumeFunction","ParticipatoryMatrix","addFarmer","farmersArray","newfarmertoAdd","updateTotal","updateFarmerSummary","farmEntryFields","scoringInput","farmerNameInput","farmerDetailsSelectInput","farmer","updateFarmerName","defaultValue","updateFarmerScore","updateFarmerDetailesSelect","whichFarmer","farmerIndex","legumefuncs","whichValue","funct","funcIndex","newScore","selection","tableRows","calculateAttributeRank","individualScore","firstScore","secondScore","numberOfScores","numberOfOccurences","occurences","conversion","rank","prevState","updateTypologyScore","scoresByLegumeFunction","individualScores","mapThroughFarmers","summaryscore","summaryScoreIndex","totalScoreTemp","farmerSelection","selectionIndex","resultsTable","scoreTypeIndex","bind","participatoryMatrixScores","scoreSum","relevantFarmers","farmerSelectionIndex","toLowerCase","style","PairwiseRankingData","male","pairwiseSelection","totals","female","averages","previousidentifiers","outerArrayIndex","function1","innerArrayIndex","function2","intermediateidentifier","sort","identifier","join","funct1","funct2","PairwiseRanking","updateSelections","selectedValue","selectionArr","selectionItem","upDateTotalScore","alert","totalsArray","totalsItem","totalsIndex","updateAverage","totalsArrayMale","totalsArrayFemale","newAverages","newAverage","pairWiseTable","item","itemIndex","pairWiseResultsTable","pairWiseScores","DataEntry","renderComponents","components","component","functionFitForm","legfuncCopy","contextFitForm","attributesCopy","legumeResultsToAdd","functionFit","contextFit","agroEcoFit","overallFit","overallRank","legfunction","agroEcoCopy","agroecofiltter","agroEcoFilter","biofiltersCopy","biofiltersCleaned","resultsData","agroEcoFilters","agroEcoFitSummary","functionFitSummary","contextFitSummary","emptyScoresForLegume","legumes","resultsFilter","selectOptions","orderOptions","numberOfLegumesOptions","whichResults","order","numberOfLegumes","formFilled","allLegumes","food","feed","income","fuel","land","labour","seed","water","markets","rainfall","min","max","temp","alt","soilpH","legumeTypes","sources","legume","legumesData","Results","initialiseResults","newLegumes","newLegume","results","contextData","newContextAverages","newcontextscore","contextscore","pairWiseData","participatoryMatrixData","newFunctionAverages","newfunction","pairwisescoreaverages","pairwisescore","matrixscore","calculateLegumeScores","legumeContextScores","legumecontext","formcontext","scoreToReturn","legumeFunctionScores","formfunction","legumeAgroEcoScores","legumeMin","legumeMax","formvalue","newLegumeState","legumeContextScore","contextAttribute","functionAttribute","legumeAgroEco","agroEcoSummary","agroecoscoreAccumulator","agroecoscore","contextAccumulator","contextScore","functionAccumulator","functionScore","avgFit","firstLegume","valuesEncountered","secondLegume","checkFormFilled","returnResultsForSummaryTable","agroEcoTable","orderAndFilterLegume","agroEcoItem","contextFitTable","contextItem","functionFitTable","functionItem","returnRank","returnScore","compareScores","a","b","scoreA","scoreB","filter","legumeArr","slice","changeCellColour","summaryTable","renderLegumeResults","changeSelection","resultsFilters","FormGroup","controlId","FormLabel","selectionoption","orderoption","numberoption","renderBody","ViewContext","initialiseContext","appData","center","lat","lng","markerpositions","DraggableMarker","markerRef","useRef","updateMarker","useMemo","dragend","marker","current","newArray","clone","newLat","getLatLng","newLng","changeMarkerPositions","Marker","draggable","eventHandlers","position","ref","DraggablePolygon","Polygon","pathOptions","positions","location","MapPolygon","useState","markerPositions","mapCenter","AppContextMap","useContext","useEffect","MapContainer","zoom","scrollWheelZoom","TileLayer","attribution","url","countryNames","code","country","projectID","uuidv4","ProjectInformation","firstname","surname","email","institution","projectName","majorRegion","minorRegion","communityName","communityType","description","date","Date","window","scrollTo","projectInfo","FormText","placeholder","readOnly","selected","rows","ManageData","checkAllFieldsComplete","submitData","dataToSubmit","method","headers","accept","catch","error","downLoadData","dataToDownload","encodeURIComponent","variant","uploadData","FormFile","fileUploadButton","fileOnload","jsonFile","result","files","reader","FileReader","onload","readAsText","rel","disabled","sidebarlinkcName","SidebarData","title","routeKey","path","icon","cName","Sidebar","toggleSidebar","sideBarOpen","returnTopBarInformation","project","dataEntryComplete","projectInformationComplete","resultsComplete","newProject","projectInfoState","dataEntryState","resultsState","to","App","Provider","exact","from","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f58f8b99.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home-component-markdown.c28f5fd9.md\";","import React, { Component } from \"react\";\r\nimport \"./home-component.css\";\r\nimport axios from \"axios\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport markdownFile from \"./home-component-markdown.md\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\nclass Home extends Component {\r\n    // Initialising state for the component\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            file: markdownFile,\r\n            markdown: \"\",\r\n        };\r\n    }\r\n\r\n    // Importing markdown when the file is loaded\r\n    componentDidMount() {\r\n        axios.get(this.state.file).then((response) => {\r\n            this.setState({\r\n                markdown: response.data,\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"markdown-container\">\r\n                <ReactMarkdown children={this.state.markdown}></ReactMarkdown>\r\n                <a\r\n                    type=\"button\"\r\n                    href={\"legume_CHOICE_guide.pdf\"}\r\n                    download=\"legume_CHOICE_guide.pdf\"\r\n                >\r\n                    <Button>Download Guide</Button>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { createContext } from \"react\";\r\n\r\n// Skeleton of the app data\r\n/*\r\n    user: {},\r\n    agroEcoData: {},\r\n    contextScores: {},\r\n    pairWiseScores: {},\r\n    participatoryMatrixScores: {},\r\n    results: {},\r\n*/\r\n\r\n// Creating the app context to be used with the react contextapi\r\nconst AppContext = createContext();\r\n\r\nexport default AppContext;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nimport \"./admin-data-entry-component.css\";\r\n\r\nclass Admin extends Component {\r\n    /////////////////////////////////////////////////////////////////////////////////\r\n    // Initialising variables\r\n    /////////////////////////////////////////////////////////////////////////////////\r\n    constructor(props) {\r\n        super(props);\r\n        //console.log(\"Constructor\");\r\n        this.state = {\r\n            usersLocal: [],\r\n            usersOnline: [],\r\n\r\n            formEntry: {\r\n                username: \"\",\r\n                email: \"\",\r\n            },\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addUserlocal = this.addUserlocal.bind(this);\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////\r\n    // Loaded when the page loads. Fetches entries from the database\r\n    /////////////////////////////////////////////////////////////////////////////////\r\n    componentDidMount() {\r\n        axios({\r\n            method: \"get\",\r\n            url: \"https://l-gorman.com/api/users\",\r\n            headers: {\r\n                accept: \"application/json\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                this.setState({\r\n                    usersLocal: response.data,\r\n                    usersOnline: response.data,\r\n                });\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////\r\n    // Function for adding user\r\n    /////////////////////////////////////////////////////////////////////////////////\r\n    addUserlocal = (event) => {\r\n        event.preventDefault();\r\n        //console.log(\"About to update state\");\r\n        const prevUsers = this.state.usersLocal;\r\n        const newUser = this.state.formEntry;\r\n\r\n        // Checking if the username exists already\r\n        if (newUser.username === \"\") {\r\n            alert(\"No username entered\");\r\n            return;\r\n        }\r\n        if (prevUsers.some((user) => user.username === newUser.username)) {\r\n            alert(\"Username already exists\");\r\n            return;\r\n        }\r\n\r\n        // Checking if the email exists already\r\n        if (prevUsers.some((user) => user.email === newUser.email)) {\r\n            alert(\"email already registered\");\r\n            return;\r\n        }\r\n\r\n        // Updating state\r\n        this.setState({\r\n            usersLocal: [...prevUsers, newUser],\r\n            formEntry: {\r\n                username: \"\",\r\n                email: \"\",\r\n            },\r\n        });\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        const name = [event.target.name];\r\n        const value = event.target.value;\r\n        this.setState((prevState) => ({\r\n            formEntry: {\r\n                ...prevState.formEntry,\r\n                [name]: value,\r\n            },\r\n        }));\r\n    };\r\n    /////////////////////////////////////////////////////////////////////////////////\r\n    // Function for deleting user\r\n    /////////////////////////////////////////////////////////////////////////////////\r\n    deleteUser = (event, params = {}) => {\r\n        event.preventDefault();\r\n\r\n        const oldUsers = this.state.usersLocal;\r\n        const newUser = oldUsers.filter(\r\n            (user) =>\r\n                user.email !== params.email || user.username !== params.username\r\n        );\r\n        //console.log(newUser);\r\n\r\n        this.setState((prevState) => ({\r\n            usersLocal: newUser,\r\n        }));\r\n    };\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////\r\n    // Subset Arrays\r\n    /////////////////////////////////////////////////////////////////////////////////\r\n\r\n    subsetArrays = (array, variable) => {\r\n        return array.map((item) => {\r\n            return item[variable];\r\n        });\r\n    };\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////\r\n    // Making Changes to Db\r\n    /////////////////////////////////////////////////////////////////////////////////\r\n    saveChanges = (event) => {\r\n        //event.preventDefault();\r\n\r\n        const usersLocal = this.state.usersLocal;\r\n        const usersOnline = this.state.usersOnline;\r\n\r\n        //console.log(this.subsetArrays(usersOnline, \"email\"));\r\n        let usersToAdd = [];\r\n        let usersToDelete = [];\r\n\r\n        usersToAdd = usersLocal.filter(\r\n            (localusers) =>\r\n                !this.subsetArrays(usersOnline, \"email\").includes(\r\n                    localusers.email\r\n                ) &&\r\n                !this.subsetArrays(usersOnline, \"username\").includes(\r\n                    localusers.username\r\n                )\r\n        );\r\n\r\n        usersToDelete = usersOnline.filter(\r\n            (localusers) =>\r\n                !this.subsetArrays(usersLocal, \"email\").includes(\r\n                    localusers.email\r\n                ) &&\r\n                !this.subsetArrays(usersLocal, \"username\").includes(\r\n                    localusers.username\r\n                )\r\n        );\r\n\r\n        //console.log(usersToDelete);\r\n\r\n        //console.log(usersToDelete);\r\n\r\n        if (usersToAdd.length > 0) {\r\n            axios({\r\n                method: \"post\",\r\n                url: \"https://l-gorman.com/api/users/insertmany/\",\r\n                data: { newUsers: usersToAdd },\r\n                headers: {\r\n                    accept: \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    console.log(response);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        }\r\n\r\n        if (usersToDelete.length > 0) {\r\n            axios({\r\n                method: \"post\",\r\n                url: \"https://l-gorman.com/api/users/deletemany/\",\r\n                data: { deleteUsers: usersToDelete },\r\n                headers: {\r\n                    accept: \"application/json\",\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    console.log(response);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        }\r\n\r\n        this.setState(() => ({\r\n            usersOnline: usersLocal,\r\n        }));\r\n    };\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////\r\n    // Checking if the component has updated\r\n    /////////////////////////////////////////////////////////////////////////////////\r\n    componentDidUpdate() {\r\n        console.log(this.state);\r\n    }\r\n\r\n    userForm = () => {\r\n        return (\r\n            <>\r\n                <div className=\"form-container\">\r\n                    <h2>New Users</h2>\r\n                    <Form onSubmit={this.addUserlocal}>\r\n                        <Form.Group controlId=\"basicusername\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control\r\n                                name=\"username\"\r\n                                type=\"text\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"basicemail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Button\r\n                            className=\"delete-button\"\r\n                            variant=\"primary\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Add User\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"form-container\">\r\n                    <h2>Users</h2>\r\n                    {this.state.usersLocal.map((user, index) => {\r\n                        return (\r\n                            <div\r\n                                className=\"user-container\"\r\n                                key={\"user \" + user.email + \" \" + user.username}\r\n                            >\r\n                                {index + 1}. {user.username} ({user.email})\r\n                                <div className=\"deleteButton\">\r\n                                    <Button\r\n                                        onClick={(e) =>\r\n                                            this.deleteUser(e, {\r\n                                                id: user._id,\r\n                                                username: user.username,\r\n                                                email: user.email,\r\n                                            })\r\n                                        }\r\n                                    >\r\n                                        Delete User\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                    <div className=\"user-container\">\r\n                        <Button\r\n                            onClick={this.saveChanges}\r\n                            className=\"deleteButton\"\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Admin component</h1>\r\n                <this.userForm />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Admin;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nimport AppContext from \"../../AppContext\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nimport \"./login-component.css\";\r\n\r\nclass Login extends React.Component {\r\n    // Initialising context\r\n    //static contextType = AppContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            authenticated: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.context.currentProject === undefined) {\r\n            this.context.currentProject = {};\r\n        }\r\n        if (this.context.currentProject.user !== undefined) {\r\n            const newState = _.cloneDeep(this.context.currentProject.user);\r\n            this.setState(newState);\r\n        }\r\n\r\n        if (this.context.currentProject.user === undefined) {\r\n            const newContext = _.cloneDeep(this.state);\r\n            this.context.currentProject.user = newContext;\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        const newContext = _.cloneDeep(this.state);\r\n        this.context.currentProject.user = newContext;\r\n    }\r\n\r\n    handleChange = (event, props) => {\r\n        this.setState({\r\n            [props.variable]: event.target.value,\r\n        });\r\n    };\r\n\r\n    authenticateUser = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            authenticated: true,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-container\">\r\n                <h1>Login</h1>\r\n                <Form>\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        value={this.state.username}\r\n                        onChange={(event) =>\r\n                            this.handleChange(event, { variable: \"username\" })\r\n                        }\r\n                    />\r\n                    {/* <Form.Label>Project ID</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        value={this.state.projectID}\r\n                        onChange={(event) =>\r\n                            this.handleChange(event, { variable: \"projectID\" })\r\n                        }\r\n                    /> */}\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={(event) =>\r\n                            this.handleChange(event, { variable: \"password\" })\r\n                        }\r\n                    />\r\n\r\n                    <Button\r\n                        className=\"submitButton\"\r\n                        type=\"submit\"\r\n                        onClick={this.authenticateUser}\r\n                    >\r\n                        Authenticate\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.contextType = AppContext;\r\n\r\nexport default Login;\r\n","export const legfunc = [\r\n    {\r\n        name: \"Food\",\r\n        label: \"food\",\r\n    },\r\n    {\r\n        name: \"Feed\",\r\n        label: \"feed\",\r\n    },\r\n    {\r\n        name: \"Income\",\r\n        label: \"income\",\r\n    },\r\n    {\r\n        name: \"Erosion Control\",\r\n        label: \"erosion-control\",\r\n    },\r\n    {\r\n        name: \"Fuel\",\r\n        label: \"fuel\",\r\n    },\r\n    {\r\n        name: \"Soil Fertility\",\r\n        label: \"soil-fertility\",\r\n    },\r\n];\r\n\r\nexport const typologies = [\r\n    {\r\n        name: \"Low\",\r\n        label: \"low\",\r\n    },\r\n    {\r\n        name: \"Medium\",\r\n        label: \"med\",\r\n    },\r\n    {\r\n        name: \"High\",\r\n        label: \"high\",\r\n    },\r\n];\r\n\r\nexport const participants = [\r\n    {\r\n        name: \"Farmer\",\r\n        label: \"farmer\",\r\n    },\r\n    {\r\n        name: \"Expert\",\r\n        label: \"expert\",\r\n    },\r\n];\r\n\r\nexport const attributes = [\r\n    {\r\n        name: \"Land\",\r\n        label: \"land\",\r\n    },\r\n    {\r\n        name: \"Labour\",\r\n        label: \"labour\",\r\n    },\r\n    {\r\n        name: \"Seed\",\r\n        label: \"seed\",\r\n    },\r\n    {\r\n        name: \"Inputs and services\",\r\n        label: \"inp-serv\",\r\n    },\r\n    {\r\n        name: \"Knowledge and skills\",\r\n        label: \"knowl-skill\",\r\n    },\r\n    {\r\n        name: \"Water\",\r\n        label: \"water\",\r\n    },\r\n    {\r\n        name: \"Markets\",\r\n        label: \"markets\",\r\n    },\r\n];\r\n\r\nexport const biofilters = [\r\n    {\r\n        name: \"Rainfall (mm/year)\",\r\n        label: \"rainfall\",\r\n        minValue: 280,\r\n        maxValue: 4290,\r\n        value: (280 + 4290) / 2,\r\n    },\r\n    {\r\n        name: \"Temperature (mean °C/month)\",\r\n        label: \"temp\",\r\n        minValue: 0,\r\n        maxValue: 45,\r\n        value: 45 / 2,\r\n    },\r\n\r\n    {\r\n        name: \"Altitude (average masl)\",\r\n        label: \"alt\",\r\n        minValue: 0,\r\n        maxValue: 3800,\r\n        value: 3800 / 2,\r\n    },\r\n\r\n    {\r\n        name: \"Soil pH (average)\",\r\n        label: \"soilpH\",\r\n        minValue: 4,\r\n        maxValue: 9,\r\n        value: (4 + 9) / 2,\r\n    },\r\n];\r\n","import { biofilters } from \"../data-entry-component/data-entry-data\";\r\nimport _ from \"lodash\";\r\n\r\nconst biofiltersCopy = _.cloneDeep(biofilters);\r\nconst AgroEcoData = {\r\n    biofilters: biofiltersCopy,\r\n};\r\n\r\nexport { AgroEcoData };\r\n","// Component to render the \"agro-ecological-filter\" for data entry\r\n// This component allows users to specify the context for their study\r\n\r\nimport React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport _ from \"lodash\";\r\nimport { AgroEcoData } from \"./agro-ecological-data\";\r\n\r\nimport \"./agro-ecological-filter.css\";\r\nimport \"../data-entry-component/data-entry-component.css\";\r\nimport AppContext from \"../../AppContext\";\r\n\r\nclass AgroEco extends React.Component {\r\n    //static contextType = AppContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = _.cloneDeep(AgroEcoData);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.context.currentProject.agroEcoData !== undefined) {\r\n            const newState = _.cloneDeep(\r\n                this.context.currentProject.agroEcoData\r\n            );\r\n            this.setState(newState);\r\n        } else {\r\n            const newContext = _.cloneDeep(this.state);\r\n            this.context.currentProject.agroEcoData = newContext;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const newContext = _.cloneDeep(this.state);\r\n        this.context.currentProject.agroEcoData = newContext;\r\n        console.log(this.context.currentProject.agroEcoData);\r\n    }\r\n    tableHeader = () => {\r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    <th>Biofilters</th>\r\n                    <th>Site Values</th>\r\n                </tr>\r\n            </thead>\r\n        );\r\n    };\r\n\r\n    renderDefaultValue = (props) => {\r\n        return props.value;\r\n    };\r\n    tableBody = () => {\r\n        return (\r\n            <tbody>\r\n                {this.state.biofilters.map((biofilter, index) => {\r\n                    return (\r\n                        <tr key={\"agro-eco-table\" + biofilter.label}>\r\n                            <td>{biofilter.name}</td>\r\n                            <td>\r\n                                <FormControl\r\n                                    type=\"number\"\r\n                                    value={this.renderDefaultValue({\r\n                                        value: biofilter.value,\r\n                                    })}\r\n                                    onChange={(event) => {\r\n                                        this.handleChange(event, {\r\n                                            biofilter: biofilter,\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        );\r\n    };\r\n\r\n    handleChange = (event, props) => {\r\n        const bioFiltersArray = this.state.biofilters;\r\n\r\n        // if (\r\n        //     event.target.value < biofilter.minValue ||\r\n        //     event.target.value > biofilter.maxValue\r\n        // ) {\r\n        //     alert(\"Outside of range\");\r\n        //     return;\r\n        // }\r\n\r\n        bioFiltersArray.forEach((biofilterSubset, biofilterIndex) => {\r\n            if (biofilterSubset.label === props.biofilter.label) {\r\n                bioFiltersArray[biofilterIndex].value = parseFloat(\r\n                    event.target.value\r\n                );\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            biofilters: bioFiltersArray,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"table-container\">\r\n                <div className=\"card-container\">\r\n                    <Card>\r\n                        <Card.Header className=\"bg-dark text-white\">\r\n                            <h2>Agroecological Filter</h2>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                Using your own knowledge of the field site fill\r\n                                the green cells with representative data. These\r\n                                data are used to assess agro-ecological\r\n                                suitability of the field site for different\r\n                                legume options in the Legume Option Scores\r\n                                sheet.\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div>\r\n                    <Form>\r\n                        <Table striped bordered hover>\r\n                            {this.tableHeader()}\r\n\r\n                            {this.tableBody()}\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAgroEco.contextType = AppContext;\r\n\r\nexport default AgroEco;\r\n","/* Creating all of the possible combinations for context scores \r\n Could be done in a better way with a series of map functions, or some sort of recursive for loop\r\nThis is the quickest/best way I could come up with*/\r\n\r\nimport {\r\n    typologies,\r\n    participants,\r\n    attributes,\r\n} from \"../data-entry-component/data-entry-data\";\r\n\r\nconst ContextScoreData = {\r\n    attributes: attributes,\r\n    participants: participants,\r\n    typologies: typologies,\r\n    scores: [],\r\n};\r\n\r\nfor (\r\n    let attributesIndex = 0;\r\n    attributesIndex < attributes.length;\r\n    attributesIndex++\r\n) {\r\n    // Giving room to add average scores for each attribute\r\n    ContextScoreData.scores.push({\r\n        scoreType: \"average\",\r\n        attribute: attributes[attributesIndex],\r\n        score: 0,\r\n    });\r\n\r\n    for (\r\n        let participantIndex = 0;\r\n        participantIndex < participants.length;\r\n        participantIndex++\r\n    ) {\r\n        for (\r\n            let typologyIndex = 0;\r\n            typologyIndex < typologies.length;\r\n            typologyIndex++\r\n        ) {\r\n            // Giving room to add individual scores for each entry\r\n            ContextScoreData.scores.push({\r\n                scoreType: \"individual\",\r\n                attribute: attributes[attributesIndex],\r\n                participant: participants[participantIndex],\r\n                typology: typologies[typologyIndex],\r\n                score: 0,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport { ContextScoreData };\r\n","import React from \"react\";\r\nimport { ContextScoreData } from \"./context-scores-data\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nimport RadarChart from \"react-svg-radar-chart\";\r\nimport \"react-svg-radar-chart/build/css/index.css\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nimport \"./context-scores-component.css\";\r\nimport \"../data-entry-component/data-entry-component.css\";\r\nimport AppContext from \"../../AppContext\";\r\n\r\nclass ContextScore extends React.Component {\r\n    //static contextType = AppContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = _.cloneDeep(ContextScoreData);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(\"Component did mount!\");\r\n\r\n        if (this.context.currentProject === undefined) {\r\n            this.context.currentProject = {};\r\n        }\r\n\r\n        if (this.context.currentProject.contextScores !== undefined) {\r\n            const newState = _.cloneDeep(\r\n                this.context.currentProject.contextScores\r\n            );\r\n            this.setState(newState);\r\n            // console.log(\"Set state with old context\");\r\n        }\r\n        if (this.context.currentProject.contextScores === undefined) {\r\n            const newContext = _.cloneDeep(this.state);\r\n            this.context.currentProject.contextScores = newContext;\r\n            // console.log(\"Set context with new state\");\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let newContext = _.cloneDeep(this.state);\r\n        this.context.currentProject.contextScores = newContext;\r\n\r\n        // console.log(\"context!!!!!!!!!!!!\");\r\n        // console.log(this.context.currentProject);\r\n\r\n        // console.log(this.context.currentProject.contextScores);\r\n        // console.log(\"State!!!!!!!!!!!!\");\r\n        // console.log(this.state);\r\n\r\n        //console.log(this.state);\r\n    }\r\n\r\n    renderRadarChart = () => {\r\n        const avergeScores = {};\r\n        const scoreLabels = {};\r\n        this.state.scores.forEach((score) => {\r\n            if (score.scoreType === \"average\") {\r\n                avergeScores[score.attribute.label] = score.score / 4;\r\n                scoreLabels[score.attribute.label] = score.attribute.name;\r\n            }\r\n        });\r\n\r\n        const radarData = [\r\n            {\r\n                data: avergeScores,\r\n                meta: {\r\n                    class: \"radar-style\",\r\n                    color: \"green\",\r\n                },\r\n            },\r\n        ];\r\n\r\n        const noSmoothing = (points) => {\r\n            let d =\r\n                \"M\" + points[0][0].toFixed(4) + \",\" + points[0][1].toFixed(4);\r\n            for (let i = 1; i < points.length; i++) {\r\n                d +=\r\n                    \"L\" +\r\n                    points[i][0].toFixed(4) +\r\n                    \",\" +\r\n                    points[i][1].toFixed(4);\r\n            }\r\n            return d + \"z\";\r\n        };\r\n\r\n        const defaultOptions = {\r\n            size: 200,\r\n            axes: true, // show axes?\r\n            scales: 4, // show scale circles?\r\n            captions: true, // show captions?\r\n            captionMargin: 10,\r\n            dots: true, // show dots?\r\n            zoomDistance: 1.2, // where on the axes are the captions?\r\n            setViewBox: (options) =>\r\n                `-${options.captionMargin} 0 ${\r\n                    options.size + options.captionMargin * 2\r\n                } ${options.size}`, // custom viewBox ?\r\n            smoothing: noSmoothing, // shape smoothing function\r\n            axisProps: () => ({ className: \"axis\" }),\r\n            scaleProps: () => ({ className: \"scale\", fill: \"none\" }),\r\n            shapeProps: () => ({ className: \"shape\" }),\r\n            captionProps: () => ({\r\n                className: \"caption\",\r\n                textAnchor: \"middle\",\r\n                fontSize: 10,\r\n                fontFamily: \"sans-serif\",\r\n            }),\r\n            dotProps: () => ({\r\n                className: \"dot\",\r\n                mouseEnter: (dot) => {\r\n                    console.log(dot);\r\n                },\r\n                mouseLeave: (dot) => {\r\n                    console.log(dot);\r\n                },\r\n            }),\r\n        };\r\n\r\n        return (\r\n            <div className=\"radar-container\">\r\n                <RadarChart\r\n                    captions={scoreLabels}\r\n                    data={radarData}\r\n                    size={450}\r\n                    options={defaultOptions}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    handleChange = (event, props) => {\r\n        props.score = parseInt(event.target.value); // Ensuring that the entered value is an integer\r\n        let scoresArray = this.state.scores;\r\n        console.log(props);\r\n\r\n        scoresArray.forEach((element, index) => {\r\n            console.log(element);\r\n            if (element.scoreType == \"individual\") {\r\n                if (\r\n                    element.participant.label == props.participant.label &&\r\n                    element.attribute.label == props.attribute.label &&\r\n                    element.typology.label == props.typology.label\r\n                ) {\r\n                    scoresArray[index].score = parseInt(props.score);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.setState(\r\n            {\r\n                scores: scoresArray,\r\n            },\r\n            () => this.averageAttributes()\r\n        );\r\n\r\n        //scoresArray = this.changeIndividualScores(scoresArray, props);\r\n\r\n        //scoresArray = this.changeAverages(scoresArray);\r\n    };\r\n\r\n    // Change individual scores in an array through filtering\r\n    changeIndividualScores = (arr, props) => {};\r\n\r\n    averageAttributes = () => {\r\n        const arr = _.cloneDeep(this.state.scores);\r\n\r\n        this.state.attributes.forEach((attribute) => {\r\n            let total = 0;\r\n            let numberofscores = 0;\r\n\r\n            arr.forEach((score) => {\r\n                if (\r\n                    score.scoreType === \"individual\" &&\r\n                    score.attribute.label === attribute.label\r\n                ) {\r\n                    total += score.score;\r\n                    console.log(\"total: \" + total);\r\n                    numberofscores += 1;\r\n                    console.log(\"number of scores: \" + numberofscores);\r\n\r\n                    // let average = this.averageAttribute(arr, attribute);\r\n                    // console.log(average);\r\n                    // arr[scoreIndex].score = average;\r\n                }\r\n            });\r\n            const average = total / numberofscores;\r\n            arr.forEach((score, scoreIndex) => {\r\n                if (\r\n                    score.scoreType === \"average\" &&\r\n                    score.attribute.label === attribute.label\r\n                ) {\r\n                    console.log(average);\r\n                    arr[scoreIndex].score = average;\r\n                }\r\n            });\r\n\r\n            this.setState({\r\n                scores: arr,\r\n            });\r\n        });\r\n\r\n        // arr.forEach((score, scoreIndex) => {\r\n        //     this.state.attributes.forEach((attribute) => {\r\n        //         if (\r\n        //             score.scoreType === \"average\" &&\r\n        //             score.attribute.label === attribute.label\r\n        //         ) {\r\n        //             let average = this.averageAttribute(arr, attribute);\r\n        //             console.log(average);\r\n        //             arr[scoreIndex].score = average;\r\n        //         }\r\n        //     });\r\n        // });\r\n        this.setState({\r\n            scores: arr,\r\n        });\r\n    };\r\n    // Update Averages after we see a score change\r\n    averageAttribute = (arr, attributetoAverage) => {\r\n        //axisToAverage.forEach((element, index) => {});\r\n        //const scores = [];\r\n        let scores = 0;\r\n        let scoresLength = 0;\r\n        arr.forEach((element, index) => {\r\n            if (\r\n                element.attribute.label === attributetoAverage.label &&\r\n                element.scoreType === \"individual\"\r\n            ) {\r\n                //scores.push(arr[index].score);\r\n                scores += arr[index].score;\r\n                scoresLength += 1;\r\n            }\r\n        });\r\n\r\n        // const total = scores.reduce(\r\n        //     (accumulator, currentValue) => accumulator + currentValue,\r\n        //     0\r\n        // );\r\n        //const average = total / scores.length;\r\n        const average = scores / scoresLength;\r\n        return average;\r\n    };\r\n\r\n    renderRowAverage = (props) => {\r\n        return this.state.scores.map((score) => {\r\n            if (\r\n                score.scoreType == \"average\" &&\r\n                score.attribute.label == props.attribute.label\r\n            ) {\r\n                return <td>{score.score.toFixed(2)}</td>;\r\n            }\r\n        });\r\n    };\r\n\r\n    // Ensuring that the correct values are preselected in the table\r\n    renderDefaultValue = (props) => {\r\n        {\r\n            // const valueToReturn = this.state.scores.filter((element, index) => {\r\n            //     if (\r\n            //         element.scoreType === \"individual\" &&\r\n            //         element.attribute === props.attribute &&\r\n            //         element.participant === props.participant &&\r\n            //         element.typology === props.typology\r\n            //     ) {\r\n            //         return true;\r\n            //     }\r\n            // });\r\n            let valueToReturn = \"\";\r\n            this.state.scores.forEach((score) => {\r\n                if (\r\n                    score.scoreType === \"individual\" &&\r\n                    score.attribute.label === props.attribute.label &&\r\n                    score.participant.label === props.participant.label &&\r\n                    score.typology.label === props.typology.label\r\n                ) {\r\n                    //console.log(\"found it: \" + score.score);\r\n                    valueToReturn = score.score;\r\n                }\r\n            });\r\n\r\n            return valueToReturn;\r\n            // console.log(props);\r\n            // console.log(scores);\r\n            //console.log(this.state.scores);\r\n            //return 999;\r\n            //return valueToReturn[0].score;\r\n        }\r\n    };\r\n\r\n    // A function for generating a row in the input table\r\n    contextRow = (props) => {\r\n        const rowAttribute = props.attribute;\r\n        //console.log(\"---------------Row--------------------\");\r\n\r\n        return (\r\n            <tr>\r\n                {/* Mapping across the different attributes to return a form to enter score (0-4).\r\n                e.g \r\n                - Typology-low-> Farmer -> Land score\r\n                - Typology-high -> Expert -> Seed score*/}\r\n                <td>{rowAttribute.name}</td>\r\n                {this.state.typologies.map((rowTypology) => {\r\n                    return this.state.participants.map((rowParticipant) => {\r\n                        return (\r\n                            <td\r\n                                key={\r\n                                    \"table-entry-\" +\r\n                                    rowTypology.name +\r\n                                    \"-\" +\r\n                                    rowParticipant.name +\r\n                                    \"-\" +\r\n                                    rowAttribute.name\r\n                                }\r\n                            >\r\n                                <FormControl\r\n                                    as=\"select\"\r\n                                    key={props.key}\r\n                                    value={this.renderDefaultValue({\r\n                                        typology: rowTypology,\r\n                                        participant: rowParticipant,\r\n                                        attribute: rowAttribute,\r\n                                    })}\r\n                                    onChange={(event) =>\r\n                                        this.handleChange(event, {\r\n                                            typology: rowTypology,\r\n                                            participant: rowParticipant,\r\n                                            attribute: rowAttribute,\r\n                                        })\r\n                                    }\r\n                                    key={\r\n                                        \"form-control-\" +\r\n                                        rowTypology.name +\r\n                                        \"-\" +\r\n                                        rowParticipant.name +\r\n                                        \"-\" +\r\n                                        rowAttribute.name\r\n                                    }\r\n                                >\r\n                                    {[0, 1, 2, 3, 4].map((score) => {\r\n                                        return (\r\n                                            <option\r\n                                                key={\r\n                                                    \"form-option-\" +\r\n                                                    rowTypology.name +\r\n                                                    \"-\" +\r\n                                                    rowParticipant.name +\r\n                                                    \"-\" +\r\n                                                    rowAttribute.name +\r\n                                                    \"-\" +\r\n                                                    score\r\n                                                }\r\n                                            >\r\n                                                {score}\r\n                                            </option>\r\n                                        );\r\n                                    })}\r\n                                </FormControl>\r\n                            </td>\r\n                        );\r\n                    });\r\n                })}\r\n                {this.renderRowAverage({ attribute: rowAttribute })}\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    // Using the contextRow and map functions to generate all of the rows in the table\r\n    allRows = () => {\r\n        if (this.state !== null) {\r\n            // console.log(\"rendering all rows\");\r\n            return this.state.attributes.map((attribute) => {\r\n                return this.contextRow({\r\n                    attribute: attribute,\r\n                    key: \"context-row-\" + attribute.name,\r\n                });\r\n            });\r\n        } else {\r\n            return <h1>Null State</h1>;\r\n        }\r\n    };\r\n\r\n    // Creating the header for the table. This is a split header which accounts for typologies and participants\r\n    tableHeader = () => {\r\n        if (this.state !== null) {\r\n            // console.log(\"Header rendering\");\r\n            return (\r\n                <thead>\r\n                    {/* Adding The typology Headers */}\r\n                    <tr>\r\n                        <th rowSpan=\"2\"></th>\r\n                        {this.state.typologies.map((typology) => {\r\n                            return (\r\n                                <th\r\n                                    key={\"typology-header\" + typology.name}\r\n                                    colSpan=\"2\"\r\n                                >\r\n                                    Typology - {typology.name}\r\n                                </th>\r\n                            );\r\n                        })}\r\n                        {/* Adding The Average Score Headers */}\r\n\r\n                        <th key=\"average-header\" rowSpan=\"2\">\r\n                            Mean Score (0-4)\r\n                        </th>\r\n                    </tr>\r\n                    {/* Adding The Participant Headers */}\r\n                    <tr key=\"participant-header-row\">\r\n                        {this.state.typologies.map((typology) => {\r\n                            return this.state.participants.map(\r\n                                (participant) => {\r\n                                    return (\r\n                                        <th\r\n                                            key={\r\n                                                \"participant-header\" +\r\n                                                participant.name\r\n                                            }\r\n                                        >\r\n                                            {participant.name}\r\n                                        </th>\r\n                                    );\r\n                                }\r\n                            );\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n            );\r\n        } else {\r\n            return <h1>Null State</h1>;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"radar-container\">\r\n                <div className=\"card-container\">\r\n                    <Card>\r\n                        <Card.Header className=\"bg-dark text-white\">\r\n                            <h2>Context Assessment</h2>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                The purpose of the exercise is to come up with a\r\n                                series of scores from zero to four that indicate\r\n                                the strength of a series of generic constraints\r\n                                to legume production. The exercise is carried\r\n                                out with a group – the questions are asked and\r\n                                on the basis of the responses, the group is\r\n                                asked to come up with a score for each\r\n                                constraint. The facilitator also assigns a score\r\n                                based on his assessment. This exercise is\r\n                                conducted separately with the 3 typology groups\r\n                                and the average for each attribute is the\r\n                                rounded average of all 6 scores (3 typologies x\r\n                                2 score types per attribute)\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"context-table\">\r\n                    <Form>\r\n                        <Table striped bordered hover>\r\n                            {this.tableHeader()}\r\n                            <tbody>{this.allRows()}</tbody>\r\n                        </Table>\r\n                    </Form>\r\n                </div>\r\n                {this.renderRadarChart()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nContextScore.contextType = AppContext;\r\n\r\nexport default ContextScore;\r\n","import { typologies, legfunc } from \"../data-entry-component/data-entry-data\";\r\n\r\nconst newSelections = JSON.parse(JSON.stringify(legfunc));\r\nnewSelections.forEach((func, index) => {\r\n    if ([0, 1].includes(index)) {\r\n        func.score = 4;\r\n    }\r\n    if ([2, 3, 4, 5].includes(index)) {\r\n        func.score = 3;\r\n    }\r\n});\r\nconst newFarmer = {\r\n    // Setting initial values\r\n    number: 0,\r\n    name: \"Jane Bloggs\",\r\n    gender: \"Female\",\r\n    typology: \"Medium\",\r\n    selections: newSelections,\r\n    total: 0,\r\n};\r\n\r\nconst MatrixData = {\r\n    farmerAttributes: [\r\n        {\r\n            name: \"Number\",\r\n            label: \"number\",\r\n        },\r\n        {\r\n            name: \"Name\",\r\n            label: \"name\",\r\n        },\r\n        {\r\n            name: \"Gender\",\r\n            label: \"gender\",\r\n        },\r\n        {\r\n            name: \"Typology\",\r\n            label: \"typology\",\r\n        },\r\n        {\r\n            name: \"Matrix Selections\",\r\n            label: \"selections\",\r\n        },\r\n        {\r\n            name: \"Total\",\r\n            label: \"total\",\r\n        },\r\n    ],\r\n    farmers: [],\r\n    legumeFunctions: legfunc,\r\n    blankFarmer: newFarmer,\r\n    typology: typologies,\r\n    gender: [\r\n        {\r\n            name: \"Male\",\r\n            label: \"male\",\r\n        },\r\n        {\r\n            name: \"Female\",\r\n            label: \"female\",\r\n        },\r\n    ],\r\n    summary: {\r\n        scoreTypes: [],\r\n        scoresIndividual: [],\r\n    },\r\n};\r\n\r\nlegfunc.forEach((legumefunction) => {\r\n    MatrixData.summary.scoresIndividual.push({\r\n        legumeFunction: legumefunction,\r\n        scores: [\r\n            {\r\n                name: \"Total\",\r\n                label: \"total\",\r\n                score: 0,\r\n            },\r\n            {\r\n                name: \"Score (0-5)\",\r\n                label: \"score\",\r\n                score: 0,\r\n            },\r\n            {\r\n                name: \"Average Rank\",\r\n                label: \"rank\",\r\n                score: 0,\r\n            },\r\n        ],\r\n    });\r\n});\r\n\r\nlegfunc.forEach((legumefunction, index) => {\r\n    MatrixData.gender.map((gender) => {\r\n        MatrixData.summary.scoresIndividual[index].scores.push({\r\n            name: gender.name + \" (0-5)\",\r\n            label: gender.label,\r\n            type: \"gender\",\r\n            score: 0,\r\n        });\r\n    });\r\n    MatrixData.typology.map((typology) => {\r\n        MatrixData.summary.scoresIndividual[index].scores.push({\r\n            name: typology.name + \" (0-5)\",\r\n            label: typology.name,\r\n            type: \"typology\",\r\n            score: 0,\r\n        });\r\n    });\r\n});\r\n\r\nMatrixData.summary.scoreTypes = MatrixData.summary.scoresIndividual[0].scores;\r\n\r\nexport { MatrixData };\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport \"./participatory-matrix-scoring.css\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { MatrixData } from \"./participatory-matrix-data\";\r\n\r\nimport AppContext from \"../../AppContext\";\r\n\r\nclass ParticipatoryMatrix extends React.Component {\r\n    //static contextType = AppContext;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = _.cloneDeep(MatrixData);\r\n\r\n        this.addFarmer = this.addFarmer.bind(this);\r\n        this.farmEntryFields = this.farmEntryFields.bind(this);\r\n        this.farmerNameInput = this.farmerNameInput.bind(this);\r\n        this.scoringInput = this.scoringInput.bind(this);\r\n        this.farmerDetailsSelectInput = this.farmerDetailsSelectInput.bind(\r\n            this\r\n        );\r\n        this.updateFarmerScore = this.updateFarmerScore.bind(this);\r\n        this.updateTotal = this.updateTotal.bind(this);\r\n        this.updateFarmerName = this.updateFarmerName.bind(this);\r\n        this.updateFarmerDetailesSelect = this.updateFarmerDetailesSelect.bind(\r\n            this\r\n        );\r\n        this.tableHeader = this.tableHeader.bind(this);\r\n        this.tableRows = this.tableRows.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (\r\n            this.context.currentProject.participatoryMatrixScores !== undefined\r\n        ) {\r\n            const newState = this.context.currentProject\r\n                .participatoryMatrixScores;\r\n            this.setState(newState);\r\n        } else {\r\n            const newContext = this.state;\r\n            this.context.currentProject.participatoryMatrixScores = newContext;\r\n\r\n            this.addFarmer();\r\n        }\r\n        //console.log(this.state);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const newContext = this.state;\r\n        this.context.currentProject.participatoryMatrixScores = newContext;\r\n\r\n        //console.log(this.state);\r\n    }\r\n\r\n    addFarmer = () => {\r\n        //This is so important to make sure that we are creating a clean copy\r\n        //Deep cloning\r\n        let farmersArray = _.cloneDeep(this.state.farmers);\r\n        let number = farmersArray.length + 1;\r\n\r\n        let newfarmertoAdd = _.cloneDeep(this.state.blankFarmer);\r\n        newfarmertoAdd.number = number;\r\n\r\n        farmersArray.push(newfarmertoAdd);\r\n\r\n        this.setState(\r\n            {\r\n                farmers: farmersArray,\r\n            },\r\n            () => {\r\n                this.updateTotal();\r\n                this.updateFarmerSummary();\r\n            }\r\n        );\r\n    };\r\n\r\n    farmEntryFields = (props) => {\r\n        //console.log(props);\r\n\r\n        if (props.attribute.label === \"selections\") {\r\n            return this.scoringInput(props);\r\n        } else {\r\n            if (props.attribute.label === \"name\") {\r\n                return this.farmerNameInput(props);\r\n            } else {\r\n                return this.farmerDetailsSelectInput(props);\r\n            }\r\n        }\r\n    };\r\n\r\n    farmerNameInput = (props) => {\r\n        return (\r\n            <td>\r\n                <FormControl\r\n                    value={props.farmer.name}\r\n                    type=\"text\"\r\n                    onChange={(event) => this.updateFarmerName(event, props)}\r\n                />\r\n            </td>\r\n        );\r\n    };\r\n\r\n    scoringInput = (props) => {\r\n        return (\r\n            <td>\r\n                <FormControl\r\n                    defaultValue={props.legumeFunctions.score}\r\n                    type=\"number\"\r\n                    onChange={(event) => this.updateFarmerScore(event, props)}\r\n                />\r\n            </td>\r\n        );\r\n    };\r\n\r\n    farmerDetailsSelectInput = (props) => {\r\n        return (\r\n            <td>\r\n                <FormControl\r\n                    as=\"select\"\r\n                    defaultValue={props.farmer[props.attribute.label]}\r\n                    onChange={(event) =>\r\n                        this.updateFarmerDetailesSelect(event, props)\r\n                    }\r\n                >\r\n                    {this.state[props.attribute.label].map((attribute) => {\r\n                        return (\r\n                            <option\r\n                                key={\r\n                                    \"form-option-\" +\r\n                                    props.attribute.label +\r\n                                    \"-\" +\r\n                                    props.farmer.number +\r\n                                    \"-\" +\r\n                                    attribute.label\r\n                                }\r\n                            >\r\n                                {attribute.name}\r\n                            </option>\r\n                        );\r\n                    })}\r\n                </FormControl>\r\n            </td>\r\n        );\r\n    };\r\n\r\n    updateFarmerScore = (event, props) => {\r\n        let farmersArray = [...this.state.farmers];\r\n\r\n        //console.log(farmersArray);\r\n        //console.log(props);\r\n        // Finding which farmer to subset\r\n        let whichFarmer = \"\";\r\n        farmersArray.forEach((farmer, farmerIndex) => {\r\n            if (farmer.number === props.farmer.number) {\r\n                whichFarmer = farmerIndex;\r\n            }\r\n        });\r\n\r\n        let legumefuncs = this.state.legumeFunctions;\r\n        let whichValue = \"\";\r\n        // Finding which value to update\r\n        legumefuncs.forEach((funct, funcIndex) => {\r\n            if (funct.label === props.legumeFunctions.label) {\r\n                whichValue = funcIndex;\r\n            }\r\n        });\r\n\r\n        let newScore = { ...farmersArray[whichFarmer].selections[whichValue] };\r\n        newScore.score = parseInt(event.target.value);\r\n        farmersArray[whichFarmer].selections[whichValue] = newScore;\r\n        this.setState({\r\n            farmers: farmersArray,\r\n        });\r\n\r\n        this.updateTotal();\r\n        this.updateFarmerSummary();\r\n    };\r\n\r\n    updateTotal = () => {\r\n        const farmers = this.state.farmers;\r\n\r\n        farmers.map((farmer) => {\r\n            farmer.total = 0;\r\n\r\n            farmer.selections.map((selection) => {\r\n                farmer.total += selection.score;\r\n            });\r\n        });\r\n\r\n        this.setState({\r\n            farmers: farmers,\r\n        });\r\n    };\r\n\r\n    updateFarmerName = (event, props) => {\r\n        let farmersArray = [...this.state.farmers];\r\n\r\n        farmersArray.forEach((farmer, farmerIndex) => {\r\n            if (farmer.number === props.farmer.number) {\r\n                farmersArray[farmerIndex].name = event.target.value;\r\n            }\r\n        });\r\n        this.setState({ farmers: farmersArray });\r\n    };\r\n\r\n    updateFarmerDetailesSelect = (event, props) => {\r\n        let farmersArray = [...this.state.farmers]; // making a shallow copy\r\n        farmersArray.forEach((farmer, farmerIndex) => {\r\n            if (farmer.number === props.farmer.number) {\r\n                farmersArray[farmerIndex][props.attribute.label] =\r\n                    event.target.value;\r\n            }\r\n        });\r\n        this.setState({ farmers: farmersArray });\r\n        this.updateFarmerSummary();\r\n    };\r\n\r\n    tableHeader = () => {\r\n        if (this.state !== null) {\r\n            return (\r\n                <thead>\r\n                    <tr>\r\n                        <th rowSpan=\"2\">Farmer Number</th>\r\n                        <th rowSpan=\"2\">Farmer Name</th>\r\n                        <th rowSpan=\"2\">Gender</th>\r\n                        <th rowSpan=\"2\">Typology</th>\r\n                        <th rowSpan=\"1\" colSpan=\"6\">\r\n                            Functions\r\n                        </th>\r\n                        <th rowSpan=\"2\">Total</th>\r\n                    </tr>\r\n                    <tr>\r\n                        {this.state.legumeFunctions.map((funct) => {\r\n                            return (\r\n                                <th\r\n                                    key={\r\n                                        \"participatory-matrix-head-\" +\r\n                                        funct.label\r\n                                    }\r\n                                >\r\n                                    {funct.name}\r\n                                </th>\r\n                            );\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n            );\r\n        } else {\r\n            return <h1>Null State</h1>;\r\n        }\r\n    };\r\n\r\n    tableRows = () => {\r\n        if (this.state !== null) {\r\n            return this.state.farmers.map((farmer) => {\r\n                return (\r\n                    <tr key={\"participatory-matrix-body-\" + farmer.number}>\r\n                        {this.state.farmerAttributes.map((attribute) => {\r\n                            // Returning a value for each of the potential selections\r\n                            if (attribute.label === \"selections\") {\r\n                                return farmer.selections.map((selection) => {\r\n                                    return this.farmEntryFields({\r\n                                        key:\r\n                                            \"participatory-matrix-body-\" +\r\n                                            farmer.number +\r\n                                            selection.label,\r\n                                        attribute: attribute,\r\n                                        farmer: farmer,\r\n                                        legumeFunctions: selection,\r\n                                        farmer: farmer,\r\n                                    });\r\n                                });\r\n\r\n                                // Return the farmers number for the row number\r\n                            } else if (attribute.label === \"number\") {\r\n                                return (\r\n                                    <td\r\n                                        key={\r\n                                            \"select-input\" +\r\n                                            farmer.number +\r\n                                            \"-\" +\r\n                                            attribute.label\r\n                                        }\r\n                                    >\r\n                                        {farmer.number}\r\n                                    </td>\r\n                                );\r\n                                // Return the total score for that particular farmer\r\n                            } else if (attribute.label === \"total\") {\r\n                                return (\r\n                                    <td\r\n                                        key={\r\n                                            \"select-input\" +\r\n                                            farmer.number +\r\n                                            \"-\" +\r\n                                            attribute.label\r\n                                        }\r\n                                    >\r\n                                        {farmer.total}\r\n                                    </td>\r\n                                );\r\n                            } else {\r\n                                return this.farmEntryFields({\r\n                                    key:\r\n                                        \"farmEntry-field-\" +\r\n                                        attribute.label +\r\n                                        \"-\" +\r\n                                        farmer.number,\r\n                                    attribute: attribute,\r\n                                    farmer: farmer,\r\n                                });\r\n                            }\r\n                        })}\r\n                    </tr>\r\n                );\r\n            });\r\n        } else {\r\n            return <h1>Null State</h1>;\r\n        }\r\n    };\r\n\r\n    calculateAttributeRank = () => {\r\n        const scoresIndividual = _.cloneDeep(\r\n            this.state.summary.scoresIndividual\r\n        );\r\n\r\n        // Initialise the ranks\r\n        scoresIndividual.forEach((individualScore) => {\r\n            // Setting rank to zero\r\n            individualScore.scores[2].score = 1;\r\n        });\r\n\r\n        // Actually ranking the scores (draws included)\r\n        scoresIndividual.forEach((firstScore) => {\r\n            scoresIndividual.forEach((secondScore) => {\r\n                if (firstScore.scores[1].score > secondScore.scores[1].score) {\r\n                    firstScore.scores[2].score = firstScore.scores[2].score;\r\n                }\r\n                if (firstScore.scores[1].score < secondScore.scores[1].score) {\r\n                    firstScore.scores[2].score += 1;\r\n                }\r\n            });\r\n        });\r\n\r\n        // Averaging the ranks based on number of ties\r\n        const numberOfScores = this.state.legumeFunctions.length;\r\n        const numberOfOccurences = [];\r\n        for (let i = 0; i < numberOfScores; i++) {\r\n            numberOfOccurences[i] = {\r\n                number: i + 1,\r\n                occurences: 0,\r\n                conversion: i + 1,\r\n            };\r\n        }\r\n\r\n        // Finding out how to convert to ranking average\r\n        scoresIndividual.forEach((firstScore) => {\r\n            numberOfOccurences.forEach((rank) => {\r\n                if (firstScore.scores[2].score == rank.number) {\r\n                    rank.occurences += 1;\r\n                    rank.conversion =\r\n                        (rank.occurences + 2 * rank.number - 1) / 2;\r\n                }\r\n            });\r\n        });\r\n\r\n        //applying ranking average conversion\r\n        scoresIndividual.forEach((firstScore) => {\r\n            numberOfOccurences.forEach((rank) => {\r\n                if (firstScore.scores[2].score == rank.number) {\r\n                    firstScore.scores[2].score = rank.conversion;\r\n                }\r\n            });\r\n        });\r\n\r\n        this.setState((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                summary: {\r\n                    ...prevState.summary,\r\n                    scoresIndividual: scoresIndividual,\r\n                },\r\n            };\r\n        });\r\n    };\r\n\r\n    // Return a score from the farmer if they match the correct criteria\r\n    mapThroughFarmers(props) {\r\n        const farmers = _.cloneDeep(this.state.farmers);\r\n\r\n        let scoreSum = 0;\r\n        let relevantFarmers = 0;\r\n\r\n        farmers.map((farmer, farmerIndex) => {\r\n            farmer.selections.map((farmerSelection, farmerSelectionIndex) => {\r\n                // If the farmer has the correct gender\r\n                // If the farmer is selecting the correct attribute\r\n                // return Score\r\n                // else\r\n                // return 0\r\n\r\n                if (props.variable === \"typology\") {\r\n                    if (\r\n                        props.typology.toLowerCase() ===\r\n                        farmer.typology.toLowerCase() &&\r\n                        props.selection.label === farmerSelection.label\r\n                    ) {\r\n                        relevantFarmers += 1;\r\n                        scoreSum += parseFloat(\r\n                            (farmerSelection.score * 5) / 20\r\n                        );\r\n                    }\r\n                }\r\n                if (props.variable === \"gender\") {\r\n                    if (\r\n                        props.gender.toLowerCase() ===\r\n                        farmer.gender.toLowerCase() &&\r\n                        props.selection.label === farmerSelection.label\r\n                    ) {\r\n                        relevantFarmers += 1;\r\n                        scoreSum += parseFloat(\r\n                            (farmerSelection.score * 5) / 20\r\n                        );\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        if (relevantFarmers > 0) {\r\n            return parseFloat(scoreSum / relevantFarmers).toFixed(2);\r\n        }\r\n\r\n        return parseFloat(scoreSum).toFixed(2);\r\n    }\r\n\r\n    // updateGenderScore = () => {\r\n    //     const summary = _.cloneDeep(this.state.summary.scoresIndividual);\r\n\r\n    //     summary.map((scoresByLegumeFunction) => {\r\n    //         scoresByLegumeFunction.scores.map((individualScores) => {\r\n    //             if (individualScores.type === \"gender\") {\r\n    //                 individualScores.score = this.mapThroughFarmers({\r\n    //                     variable: \"gender\",\r\n    //                     gender: individualScores.label,\r\n    //                     selection: scoresByLegumeFunction.legumeFunction,\r\n    //                 });\r\n    //             }\r\n    //         });\r\n    //     });\r\n\r\n    //     this.setState((prevState) => {\r\n    //         return {\r\n    //             ...prevState,\r\n    //             summary: {\r\n    //                 ...prevState.summary,\r\n    //                 scoresIndividual: summary,\r\n    //             },\r\n    //         };\r\n    //     });\r\n    // };\r\n\r\n    updateTypologyScore = () => {\r\n        const summary = _.cloneDeep(this.state.summary.scoresIndividual);\r\n\r\n        summary.map((scoresByLegumeFunction) => {\r\n            scoresByLegumeFunction.scores.map((individualScores) => {\r\n                if (individualScores.type === \"typology\") {\r\n                    individualScores.score = this.mapThroughFarmers({\r\n                        variable: \"typology\",\r\n                        typology: individualScores.label,\r\n                        selection: scoresByLegumeFunction.legumeFunction,\r\n                    });\r\n                }\r\n                if (individualScores.type === \"gender\") {\r\n                    individualScores.score = this.mapThroughFarmers({\r\n                        variable: \"gender\",\r\n                        gender: individualScores.label,\r\n                        selection: scoresByLegumeFunction.legumeFunction,\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        this.setState(\r\n            (prevState) => {\r\n                return {\r\n                    ...prevState,\r\n                    summary: {\r\n                        ...prevState.summary,\r\n                        scoresIndividual: summary,\r\n                    },\r\n                };\r\n            },\r\n            () => {\r\n                this.calculateAttributeRank();\r\n            }\r\n        );\r\n    };\r\n\r\n    updateFarmerSummary = () => {\r\n        const summary = _.cloneDeep(this.state.summary.scoresIndividual);\r\n        const farmers = _.cloneDeep(this.state.farmers);\r\n        // Update total score per attribute\r\n        summary.forEach((summaryscore, summaryScoreIndex) => {\r\n            summary[summaryScoreIndex].scores[0].score = 0;\r\n            let totalScoreTemp = _.cloneDeep(\r\n                summary[summaryScoreIndex].scores[0].score\r\n            );\r\n            farmers.forEach((farmer) => {\r\n                farmer.selections.forEach((farmerSelection, selectionIndex) => {\r\n                    if (\r\n                        farmerSelection.label ==\r\n                        summaryscore.legumeFunction.label\r\n                    ) {\r\n                        // Setting total score\r\n\r\n                        totalScoreTemp +=\r\n                            farmerSelection.score / farmers.length;\r\n\r\n                        summary[summaryScoreIndex].scores[0].score = parseFloat(\r\n                            parseFloat(totalScoreTemp).toFixed(2)\r\n                        );\r\n                        // Setting 0-5 score\r\n                        summary[summaryScoreIndex].scores[1].score = parseFloat(\r\n                            parseFloat((totalScoreTemp * 5) / 20).toFixed(2)\r\n                        );\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        this.setState(\r\n            (prevState) => {\r\n                return {\r\n                    ...prevState,\r\n                    summary: {\r\n                        ...prevState.summary,\r\n                        scoresIndividual: summary,\r\n                    },\r\n                };\r\n            },\r\n            () => {\r\n                //this.updateGenderScore();\r\n                this.updateTypologyScore();\r\n            }\r\n        );\r\n    };\r\n\r\n    resultsTable = () => {\r\n        return (\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th rowSpan=\"2\">Summary Type</th>\r\n                        <th\r\n                            rowSpan=\"1\"\r\n                            colSpan={this.state.legumeFunctions.length}\r\n                        >\r\n                            Function\r\n                        </th>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        {this.state.legumeFunctions.map((funct) => {\r\n                            return (\r\n                                <th\r\n                                    key={\r\n                                        \"participatory-matrix-head-\" +\r\n                                        funct.label\r\n                                    }\r\n                                >\r\n                                    {funct.name}\r\n                                </th>\r\n                            );\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {this.state.summary.scoreTypes.map(\r\n                        (type, scoreTypeIndex) => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{type.name}</td>\r\n                                    {this.state.summary.scoresIndividual.map(\r\n                                        (individualScore) => {\r\n                                            return (\r\n                                                <td>\r\n                                                    {\r\n                                                        individualScore.scores[\r\n                                                            scoreTypeIndex\r\n                                                        ].score\r\n                                                    }\r\n                                                </td>\r\n                                            );\r\n                                        }\r\n                                    )}\r\n                                </tr>\r\n                            );\r\n                        }\r\n                    )}\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"data-entry-container\">\r\n                <div className=\"card-container\">\r\n                    <Card>\r\n                        <Card.Header className=\"bg-dark text-white\">\r\n                            <h2>Participatory Matrix Scoring</h2>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                Purpose of the exercise is to assess what\r\n                                individual farmers of different gender and\r\n                                typology would look for in any new intervention\r\n                                involving legumes. This is a separate approach\r\n                                to establishing/validating community aspirations\r\n                                on legume functions. This helps to triangulate\r\n                                the results of the previous exercise. Farmers\r\n                                are given 20 beans/seeds and asked to allocate\r\n                                them according to the importance of the various\r\n                                functions for their future aspirations. The data\r\n                                from this exercise produces an overall community\r\n                                score for each legume function but also allows\r\n                                variation according to type and gender to be\r\n                                assessed.\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <Form>\r\n                    <Table striped bordered hover>\r\n                        {this.tableHeader()}\r\n                        <tbody>{this.tableRows()}</tbody>\r\n                    </Table>\r\n                    <Button\r\n                        style={{ \"margin-bottom\": \"2em\" }}\r\n                        className=\"float-right\"\r\n                        onClick={this.addFarmer}\r\n                    >\r\n                        Add Farmer\r\n                    </Button>\r\n                </Form>\r\n\r\n                {this.resultsTable()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nParticipatoryMatrix.contextType = AppContext;\r\n\r\nexport default ParticipatoryMatrix;\r\n","import { legfunc } from \"../data-entry-component/data-entry-data\";\r\n\r\nlet PairwiseRankingData = {\r\n    legumeFunctions: legfunc,\r\n    male: {\r\n        pairwiseSelection: [],\r\n        totals: [],\r\n    },\r\n    female: {\r\n        pairwiseSelection: [],\r\n        totals: [],\r\n    },\r\n    averages: [],\r\n};\r\n\r\n// Creating all of the potential pairwise functions for each of the entries\r\nlet previousidentifiers = [];\r\nfor (\r\n    let outerArrayIndex = 0;\r\n    outerArrayIndex < PairwiseRankingData.legumeFunctions.length;\r\n    outerArrayIndex++\r\n) {\r\n    let function1 = PairwiseRankingData.legumeFunctions[outerArrayIndex];\r\n\r\n    PairwiseRankingData.male.totals.push({\r\n        attribute: function1,\r\n        value: 0,\r\n    });\r\n\r\n    PairwiseRankingData.female.totals.push({\r\n        attribute: function1,\r\n        value: 0,\r\n    });\r\n\r\n    PairwiseRankingData.averages.push({\r\n        attribute: function1,\r\n        value: 0,\r\n    });\r\n\r\n    for (\r\n        let innerArrayIndex = 0;\r\n        innerArrayIndex < PairwiseRankingData.legumeFunctions.length;\r\n        innerArrayIndex++\r\n    ) {\r\n        let function2 = PairwiseRankingData.legumeFunctions[innerArrayIndex];\r\n\r\n        // Checking if the pair is the same\r\n        if (function1 !== function2) {\r\n            let intermediateidentifier = [function1.label, function2.label];\r\n            intermediateidentifier.sort();\r\n            let identifier = intermediateidentifier.join(\"_\");\r\n\r\n            if (!previousidentifiers.includes(identifier)) {\r\n                PairwiseRankingData.male.pairwiseSelection.push({\r\n                    funct1: function1,\r\n                    funct2: function2,\r\n                    identifier: identifier,\r\n                    value: function1,\r\n                });\r\n\r\n                PairwiseRankingData.female.pairwiseSelection.push({\r\n                    funct1: function1,\r\n                    funct2: function2,\r\n                    identifier: identifier,\r\n                    value: function1,\r\n                });\r\n                previousidentifiers.push(identifier);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default PairwiseRankingData;\r\n","import React, { Component } from \"react\";\r\nimport PairwiseRankingData from \"./pairwise-ranking-data\";\r\n\r\nimport \"./pairwise-ranking-component.css\";\r\nimport \"../data-entry-component/data-entry-component.css\";\r\n\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nimport AppContext from \"../../AppContext\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nclass PairwiseRanking extends Component {\r\n    //static contextType = AppContext;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = _.cloneDeep(PairwiseRankingData);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(this.state);\r\n\r\n        if (this.context.currentProject.pairWiseScores !== undefined) {\r\n            let newState = _.cloneDeep(\r\n                this.context.currentProject.pairWiseScores\r\n            );\r\n            this.setState(newState, () => {\r\n                this.upDateTotalScore(\"male\");\r\n                this.upDateTotalScore(\"female\");\r\n            });\r\n        } else {\r\n            let newContext = _.cloneDeep(this.state);\r\n            this.context.currentProject.pairWiseScores = newContext;\r\n            this.upDateTotalScore(\"male\");\r\n            this.upDateTotalScore(\"female\");\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        let newContext = _.cloneDeep(this.state);\r\n        this.context.currentProject.pairWiseScores = newContext;\r\n        console.log(this.state);\r\n    }\r\n\r\n    updateSelections = (event, props) => {\r\n        if (event.target.value == \"\") {\r\n            alert(\"Must not select empty value\");\r\n            return;\r\n        }\r\n        // Converting legume function name into legume function item\r\n        let selectedValue = \"\";\r\n\r\n        if (event.target.value === props.funct1.name) {\r\n            selectedValue = props.funct1;\r\n        }\r\n        if (event.target.value === props.funct2.name) {\r\n            selectedValue = props.funct2;\r\n        }\r\n\r\n        let selectionArr = _.cloneDeep(\r\n            this.state[props.gender].pairwiseSelection\r\n        );\r\n        selectionArr.forEach((selectionItem, selectionIndex) => {\r\n            if (\r\n                selectionItem.funct1.label === props.funct1.label &&\r\n                selectionItem.funct2.label === props.funct2.label\r\n            ) {\r\n                selectionArr[selectionIndex].value = selectedValue;\r\n                console.log(selectionArr);\r\n            }\r\n        });\r\n        //console.log(\"selection: \" + JSON.stringify(selectionArr));\r\n\r\n        const gender = props.gender;\r\n        this.setState(\r\n            (prevState) => ({\r\n                [gender]: {\r\n                    ...prevState[gender],\r\n                    pairwiseSelection: selectionArr,\r\n                },\r\n            }),\r\n            () => {\r\n                this.upDateTotalScore(gender);\r\n            }\r\n        );\r\n    };\r\n\r\n    upDateTotalScore = (gender) => {\r\n        const totalsArray = _.cloneDeep(this.state[gender].totals);\r\n        totalsArray.forEach((totalsItem, totalsIndex) => {\r\n            totalsArray[totalsIndex].value = 0;\r\n            this.state[gender].pairwiseSelection.forEach((selectionItem) => {\r\n                if (selectionItem.value.label === totalsItem.attribute.label) {\r\n                    totalsArray[totalsIndex].value++;\r\n                }\r\n            });\r\n        });\r\n        this.setState(\r\n            (prevState) => ({\r\n                [gender]: {\r\n                    ...prevState[gender],\r\n                    totals: totalsArray,\r\n                },\r\n            }),\r\n            () => {\r\n                this.updateAverage();\r\n            }\r\n        );\r\n\r\n        //this.updateAverage();\r\n    };\r\n\r\n    updateAverage = () => {\r\n        const totalsArrayMale = _.cloneDeep(this.state[\"male\"].totals);\r\n        const totalsArrayFemale = _.cloneDeep(this.state[\"female\"].totals);\r\n\r\n        const newAverages = _.cloneDeep(this.state.averages);\r\n\r\n        newAverages.map((average, index) => {\r\n            const newAverage =\r\n                (totalsArrayMale[index].value +\r\n                    totalsArrayFemale[index].value) /\r\n                2;\r\n            newAverages[index].value = newAverage;\r\n            this.setState({\r\n                averages: newAverages,\r\n            });\r\n        });\r\n    };\r\n\r\n    pairWiseTable = (props) => {\r\n        const tableGender = props.gender;\r\n        return (\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Pair</th>\r\n                        <th>Selection Female</th>\r\n                        <th>Selection Male</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.state[props.gender].pairwiseSelection.map(\r\n                        (item, itemIndex) => {\r\n                            return (\r\n                                <tr\r\n                                    key={\r\n                                        \"pairwise-ranking-table-row\" +\r\n                                        item.funct1.name +\r\n                                        item.funct2.name\r\n                                    }\r\n                                >\r\n                                    <td\r\n                                        key={\r\n                                            \"pairwise-ranking-table-item-name\" +\r\n                                            item.funct1.name +\r\n                                            \"-\" +\r\n                                            item.funct2.name\r\n                                        }\r\n                                    >\r\n                                        {item.funct1.name +\r\n                                            \" vs \" +\r\n                                            item.funct2.name}\r\n                                    </td>\r\n                                    <td\r\n                                        key={\r\n                                            \"pairwise-ranking-table-item-form\" +\r\n                                            item.funct1.name +\r\n                                            \"-\" +\r\n                                            item.funct2.name +\r\n                                            \"-female\"\r\n                                        }\r\n                                    >\r\n                                        <FormControl\r\n                                            value={\r\n                                                this.state[\"female\"]\r\n                                                    .pairwiseSelection[\r\n                                                    itemIndex\r\n                                                ].value.name\r\n                                            }\r\n                                            key={\r\n                                                \"pairwise-ranking-table-form\" +\r\n                                                item.funct1.name +\r\n                                                \"-\" +\r\n                                                item.funct2.name +\r\n                                                \"-female\"\r\n                                            }\r\n                                            as=\"select\"\r\n                                            onChange={(event) =>\r\n                                                this.updateSelections(event, {\r\n                                                    funct1: item.funct1,\r\n                                                    funct2: item.funct2,\r\n                                                    gender: \"female\",\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <option>{item.funct1.name}</option>\r\n                                            <option>{item.funct2.name}</option>\r\n                                        </FormControl>\r\n                                    </td>\r\n                                    <td\r\n                                        key={\r\n                                            \"pairwise-ranking-table-item-form\" +\r\n                                            item.funct1.name +\r\n                                            \"-\" +\r\n                                            item.funct2.name +\r\n                                            \"-male\"\r\n                                        }\r\n                                    >\r\n                                        <FormControl\r\n                                            as=\"select\"\r\n                                            value={\r\n                                                this.state[\"male\"]\r\n                                                    .pairwiseSelection[\r\n                                                    itemIndex\r\n                                                ].value.name\r\n                                            }\r\n                                            key={\r\n                                                \"pairwise-ranking-table-form\" +\r\n                                                item.funct1.name +\r\n                                                \"-\" +\r\n                                                item.funct2.name +\r\n                                                \"-male\"\r\n                                            }\r\n                                            onChange={(event) =>\r\n                                                this.updateSelections(event, {\r\n                                                    funct1: item.funct1,\r\n                                                    funct2: item.funct2,\r\n                                                    gender: \"male\",\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <option>{item.funct1.name}</option>\r\n                                            <option>{item.funct2.name}</option>\r\n                                        </FormControl>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        }\r\n                    )}\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    };\r\n\r\n    pairWiseResultsTable = (props) => {\r\n        return (\r\n            <Table striped bordered hover className=\"table-style\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Attribute</th>\r\n                        <th>Count Female</th>\r\n                        <th>Count Male</th>\r\n                        <th>Average Count</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.state.legumeFunctions.map((item, index) => {\r\n                        return (\r\n                            <tr key={\"pairwise-results-table-row-\" + item.name}>\r\n                                <td\r\n                                    key={\r\n                                        \"pairwise-results-table-row-item-\" +\r\n                                        item.name\r\n                                    }\r\n                                >\r\n                                    {item.name}\r\n                                </td>\r\n                                <td\r\n                                    key={\r\n                                        \"pairwise-results-table-row-item-female-\" +\r\n                                        item.name\r\n                                    }\r\n                                >\r\n                                    {this.state.female.totals[index].value}\r\n                                </td>\r\n                                <td\r\n                                    key={\r\n                                        \"pairwise-results-table-row-item-male-\" +\r\n                                        item.name\r\n                                    }\r\n                                >\r\n                                    {this.state.male.totals[index].value}\r\n                                </td>\r\n\r\n                                <td\r\n                                    key={\r\n                                        \"pairwise-results-table-row-item-average-\" +\r\n                                        item.name\r\n                                    }\r\n                                >\r\n                                    {this.state.averages[index].value}\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                    {/*this.state[props.gender].totals.map((item) => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{item.attribute.name}</td>\r\n                                <td>{item.value}</td>\r\n                            </tr>\r\n                        );\r\n                    })*/}\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"data-entry-container\">\r\n                <div className=\"card-container\">\r\n                    <Card>\r\n                        <Card.Header className=\"bg-dark text-white\">\r\n                            <h2>Pairwise Component Ranking</h2>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                This exercise is carried out as a group. The\r\n                                method for this exercise involves presenting all\r\n                                possible pairs of functions to participants and\r\n                                asking them to vote on which is more important.\r\n                                The exercise is conducted separately for men and\r\n                                women.\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"table-container\">\r\n                    <Form className=\"table-container\">\r\n                        {this.pairWiseTable({ gender: \"female\" })}\r\n                    </Form>\r\n                    {this.pairWiseResultsTable({\r\n                        gender: \"female\",\r\n                        className: \"results-table-pairwise\",\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"table-container\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nPairwiseRanking.contextType = AppContext;\r\n\r\nexport default PairwiseRanking;\r\n","import React from \"react\";\r\n\r\nimport \"./data-entry-component.css\";\r\n\r\nimport AgroEco from \"../agro-ecological-filter-component/agro-ecological-filter\";\r\nimport ContextScore from \"../context-scores-component/context-scores-component\";\r\nimport ParticipatoryMatrix from \"../participatory-matrix-scoring-component/participatory-matrix-scoring\";\r\nimport PairwiseRanking from \"../pairwise-ranking-component/pairwise-ranking-component\";\r\n\r\n// import Results from \"../results-component/results-component\";\r\n\r\nimport AppContext from \"../../AppContext\";\r\n\r\nclass DataEntry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            components: [\r\n                <ContextScore key=\"contextScore\" />,\r\n                <PairwiseRanking key=\"pairwise\" />,\r\n                <ParticipatoryMatrix key=\"matrix\" />,\r\n                <AgroEco key=\"agroeco\" />,\r\n                //<Results key=\"results\" />,\r\n            ],\r\n        };\r\n    }\r\n\r\n    renderComponents = () => {};\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <AppContext.Provider value={AppContext}> */}\r\n                <div className=\"data-entry-container\">\r\n                    {this.state.components.map((component) => {\r\n                        return component;\r\n                    })}\r\n                    ;\r\n                </div>\r\n                {/* </AppContext.Provider> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDataEntry.contextType = AppContext;\r\n\r\nexport default DataEntry;\r\n","import {\r\n    legfunc,\r\n    attributes,\r\n    biofilters,\r\n} from \"../data-entry-component/data-entry-data\";\r\nimport _ from \"lodash\";\r\n\r\n// data on all of the legumes initially\r\n\r\n// go through the legume functions, and average matrix score and pairwise ranking score\r\nconst functionFitForm = [];\r\nlet legfuncCopy = _.cloneDeep(legfunc);\r\nlegfuncCopy.forEach((legumefunction) => {\r\n    functionFitForm.push({\r\n        legumeFunction: legumefunction,\r\n        score: 0,\r\n    });\r\n});\r\n\r\n// simply pass through the context scores\r\nconst contextFitForm = [];\r\nlet attributesCopy = _.cloneDeep(attributes);\r\nattributesCopy.forEach((attribute) => {\r\n    contextFitForm.push({\r\n        attribute: attribute,\r\n        score: 0,\r\n    });\r\n});\r\n\r\n// Adding all of the attributes to the initial legumes\r\n// For each component we have to add an averageScore and an overall rank\r\n// For the final summary, we are only presenting the ranks\r\nlet legumeResultsToAdd = {\r\n    functionFit: [],\r\n    contextFit: [],\r\n    agroEcoFit: [],\r\n    overallFit: [],\r\n};\r\n\r\n// Adding legume function scores to each legume\r\nattributesCopy.map((attribute) => {\r\n    legumeResultsToAdd.contextFit.push({\r\n        attribute: attribute,\r\n        score: 0,\r\n    });\r\n});\r\nlegumeResultsToAdd.contextFit.push({\r\n    overallFit: 0,\r\n});\r\nlegumeResultsToAdd.contextFit.push({\r\n    overallRank: 1,\r\n});\r\n\r\n// Adding context scores to each legume\r\nlegfuncCopy.map((legfunction) => {\r\n    legumeResultsToAdd.functionFit.push({\r\n        legumeFunction: legfunction,\r\n        score: 0,\r\n    });\r\n});\r\nlegumeResultsToAdd.functionFit.push({\r\n    overallFit: 0,\r\n});\r\nlegumeResultsToAdd.functionFit.push({\r\n    overallRank: 1,\r\n});\r\n\r\n// Adding agroEco scores to each legume\r\nconst agroEcoCopy = _.cloneDeep(biofilters);\r\n\r\nagroEcoCopy.map((agroecofiltter) => {\r\n    legumeResultsToAdd.agroEcoFit.push({\r\n        agroEcoFilter: agroecofiltter,\r\n        score: 0,\r\n    });\r\n});\r\nlegumeResultsToAdd.agroEcoFit.push({\r\n    overallFit: 0,\r\n});\r\nlegumeResultsToAdd.agroEcoFit.push({\r\n    overallRank: 1,\r\n});\r\n\r\n// Overall Scores\r\nlegumeResultsToAdd.overallFit.push({\r\n    overallFit: 0,\r\n});\r\nlegumeResultsToAdd.overallFit.push({\r\n    overallRank: 1,\r\n});\r\n\r\nconst agroEcoFilters = [];\r\n\r\nconst biofiltersCopy = _.cloneDeep(biofilters);\r\nconst biofiltersCleaned = [];\r\nbiofiltersCopy.map((biofilter) => {\r\n    biofiltersCleaned.push({\r\n        name: biofilter.name,\r\n        label: biofilter.label,\r\n    });\r\n});\r\n\r\n// Compiling all of the results data together\r\nconst resultsData = {\r\n    legumeFunctions: legfuncCopy,\r\n    attributes: attributes,\r\n    agroEcoFilters: biofiltersCleaned,\r\n    agroEcoFitSummary: agroEcoCopy,\r\n\r\n    functionFitSummary: functionFitForm,\r\n    contextFitSummary: contextFitForm,\r\n    emptyScoresForLegume: legumeResultsToAdd,\r\n    legumes: [],\r\n\r\n    resultsFilter: {\r\n        selectOptions: [\r\n            \"Summary\",\r\n            \"AgroEco Scores\",\r\n            \"Context Scores\",\r\n            \"Function Scores\",\r\n        ],\r\n        orderOptions: [\r\n            \"Overall Score\",\r\n            \"AgroEco Score\",\r\n            \"Context Score\",\r\n            \"Function Score\",\r\n        ],\r\n        numberOfLegumesOptions: [\"5\", \"10\", \"20\", \"All\"],\r\n\r\n        selection: {\r\n            whichResults: \"Summary\",\r\n            order: \"Overall Score\",\r\n            numberOfLegumes: \"5\",\r\n        },\r\n    },\r\n\r\n    formFilled: false,\r\n};\r\n\r\nexport { resultsData };\r\n","export const allLegumes = [\r\n    {\r\n        name: \"Pigeon pea (Cajanus cajan)\",\r\n        type: \"Grain legume perennial\",\r\n        food: 4,\r\n        feed: 2,\r\n        income: 3,\r\n        \"erosion-control\": 3,\r\n        fuel: 2,\r\n        \"soil-fertility\": 3,\r\n        land: 1,\r\n        labour: 2,\r\n        seed: 1,\r\n        \"inp-serv\": 1,\r\n        \"knowl-skill\": 2,\r\n        water: 1,\r\n        markets: 2,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 530.0, max: 4030.0 }],\r\n        temp: [{ min: 16.0, max: 35.0 }],\r\n        alt: [{ min: 0.0, max: 2000.0 }],\r\n        soilpH: [{ min: 4.5, max: 8.0 }],\r\n    },\r\n    {\r\n        name:\r\n            \"Climbing beans (Phaseolus vulgaris), local types available in W Ethiopia, harvested several (4-5) years before reseeding)\",\r\n        type: \"Grain legume perennial\",\r\n        food: 4,\r\n        feed: 2,\r\n        income: 4,\r\n        \"erosion-control\": 1,\r\n        fuel: 0,\r\n        \"soil-fertility\": 2,\r\n        land: 1,\r\n        labour: 1,\r\n        seed: 1,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 2,\r\n        water: 3,\r\n        markets: 2,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 600.0, max: 3000.0 }],\r\n        temp: [{ min: 6.0, max: 29.0 }],\r\n        alt: [{ min: 500.0, max: 2000.0 }],\r\n        soilpH: [{ min: 5.0, max: 7.0 }],\r\n    },\r\n    {\r\n        name: \"Climbing beans (Phaseolus vulgaris) annual type\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 4,\r\n        feed: 2,\r\n        income: 4,\r\n        \"erosion-control\": 1,\r\n        fuel: 0,\r\n        \"soil-fertility\": 2,\r\n        land: 1,\r\n        labour: 3,\r\n        seed: 2,\r\n        \"inp-serv\": 3,\r\n        \"knowl-skill\": 3,\r\n        water: 3,\r\n        markets: 2,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 600.0, max: 3000.0 }],\r\n        temp: [{ min: 6.0, max: 29.0 }],\r\n        alt: [{ min: 500.0, max: 2000.0 }],\r\n        soilpH: [{ min: 5.0, max: 7.0 }],\r\n    },\r\n    {\r\n        name: \"Bush bean (Phaseolus vulgaris)\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 4,\r\n        feed: 1,\r\n        income: 4,\r\n        \"erosion-control\": 1,\r\n        fuel: 1,\r\n        \"soil-fertility\": 1,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 1,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 3,\r\n        water: 2,\r\n        markets: 2,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 600.0, max: 3000.0 }],\r\n        temp: [{ min: 6.0, max: 29.0 }],\r\n        alt: [{ min: 500.0, max: 2000.0 }],\r\n        soilpH: [{ min: 5.0, max: 7.0 }],\r\n    },\r\n    {\r\n        name: \"Groundnuts (Arachis hypogaea L.)\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 3,\r\n        feed: 2,\r\n        income: 4,\r\n        \"erosion-control\": 2,\r\n        fuel: 1,\r\n        \"soil-fertility\": 3,\r\n        land: 4,\r\n        labour: 4,\r\n        seed: 1,\r\n        \"inp-serv\": 3,\r\n        \"knowl-skill\": 3,\r\n        water: 2,\r\n        markets: 1,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 310.0, max: 3000.0 }],\r\n        temp: [{ min: 10.0, max: 45.0 }],\r\n        alt: [{ min: 0.0, max: 1600.0 }],\r\n        soilpH: [{ min: 4.0, max: 8.0 }],\r\n    },\r\n    {\r\n        name: \"Soybean grain type (Glycine max L.)\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 3,\r\n        feed: 2,\r\n        income: 4,\r\n        \"erosion-control\": 2,\r\n        fuel: 1,\r\n        \"soil-fertility\": 2,\r\n        land: 3,\r\n        labour: 3,\r\n        seed: 2,\r\n        \"inp-serv\": 3,\r\n        \"knowl-skill\": 3,\r\n        water: 2,\r\n        markets: 4,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 700.0, max: 2000.0 }],\r\n        temp: [{ min: 10.0, max: 30.0 }],\r\n        alt: [{ min: 0.0, max: 1400.0 }],\r\n        soilpH: [{ min: 5.0, max: 7.0 }],\r\n    },\r\n    {\r\n        name: \"Soybean/dual purpose grain plus fodder (Glycine max L.)\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 2,\r\n        feed: 2,\r\n        income: 4,\r\n        \"erosion-control\": 3,\r\n        fuel: 1,\r\n        \"soil-fertility\": 4,\r\n        land: 3,\r\n        labour: 3,\r\n        seed: 2,\r\n        \"inp-serv\": 3,\r\n        \"knowl-skill\": 3,\r\n        water: 2,\r\n        markets: 4,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 700.0, max: 2000.0 }],\r\n        temp: [{ min: 10.0, max: 30.0 }],\r\n        alt: [{ min: 0.0, max: 1400.0 }],\r\n        soilpH: [{ min: 5.0, max: 7.0 }],\r\n    },\r\n    {\r\n        name: \"Faba bean (Vicia faba L.) \",\r\n        type: \"Grain legume seasonal\",\r\n        food: 4,\r\n        feed: 2,\r\n        income: 4,\r\n        \"erosion-control\": 1,\r\n        fuel: 0,\r\n        \"soil-fertility\": 3,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 4,\r\n        \"inp-serv\": 3,\r\n        \"knowl-skill\": 2,\r\n        water: 2,\r\n        markets: 2,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 300.0, max: 2090.0 }],\r\n        temp: [{ min: 6.0, max: 28.0 }],\r\n        alt: [{ min: 1800.0, max: 3200.0 }],\r\n        soilpH: [{ min: 4.5, max: 8.3 }],\r\n    },\r\n    {\r\n        name: \"Cowpea \\u2013 grain type (Vigna unguiculata)\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 4,\r\n        feed: 1,\r\n        income: 4,\r\n        \"erosion-control\": 1,\r\n        fuel: 0,\r\n        \"soil-fertility\": 2,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 2,\r\n        \"inp-serv\": 3,\r\n        \"knowl-skill\": 2,\r\n        water: 1,\r\n        markets: 2,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 400.0, max: 2000.0 }],\r\n        temp: [{ min: 13.0, max: 28.0 }],\r\n        alt: [{ min: 0.0, max: 1500.0 }],\r\n        soilpH: [{ min: 4.3, max: 7.9 }],\r\n    },\r\n    {\r\n        name: \"Cowpea \\u2013 forage type (Vigna unguiculata)\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 2,\r\n        feed: 4,\r\n        income: 2,\r\n        \"erosion-control\": 2,\r\n        fuel: 0,\r\n        \"soil-fertility\": 2,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 3,\r\n        \"inp-serv\": 3,\r\n        \"knowl-skill\": 2,\r\n        water: 1,\r\n        markets: 3,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 400.0, max: 2000.0 }],\r\n        temp: [{ min: 13.0, max: 28.0 }],\r\n        alt: [{ min: 0.0, max: 1500.0 }],\r\n        soilpH: [{ min: 4.3, max: 7.9 }],\r\n    },\r\n    {\r\n        name: \"Bambara nut (Voandzou subterraneous)\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 4,\r\n        feed: 0,\r\n        income: 0,\r\n        \"erosion-control\": 1,\r\n        fuel: 0,\r\n        \"soil-fertility\": 2,\r\n        land: 1,\r\n        labour: 1,\r\n        seed: 1,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 1,\r\n        water: 1,\r\n        markets: 2,\r\n        \"agroecology-source\": null,\r\n        rainfall: [{ min: null, max: null }],\r\n        temp: [{ min: null, max: null }],\r\n        alt: [{ min: null, max: null }],\r\n        soilpH: [{ min: null, max: null }],\r\n    },\r\n    {\r\n        name:\r\n            \"Chickpea (Cicer arietinum L.) \\u2013 desi type (for food)- following the main crop\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 4,\r\n        feed: 2,\r\n        income: 4,\r\n        \"erosion-control\": 1,\r\n        fuel: 0,\r\n        \"soil-fertility\": 2,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 1,\r\n        \"inp-serv\": 3,\r\n        \"knowl-skill\": 2,\r\n        water: 1,\r\n        markets: 2,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 600.0, max: 1500.0 }],\r\n        temp: [{ min: 7.0, max: 28.0 }],\r\n        alt: [{ min: 1170.0, max: 1900.0 }],\r\n        soilpH: [{ min: 5.0, max: 8.3 }],\r\n    },\r\n    {\r\n        name:\r\n            \"Chickpea (Cicer arietinum L.) \\u2013 kabuli type (for export)-main crop\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 3,\r\n        feed: 2,\r\n        income: 4,\r\n        \"erosion-control\": 1,\r\n        fuel: 0,\r\n        \"soil-fertility\": 2,\r\n        land: 3,\r\n        labour: 3,\r\n        seed: 3,\r\n        \"inp-serv\": 3,\r\n        \"knowl-skill\": 3,\r\n        water: 1,\r\n        markets: 3,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 600.0, max: 1500.0 }],\r\n        temp: [{ min: 7.0, max: 28.0 }],\r\n        alt: [{ min: 1170.0, max: 1900.0 }],\r\n        soilpH: [{ min: 5.0, max: 8.3 }],\r\n    },\r\n    {\r\n        name: \"Green grams/Mung bean (Vigna radiata)\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 4,\r\n        feed: 1,\r\n        income: 4,\r\n        \"erosion-control\": 1,\r\n        fuel: 0,\r\n        \"soil-fertility\": 1,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 1,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 1,\r\n        water: 2,\r\n        markets: 3,\r\n        \"agroecology-source\": null,\r\n        rainfall: [{ min: null, max: null }],\r\n        temp: [{ min: null, max: null }],\r\n        alt: [{ min: null, max: null }],\r\n        soilpH: [{ min: null, max: null }],\r\n    },\r\n    {\r\n        name: \"Lentils (Lens culinaris Medik.)\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 4,\r\n        feed: 3,\r\n        income: 4,\r\n        \"erosion-control\": 1,\r\n        fuel: 0,\r\n        \"soil-fertility\": 2,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 2,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 2,\r\n        water: 1,\r\n        markets: 2,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 280.0, max: 2430.0 }],\r\n        temp: [{ min: 6.0, max: 27.0 }],\r\n        alt: [{ min: 1000.0, max: 3800.0 }],\r\n        soilpH: [{ min: 4.5, max: 8.2 }],\r\n    },\r\n    {\r\n        name: \"Lupins \\u2013 Sweet lupin (new), traditional (Et)\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 2,\r\n        feed: 1,\r\n        income: 3,\r\n        \"erosion-control\": 2,\r\n        fuel: 1,\r\n        \"soil-fertility\": 4,\r\n        land: 1,\r\n        labour: 1,\r\n        seed: 2,\r\n        \"inp-serv\": 0,\r\n        \"knowl-skill\": 1,\r\n        water: 1,\r\n        markets: 3,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 350.0, max: 1660.0 }],\r\n        temp: [{ min: 6.0, max: 26.0 }],\r\n        alt: [{ min: 1600.0, max: 3000.0 }],\r\n        soilpH: [{ min: 5.0, max: 7.0 }],\r\n    },\r\n    {\r\n        name:\r\n            \"Field Pea (Pisum sativum L), adapted to high rainfall environment\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 4,\r\n        feed: 3,\r\n        income: 4,\r\n        \"erosion-control\": 2,\r\n        fuel: 0,\r\n        \"soil-fertility\": 2,\r\n        land: 3,\r\n        labour: 2,\r\n        seed: 2,\r\n        \"inp-serv\": 1,\r\n        \"knowl-skill\": 2,\r\n        water: 3,\r\n        markets: 1,\r\n        \"agroecology-source\": null,\r\n        rainfall: [{ min: null, max: null }],\r\n        temp: [{ min: null, max: null }],\r\n        alt: [{ min: null, max: null }],\r\n        soilpH: [{ min: null, max: null }],\r\n    },\r\n    {\r\n        name:\r\n            \"Field pea (Pisum absynicum var. sativum)-adapted to low rainfall environment\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 4,\r\n        feed: 3,\r\n        income: 3,\r\n        \"erosion-control\": 2,\r\n        fuel: 1,\r\n        \"soil-fertility\": 2,\r\n        land: 2,\r\n        labour: 2,\r\n        seed: 3,\r\n        \"inp-serv\": 1,\r\n        \"knowl-skill\": 2,\r\n        water: 1,\r\n        markets: 2,\r\n        \"agroecology-source\": null,\r\n        rainfall: [{ min: null, max: null }],\r\n        temp: [{ min: null, max: null }],\r\n        alt: [{ min: null, max: null }],\r\n        soilpH: [{ min: null, max: null }],\r\n    },\r\n    {\r\n        name: \"Grass pea \\u2013 (Lathyrus spp)\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 3,\r\n        feed: 1,\r\n        income: 3,\r\n        \"erosion-control\": 1,\r\n        fuel: 0,\r\n        \"soil-fertility\": 3,\r\n        land: 2,\r\n        labour: 2,\r\n        seed: 1,\r\n        \"inp-serv\": 1,\r\n        \"knowl-skill\": 1,\r\n        water: 1,\r\n        markets: 2,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 320.0, max: 1360.0 }],\r\n        temp: [{ min: 5.0, max: 27.0 }],\r\n        alt: [{ min: 800.0, max: 3000.0 }],\r\n        soilpH: [{ min: 4.5, max: 8.3 }],\r\n    },\r\n    {\r\n        name: \"Cluster bean (Cyamopsis tetragonoloba L.)\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 3,\r\n        feed: 1,\r\n        income: 3,\r\n        \"erosion-control\": 1,\r\n        fuel: 0,\r\n        \"soil-fertility\": 3,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 4,\r\n        \"inp-serv\": 3,\r\n        \"knowl-skill\": 2,\r\n        water: 2,\r\n        markets: 2,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 380.0, max: 2410.0 }],\r\n        temp: [{ min: 12.0, max: 35.0 }],\r\n        alt: [{ min: 0.0, max: 1000.0 }],\r\n        soilpH: [{ min: 5.3, max: 8.3 }],\r\n    },\r\n    {\r\n        name: \"Dolichos lablab (Lablab purpureus)- for grain\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 4,\r\n        feed: 4,\r\n        income: 3,\r\n        \"erosion-control\": 2,\r\n        fuel: 1,\r\n        \"soil-fertility\": 3,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 2,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 2,\r\n        water: 1,\r\n        markets: 3,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 600.0, max: 2500.0 }],\r\n        temp: [{ min: 15.0, max: 35.0 }],\r\n        alt: [{ min: 0.0, max: 2100.0 }],\r\n        soilpH: [{ min: 4.5, max: 7.8 }],\r\n    },\r\n    {\r\n        name: \"French beans (Phaseolus vulgaris)\",\r\n        type: \"Grain legume seasonal\",\r\n        food: 4,\r\n        feed: 0,\r\n        income: 4,\r\n        \"erosion-control\": 1,\r\n        fuel: 0,\r\n        \"soil-fertility\": 1,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 4,\r\n        \"inp-serv\": 4,\r\n        \"knowl-skill\": 3,\r\n        water: 4,\r\n        markets: 4,\r\n        \"agroecology-source\": null,\r\n        rainfall: [{ min: null, max: null }],\r\n        temp: [{ min: null, max: null }],\r\n        alt: [{ min: null, max: null }],\r\n        soilpH: [{ min: null, max: null }],\r\n    },\r\n    {\r\n        name: \"Desmodium silverleaf (Desmodium uncinatum)\",\r\n        type:\r\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\r\n        food: 0,\r\n        feed: 4,\r\n        income: 2,\r\n        \"erosion-control\": 3,\r\n        fuel: 0,\r\n        \"soil-fertility\": 3,\r\n        land: 3,\r\n        labour: 1,\r\n        seed: 3,\r\n        \"inp-serv\": 1,\r\n        \"knowl-skill\": 2,\r\n        water: 2,\r\n        markets: 3,\r\n        \"agroecology-source\": \"SoFT\",\r\n        rainfall: [{ min: 750.0, max: 2400.0 }],\r\n        temp: [{ min: 3.0, max: 35.0 }],\r\n        alt: [{ min: 0.0, max: 2500.0 }],\r\n        soilpH: [{ min: 6.5, max: 7.5 }],\r\n    },\r\n    {\r\n        name: \"Clover (Trifolium)\",\r\n        type:\r\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\r\n        food: 0,\r\n        feed: 4,\r\n        income: 1,\r\n        \"erosion-control\": 2,\r\n        fuel: 0,\r\n        \"soil-fertility\": 2,\r\n        land: 1,\r\n        labour: 3,\r\n        seed: 3,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 3,\r\n        water: 3,\r\n        markets: 0,\r\n        \"agroecology-source\": null,\r\n        rainfall: [{ min: null, max: null }],\r\n        temp: [{ min: null, max: null }],\r\n        alt: [{ min: null, max: null }],\r\n        soilpH: [{ min: null, max: null }],\r\n    },\r\n    {\r\n        name: \"Alfalfa/lucerne (Medicago sativa)\",\r\n        type:\r\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\r\n        food: 0,\r\n        feed: 3,\r\n        income: 2,\r\n        \"erosion-control\": 3,\r\n        fuel: 0,\r\n        \"soil-fertility\": 3,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 4,\r\n        \"inp-serv\": 3,\r\n        \"knowl-skill\": 2,\r\n        water: 2,\r\n        markets: 2,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 500.0, max: 2700.0 }],\r\n        temp: [{ min: 4.0, max: 27.0 }],\r\n        alt: [{ min: 300.0, max: 3000.0 }],\r\n        soilpH: [{ min: 5.5, max: 8.8 }],\r\n    },\r\n    {\r\n        name: \"Stylosanthes guianensis - semi-erect -forage type\",\r\n        type:\r\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\r\n        food: 0,\r\n        feed: 4,\r\n        income: 0,\r\n        \"erosion-control\": 3,\r\n        fuel: 0,\r\n        \"soil-fertility\": 3,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 4,\r\n        \"inp-serv\": 3,\r\n        \"knowl-skill\": 2,\r\n        water: 2,\r\n        markets: 2,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 500.0, max: 2000.0 }],\r\n        temp: [{ min: 15.0, max: 27.0 }],\r\n        alt: [{ min: 0.0, max: 2000.0 }],\r\n        soilpH: [{ min: 4.0, max: 7.7 }],\r\n    },\r\n    {\r\n        name: \"Stylosanthes hamata - bush/branching type-forage type\",\r\n        type:\r\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\r\n        food: 0,\r\n        feed: 4,\r\n        income: 0,\r\n        \"erosion-control\": 3,\r\n        fuel: 0,\r\n        \"soil-fertility\": 3,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 4,\r\n        \"inp-serv\": 3,\r\n        \"knowl-skill\": 2,\r\n        water: 2,\r\n        markets: 2,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 600.0, max: 1700.0 }],\r\n        temp: [{ min: 22.0, max: 30.0 }],\r\n        alt: [{ min: 0.0, max: 500.0 }],\r\n        soilpH: [{ min: 4.0, max: 6.0 }],\r\n    },\r\n    {\r\n        name: \"Stylosanthes scabra -erect - forage type\",\r\n        type:\r\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\r\n        food: 0,\r\n        feed: 4,\r\n        income: 0,\r\n        \"erosion-control\": 3,\r\n        fuel: 0,\r\n        \"soil-fertility\": 3,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 4,\r\n        \"inp-serv\": 3,\r\n        \"knowl-skill\": 2,\r\n        water: 2,\r\n        markets: 2,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 500.0, max: 1700.0 }],\r\n        temp: [{ min: 20.0, max: 30.0 }],\r\n        alt: [{ min: 0.0, max: 600.0 }],\r\n        soilpH: [{ min: 4.0, max: 7.0 }],\r\n    },\r\n    {\r\n        name: \"Hairy Vetch (Vicia villosa )\",\r\n        type:\r\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\r\n        food: 0,\r\n        feed: 4,\r\n        income: 0,\r\n        \"erosion-control\": 3,\r\n        fuel: 0,\r\n        \"soil-fertility\": 3,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 4,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 3,\r\n        water: 3,\r\n        markets: 2,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 310.0, max: 1660.0 }],\r\n        temp: [{ min: 4.0, max: 21.0 }],\r\n        alt: [{ min: 1800.0, max: 3000.0 }],\r\n        soilpH: [{ min: 4.9, max: 8.2 }],\r\n    },\r\n    {\r\n        name: \"Vicia dasycarpa\",\r\n        type:\r\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\r\n        food: 0,\r\n        feed: 4,\r\n        income: 0,\r\n        \"erosion-control\": 3,\r\n        fuel: 0,\r\n        \"soil-fertility\": 3,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 4,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 3,\r\n        water: 3,\r\n        markets: 2,\r\n        \"agroecology-source\": null,\r\n        rainfall: [{ min: null, max: null }],\r\n        temp: [{ min: null, max: null }],\r\n        alt: [{ min: null, max: null }],\r\n        soilpH: [{ min: null, max: null }],\r\n    },\r\n    {\r\n        name: \"Velvet bean (Mucuna pruriens) \",\r\n        type:\r\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\r\n        food: 0,\r\n        feed: 1,\r\n        income: 0,\r\n        \"erosion-control\": 3,\r\n        fuel: 0,\r\n        \"soil-fertility\": 4,\r\n        land: 3,\r\n        labour: 2,\r\n        seed: 3,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 2,\r\n        water: 1,\r\n        markets: 4,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 650.0, max: 3000.0 }],\r\n        temp: [{ min: 15.0, max: 35.0 }],\r\n        alt: [{ min: 0.0, max: 2100.0 }],\r\n        soilpH: [{ min: 4.5, max: 7.7 }],\r\n    },\r\n    {\r\n        name: \"Lablab- forage type (Lablab purpureus)\",\r\n        type:\r\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\r\n        food: 3,\r\n        feed: 4,\r\n        income: 3,\r\n        \"erosion-control\": 2,\r\n        fuel: 1,\r\n        \"soil-fertility\": 3,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 2,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 2,\r\n        water: 2,\r\n        markets: 3,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 600.0, max: 2500.0 }],\r\n        temp: [{ min: 15.0, max: 35.0 }],\r\n        alt: [{ min: 0.0, max: 2100.0 }],\r\n        soilpH: [{ min: 4.5, max: 7.8 }],\r\n    },\r\n    {\r\n        name: \"Crotolaria juncea\",\r\n        type:\r\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\r\n        food: 0,\r\n        feed: 1,\r\n        income: 0,\r\n        \"erosion-control\": 3,\r\n        fuel: 0,\r\n        \"soil-fertility\": 4,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 2,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 2,\r\n        water: 2,\r\n        markets: 3,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 490.0, max: 4290.0 }],\r\n        temp: [{ min: 8.0, max: 35.0 }],\r\n        alt: [{ min: 0.0, max: 2500.0 }],\r\n        soilpH: [{ min: 4.5, max: 7.5 }],\r\n    },\r\n    {\r\n        name: \"Calliandra calothyrus\",\r\n        type: \"Tree legumes - coppicing\",\r\n        food: 0,\r\n        feed: 4,\r\n        income: 2,\r\n        \"erosion-control\": 4,\r\n        fuel: 3,\r\n        \"soil-fertility\": 3,\r\n        land: 1,\r\n        labour: 1,\r\n        seed: 3,\r\n        \"inp-serv\": 1,\r\n        \"knowl-skill\": 2,\r\n        water: 2,\r\n        markets: 3,\r\n        \"agroecology-source\": \"SoFT\",\r\n        rainfall: [{ min: 1200.0, max: 4290.0 }],\r\n        temp: [{ min: 10.0, max: 35.0 }],\r\n        alt: [{ min: 0.0, max: 2000.0 }],\r\n        soilpH: [{ min: 4.5, max: 7.5 }],\r\n    },\r\n    {\r\n        name: \"Gliricidia sepium\",\r\n        type: \"Tree legumes - coppicing\",\r\n        food: 0,\r\n        feed: 3,\r\n        income: 1,\r\n        \"erosion-control\": 4,\r\n        fuel: 4,\r\n        \"soil-fertility\": 4,\r\n        land: 2,\r\n        labour: 2,\r\n        seed: 3,\r\n        \"inp-serv\": 1,\r\n        \"knowl-skill\": 1,\r\n        water: 1,\r\n        markets: 4,\r\n        \"agroecology-source\": \"SoFT\",\r\n        rainfall: [{ min: 800.0, max: 4000.0 }],\r\n        temp: [{ min: 15.0, max: 35.0 }],\r\n        alt: [{ min: 0.0, max: 2000.0 }],\r\n        soilpH: [{ min: 4.3, max: 8.0 }],\r\n    },\r\n    {\r\n        name: \"Leucaena leucocephala\",\r\n        type: \"Tree legumes - coppicing\",\r\n        food: 0,\r\n        feed: 4,\r\n        income: 0,\r\n        \"erosion-control\": 4,\r\n        fuel: 4,\r\n        \"soil-fertility\": 4,\r\n        land: 2,\r\n        labour: 2,\r\n        seed: 1,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 2,\r\n        water: 1,\r\n        markets: 3,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 500.0, max: 4100.0 }],\r\n        temp: [{ min: 15.0, max: 35.0 }],\r\n        alt: [{ min: 0.0, max: 1350.0 }],\r\n        soilpH: [{ min: 4.6, max: 8.7 }],\r\n    },\r\n    {\r\n        name: \"Leucaena trichandra\",\r\n        type: \"Tree legumes - coppicing\",\r\n        food: 0,\r\n        feed: 4,\r\n        income: 2,\r\n        \"erosion-control\": 3,\r\n        fuel: 4,\r\n        \"soil-fertility\": 3,\r\n        land: 2,\r\n        labour: 2,\r\n        seed: 1,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 2,\r\n        water: 1,\r\n        markets: 3,\r\n        \"agroecology-source\": \"SoFT\",\r\n        rainfall: [{ min: 900.0, max: 3500.0 }],\r\n        temp: [{ min: 10.0, max: 35.0 }],\r\n        alt: [{ min: 0.0, max: 2000.0 }],\r\n        soilpH: [{ min: 5.0, max: 8.7 }],\r\n    },\r\n    {\r\n        name: \"Leucaena diversifolia\",\r\n        type: \"Tree legumes - coppicing\",\r\n        food: 0,\r\n        feed: 4,\r\n        income: 2,\r\n        \"erosion-control\": 3,\r\n        fuel: 4,\r\n        \"soil-fertility\": 3,\r\n        land: 2,\r\n        labour: 2,\r\n        seed: 1,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 2,\r\n        water: 1,\r\n        markets: 3,\r\n        \"agroecology-source\": \"SoFT\",\r\n        rainfall: [{ min: 500.0, max: 4000.0 }],\r\n        temp: [{ min: 3.0, max: 35.0 }],\r\n        alt: [{ min: 0.0, max: 2000.0 }],\r\n        soilpH: [{ min: 5.0, max: 8.7 }],\r\n    },\r\n    {\r\n        name: \"Tree lucerne (Chamaecytisus palmensis)\",\r\n        type: \"Tree legumes \\u2013 coppicing\",\r\n        food: 0,\r\n        feed: 4,\r\n        income: 2,\r\n        \"erosion-control\": 3,\r\n        fuel: 4,\r\n        \"soil-fertility\": 3,\r\n        land: 2,\r\n        labour: 2,\r\n        seed: 1,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 2,\r\n        water: 1,\r\n        markets: 3,\r\n        \"agroecology-source\": \"SoFT\",\r\n        rainfall: [{ min: 300.0, max: 1600.0 }],\r\n        temp: [{ min: 3.0, max: 28.0 }],\r\n        alt: [{ min: 1000.0, max: 2500.0 }],\r\n        soilpH: [{ min: 5.0, max: 8.7 }],\r\n    },\r\n    {\r\n        name: \"Sesbania sesban\",\r\n        type: \"Tree legumes \\u2013 non coppicing\",\r\n        food: 0,\r\n        feed: 4,\r\n        income: 2,\r\n        \"erosion-control\": 4,\r\n        fuel: 3,\r\n        \"soil-fertility\": 3,\r\n        land: 1,\r\n        labour: 2,\r\n        seed: 1,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 2,\r\n        water: 2,\r\n        markets: 3,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 500.0, max: 2500.0 }],\r\n        temp: [{ min: 15.0, max: 30.0 }],\r\n        alt: [{ min: 0.0, max: 2300.0 }],\r\n        soilpH: [{ min: 5.0, max: 7.5 }],\r\n    },\r\n    {\r\n        name: \"Sesbania grandiflora\",\r\n        type: \"Tree legumes \\u2013 non coppicing\",\r\n        food: 0,\r\n        feed: 3,\r\n        income: 2,\r\n        \"erosion-control\": 3,\r\n        fuel: 3,\r\n        \"soil-fertility\": 3,\r\n        land: 2,\r\n        labour: 2,\r\n        seed: 1,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 2,\r\n        water: 1,\r\n        markets: 3,\r\n        \"agroecology-source\": \"SoFT\",\r\n        rainfall: [{ min: 700.0, max: 3000.0 }],\r\n        temp: [{ min: 22.0, max: 35.0 }],\r\n        alt: [{ min: 0.0, max: 1000.0 }],\r\n        soilpH: [{ min: 4.5, max: 8.7 }],\r\n    },\r\n    {\r\n        name: \"Tephrosia (Tephrosia vogelii)\",\r\n        type: \"Tree legumes \\u2013 non coppicing\",\r\n        food: 0,\r\n        feed: 0,\r\n        income: 2,\r\n        \"erosion-control\": 3,\r\n        fuel: 4,\r\n        \"soil-fertility\": 4,\r\n        land: 2,\r\n        labour: 3,\r\n        seed: 2,\r\n        \"inp-serv\": 1,\r\n        \"knowl-skill\": 1,\r\n        water: 1,\r\n        markets: 2,\r\n        \"agroecology-source\": \"Lexsys\",\r\n        rainfall: [{ min: 870.0, max: 2670.0 }],\r\n        temp: [{ min: 13.0, max: 29.0 }],\r\n        alt: [{ min: 0.0, max: 2100.0 }],\r\n        soilpH: [{ min: 4.5, max: 6.5 }],\r\n    },\r\n    {\r\n        name: \"Faidherbia albidia\",\r\n        type: \"Tree legumes \\u2013 non coppicing\",\r\n        food: 0,\r\n        feed: 3,\r\n        income: 2,\r\n        \"erosion-control\": 3,\r\n        fuel: 3,\r\n        \"soil-fertility\": 4,\r\n        land: 2,\r\n        labour: 2,\r\n        seed: 1,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 2,\r\n        water: 1,\r\n        markets: 3,\r\n        \"agroecology-source\": null,\r\n        rainfall: [{ min: null, max: null }],\r\n        temp: [{ min: null, max: null }],\r\n        alt: [{ min: null, max: null }],\r\n        soilpH: [{ min: null, max: null }],\r\n    },\r\n    {\r\n        name: \"Acacia angustissima\",\r\n        type: \"Tree legumes \\u2013 non coppicing\",\r\n        food: 0,\r\n        feed: 2,\r\n        income: 3,\r\n        \"erosion-control\": 3,\r\n        fuel: 4,\r\n        \"soil-fertility\": 3,\r\n        land: 2,\r\n        labour: 2,\r\n        seed: 1,\r\n        \"inp-serv\": 2,\r\n        \"knowl-skill\": 2,\r\n        water: 1,\r\n        markets: 3,\r\n        \"agroecology-source\": \"SoFT\",\r\n        rainfall: [{ min: 800.0, max: 3000.0 }],\r\n        temp: [{ min: 10.0, max: 35.0 }],\r\n        alt: [{ min: 0.0, max: 2000.0 }],\r\n        soilpH: [{ min: 5.0, max: 8.7 }],\r\n    },\r\n];\r\n","import { allLegumes } from \"./legume-information-clean\";\r\n\r\nconst legumeTypes = [];\r\nconst sources = [];\r\nallLegumes.map((legume) => {\r\n    if (!legumeTypes.includes(legume.type)) {\r\n        legumeTypes.push(legume.type);\r\n    }\r\n    if (\r\n        !sources.includes(legume[\"agroecology-source\"]) &&\r\n        legume[\"agroecology-source\"] !== null\r\n    ) {\r\n        sources.push(legume[\"agroecology-source\"]);\r\n    }\r\n});\r\n\r\nconst legumesData = {\r\n    allLegumes: allLegumes,\r\n    legumeTypes: legumeTypes,\r\n    sources: sources,\r\n};\r\n\r\nexport { legumesData };\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Table, Card } from \"react-bootstrap\";\r\n\r\nimport _ from \"lodash\";\r\nimport \"./results-component.css\";\r\n\r\nimport { resultsData } from \"./results-data\";\r\nimport AppContext from \"../../AppContext\";\r\n\r\nimport { Form, FormControl, FormLabel, FormGroup } from \"react-bootstrap\";\r\n\r\nimport { legumesData } from \"../legumes-component/legume-data\";\r\n\r\nclass Results extends Component {\r\n    //static contextType = AppContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = resultsData;\r\n\r\n        this.initialiseResults = this.initialiseResults.bind(this);\r\n        this.legumeContextScores = this.legumeContextScores.bind(this);\r\n        this.legumeFunctionScores = this.legumeFunctionScores.bind(this);\r\n        this.legumeAgroEcoScores = this.legumeAgroEcoScores.bind(this);\r\n        this.calculateLegumeScores = this.calculateLegumeScores.bind(this);\r\n        this.checkFormFilled = this.checkFormFilled.bind(this);\r\n    }\r\n\r\n    // Adding empty results attribute to fill for each of the legumes\r\n    // Loading the results from the form and getting the correct averages\r\n\r\n    initialiseResults = () => {\r\n        // Adding empty results to each legume\r\n        //const newLegumes = _.cloneDeep(legumesData.allLegumes.slice(0, 10));\r\n        const newLegumes = _.cloneDeep(legumesData.allLegumes);\r\n        newLegumes.map((newLegume) => {\r\n            newLegume.results = _.cloneDeep(this.state.emptyScoresForLegume);\r\n        });\r\n\r\n        // Adding form Results\r\n\r\n        // Not much editing for agroeco\r\n        const agroEcoData = _.cloneDeep(\r\n            this.context.currentProject.agroEcoData\r\n        );\r\n\r\n        //Extract average scores for context\r\n        const contextData = _.cloneDeep(\r\n            this.context.currentProject.contextScores.scores\r\n        );\r\n        const newContextAverages = _.cloneDeep(this.state.contextFitSummary);\r\n\r\n        newContextAverages.map((newcontextscore) => {\r\n            contextData.map((contextscore) => {\r\n                if (\r\n                    contextscore.scoreType === \"average\" &&\r\n                    newcontextscore.attribute.label ===\r\n                        contextscore.attribute.label\r\n                ) {\r\n                    newcontextscore.score = 4 - contextscore.score;\r\n                }\r\n            });\r\n        });\r\n\r\n        // For the functional summary, need to average results from the pairwise selections and\r\n        // from the participatory score matching\r\n\r\n        const pairWiseData = _.cloneDeep(\r\n            this.context.currentProject.pairWiseScores.averages\r\n        );\r\n        const participatoryMatrixData = _.cloneDeep(\r\n            this.context.currentProject.participatoryMatrixScores.summary\r\n                .scoresIndividual\r\n        );\r\n\r\n        const newFunctionAverages = _.cloneDeep(this.state.functionFitSummary);\r\n\r\n        newFunctionAverages.map((newfunction) => {\r\n            pairWiseData.map((pairwisescoreaverages) => {\r\n                if (\r\n                    pairwisescoreaverages.attribute.label ===\r\n                    newfunction.legumeFunction.label\r\n                ) {\r\n                    newfunction.pairwisescore = pairwisescoreaverages.value;\r\n                }\r\n            });\r\n        });\r\n\r\n        newFunctionAverages.map((newfunction) => {\r\n            participatoryMatrixData.map((matrixscore) => {\r\n                if (\r\n                    matrixscore.legumeFunction.label ===\r\n                    newfunction.legumeFunction.label\r\n                ) {\r\n                    newfunction.matrixscore = matrixscore.scores[1].score;\r\n                }\r\n            });\r\n        });\r\n\r\n        newFunctionAverages.map((newfunction) => {\r\n            newfunction.score = parseFloat(\r\n                (\r\n                    newfunction.pairwisescore / 2 +\r\n                    newfunction.matrixscore / 2\r\n                ).toFixed(2)\r\n            );\r\n        });\r\n\r\n        // Set initial state and then calculate initial results for legumes\r\n        this.setState(\r\n            {\r\n                legumes: newLegumes,\r\n                agroEcoFitSummary: agroEcoData.biofilters,\r\n                contextFitSummary: newContextAverages,\r\n                functionFitSummary: newFunctionAverages,\r\n            },\r\n            () => {\r\n                this.calculateLegumeScores();\r\n            }\r\n        );\r\n    };\r\n\r\n    legumeContextScores = (props) => {\r\n        // Context Scores\r\n        // console.log(\"Legume Context: \" + props.legumecontext);\r\n        // console.log(\"Form Context: \" + props.formcontext);\r\n\r\n        let legumecontext = parseFloat(props.legumecontext);\r\n        let formcontext = parseFloat(props.formcontext);\r\n        // Condition 1\r\n        if (\r\n            legumecontext - formcontext > -0.5 &&\r\n            legumecontext - formcontext <= 0\r\n        ) {\r\n            let scoreToReturn = 4 + (legumecontext - formcontext) / 2;\r\n            if (scoreToReturn > 0) {\r\n                return scoreToReturn;\r\n            }\r\n        }\r\n\r\n        // Condition 2\r\n        if (\r\n            legumecontext - formcontext < 0.5 &&\r\n            legumecontext - formcontext >= 0\r\n        ) {\r\n            let scoreToReturn = 4 - (legumecontext - formcontext) / 2;\r\n            if (scoreToReturn > 0) {\r\n                return scoreToReturn;\r\n            }\r\n        }\r\n\r\n        // Condition 3\r\n        if (legumecontext > formcontext) {\r\n            let scoreToReturn = 4 - (legumecontext - formcontext) * 2;\r\n            if (scoreToReturn > 0) {\r\n                return scoreToReturn;\r\n            }\r\n        }\r\n\r\n        // Condition 4\r\n        if (formcontext > legumecontext) {\r\n            return 4;\r\n        }\r\n\r\n        return 0;\r\n    };\r\n\r\n    legumeFunctionScores = (props) => {\r\n        // Calculating the averages for each of the legumes\r\n        // Function Scores\r\n\r\n        let formfunction = props.formfunction;\r\n        let legumefunction = props.legumefunction;\r\n        if (formfunction === 0) {\r\n            return 0;\r\n        }\r\n        if (legumefunction < formfunction) {\r\n            return (legumefunction * formfunction) / 8;\r\n        }\r\n        return (legumefunction * formfunction) / 4;\r\n    };\r\n\r\n    legumeAgroEcoScores = (props) => {\r\n        //console.log(props.legumeMin);\r\n        //console.log(props.legumeMax);\r\n        //console.log(props.formvalue);\r\n\r\n        let legumeMin = props.legumeMin;\r\n        let legumeMax = props.legumeMax;\r\n        let formvalue = props.formvalue;\r\n\r\n        if (formvalue >= legumeMin && formvalue <= legumeMax) {\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    calculateLegumeScores = () => {\r\n        const newLegumeState = _.cloneDeep(this.state.legumes);\r\n\r\n        newLegumeState.map((legume) => {\r\n            // Set context scores\r\n            // map through individual legumes\r\n            legume.results.contextFit.map((legumeContextScore) => {\r\n                // Map through the contextFit summaries\r\n                this.state.contextFitSummary.map((contextAttribute) => {\r\n                    if (legumeContextScore.attribute !== undefined) {\r\n                        // Match the attribute in the legume to the attribute in the context fit sumary\r\n                        if (\r\n                            contextAttribute.attribute.label ===\r\n                            legumeContextScore.attribute.label\r\n                        ) {\r\n                            // Assign the context score\r\n                            // console.log(legumeContextScore);\r\n                            // console.log(contextAttribute);\r\n                            // console.log(\r\n                            //     \"Legume Attribute: \" +\r\n                            //         contextAttribute.attribute.label\r\n                            // );\r\n                            //console.log(legume);\r\n\r\n                            legumeContextScore.score = this.legumeContextScores(\r\n                                // Props to send to the function\r\n                                {\r\n                                    legumecontext:\r\n                                        legume[\r\n                                            contextAttribute.attribute.label\r\n                                        ],\r\n                                    formcontext: contextAttribute.score,\r\n                                }\r\n                            );\r\n                            // console.log(legumeContextScore.score);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n\r\n            // Set function scores\r\n            legume.results.functionFit.map((legumeFunction) => {\r\n                this.state.functionFitSummary.map((functionAttribute) => {\r\n                    if (\r\n                        functionAttribute.legumeFunction !== undefined &&\r\n                        legumeFunction.legumeFunction !== undefined\r\n                    ) {\r\n                        if (\r\n                            functionAttribute.legumeFunction.label ===\r\n                            legumeFunction.legumeFunction.label\r\n                        ) {\r\n                            legumeFunction.score = this.legumeFunctionScores({\r\n                                formfunction: functionAttribute.score,\r\n                                legumefunction:\r\n                                    legume[\r\n                                        functionAttribute.legumeFunction.label\r\n                                    ],\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n\r\n            // set agroeco scores\r\n            legume.results.agroEcoFit.map((legumeAgroEco) => {\r\n                this.state.agroEcoFitSummary.map((agroEcoSummary) => {\r\n                    if (legumeAgroEco.agroEcoFilter !== undefined) {\r\n                        if (\r\n                            legumeAgroEco.agroEcoFilter.label ===\r\n                            agroEcoSummary.label\r\n                        ) {\r\n                            legumeAgroEco.score = this.legumeAgroEcoScores({\r\n                                legumeMin: legume[agroEcoSummary.label][0].min,\r\n                                legumeMax: legume[agroEcoSummary.label][0].max,\r\n                                formvalue: agroEcoSummary.value,\r\n                            });\r\n                            // console.log(legumeAgroEco);\r\n                            // console.log(agroEcoSummary);\r\n                            // console.log(legume[agroEcoSummary.label][0].min);\r\n                            // console.log(legume[agroEcoSummary.label][0].max);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        // Update overall scores\r\n        newLegumeState.map((legume) => {\r\n            // Sum agroEco Scores\r\n            let agroecoscoreAccumulator = 0;\r\n            legume.results.agroEcoFit.forEach((agroecoscore) => {\r\n                if (agroecoscore.agroEcoFilter !== undefined) {\r\n                    agroecoscoreAccumulator += agroecoscore.score;\r\n                }\r\n            });\r\n            legume.results.agroEcoFit.forEach((agroecoscore) => {\r\n                if (agroecoscore.overallFit !== undefined) {\r\n                    agroecoscore.overallFit = agroecoscoreAccumulator;\r\n                }\r\n            });\r\n\r\n            // Sum context Scores\r\n            let contextAccumulator = 0;\r\n            legume.results.contextFit.forEach((contextScore) => {\r\n                if (contextScore.attribute !== undefined) {\r\n                    contextAccumulator += contextScore.score;\r\n                }\r\n            });\r\n            legume.results.contextFit.forEach((contextScore) => {\r\n                if (contextScore.overallFit !== undefined) {\r\n                    contextScore.overallFit = contextAccumulator;\r\n                }\r\n            });\r\n            // Sum function scores\r\n            let functionAccumulator = 0;\r\n            legume.results.functionFit.forEach((functionScore) => {\r\n                if (functionScore.legumeFunction !== undefined) {\r\n                    functionAccumulator += functionScore.score;\r\n                }\r\n            });\r\n            legume.results.functionFit.forEach((functionScore) => {\r\n                if (functionScore.overallFit !== undefined) {\r\n                    functionScore.overallFit = functionAccumulator;\r\n                }\r\n            });\r\n\r\n            // Set overall Score\r\n            legume.results.overallFit.map((avgFit) => {\r\n                if (avgFit.overallFit !== undefined) {\r\n                    avgFit.overallFit =\r\n                        (agroecoscoreAccumulator /\r\n                            this.state.agroEcoFilters.length +\r\n                            contextAccumulator /\r\n                                (this.state.attributes.length * 4) +\r\n                            functionAccumulator /\r\n                                (this.state.legumeFunctions.length * 4)) /\r\n                        3;\r\n                }\r\n            });\r\n        });\r\n\r\n        // Set ranking the scores (draws included)\r\n        newLegumeState.forEach((firstLegume) => {\r\n            // Overall rank is the fifth item in the array\r\n            firstLegume.results.agroEcoFit[5].overallRank = 1;\r\n            let valuesEncountered = [];\r\n            newLegumeState.forEach((secondLegume) => {\r\n                //-------------------------------------------------------------------------------------------------\r\n                // AgroEco Rank\r\n                if (\r\n                    // Overall rank is the fifth item in the array\r\n\r\n                    firstLegume.results.agroEcoFit[4].overallFit <\r\n                        secondLegume.results.agroEcoFit[4].overallFit &&\r\n                    // Making sure the value has not been encountered before.\r\n                    // If it has, there is no need to push the rank further down the list\r\n                    !valuesEncountered.includes(\r\n                        secondLegume.results.agroEcoFit[4].overallFit\r\n                    )\r\n                ) {\r\n                    //\r\n                    valuesEncountered.push(\r\n                        secondLegume.results.agroEcoFit[4].overallFit\r\n                    );\r\n                    firstLegume.results.agroEcoFit[5].overallRank += 1;\r\n                }\r\n                //-------------------------------------------------------------------------------------------------\r\n                // Context Rank\r\n                if (\r\n                    // Overall rank is the 8th item in the array\r\n\r\n                    firstLegume.results.contextFit[7].overallFit <\r\n                        secondLegume.results.contextFit[7].overallFit &&\r\n                    // Making sure the value has not been encountered before.\r\n                    // If it has, there is no need to push the rank further down the list\r\n                    !valuesEncountered.includes(\r\n                        secondLegume.results.contextFit[7].overallFit\r\n                    )\r\n                ) {\r\n                    //\r\n                    valuesEncountered.push(\r\n                        secondLegume.results.contextFit[7].overallFit\r\n                    );\r\n                    firstLegume.results.contextFit[8].overallRank += 1;\r\n                }\r\n                // Function Rank\r\n                //-------------------------------------------------------------------------------------------------\r\n                if (\r\n                    // Overall rank is the 7th item in the array\r\n\r\n                    firstLegume.results.functionFit[6].overallFit <\r\n                        secondLegume.results.functionFit[6].overallFit &&\r\n                    // Making sure the value has not been encountered before.\r\n                    // If it has, there is no need to push the rank further down the list\r\n                    !valuesEncountered.includes(\r\n                        secondLegume.results.functionFit[6].overallFit\r\n                    )\r\n                ) {\r\n                    //\r\n                    valuesEncountered.push(\r\n                        secondLegume.results.functionFit[6].overallFit\r\n                    );\r\n                    firstLegume.results.functionFit[7].overallRank += 1;\r\n                }\r\n\r\n                // Overall Rank\r\n                //-------------------------------------------------------------------------------------------------\r\n                if (\r\n                    // Overall rank is the first item in the array\r\n\r\n                    firstLegume.results.overallFit[0].overallFit <\r\n                        secondLegume.results.overallFit[0].overallFit &&\r\n                    // Making sure the value has not been encountered before.\r\n                    // If it has, there is no need to push the rank further down the list\r\n                    !valuesEncountered.includes(\r\n                        secondLegume.results.overallFit[0].overallFit\r\n                    )\r\n                ) {\r\n                    //\r\n                    valuesEncountered.push(\r\n                        secondLegume.results.overallFit[0].overallFit\r\n                    );\r\n                    firstLegume.results.overallFit[1].overallRank += 1;\r\n                }\r\n            });\r\n        });\r\n\r\n        this.setState({\r\n            legumes: newLegumeState,\r\n        });\r\n    };\r\n\r\n    checkFormFilled = () => {\r\n        if (\r\n            this.context.currentProject.agroEcoData !== undefined &&\r\n            this.context.currentProject.contextScores !== undefined &&\r\n            this.context.currentProject.pairWiseScores !== undefined &&\r\n            this.context.currentProject.participatoryMatrixScores !== undefined\r\n        ) {\r\n            this.setState(\r\n                {\r\n                    formFilled: true,\r\n                },\r\n                () => {\r\n                    this.initialiseResults();\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.context.currentProject === undefined) {\r\n            this.context.currentProject = {};\r\n        }\r\n        if (this.context.currentProject.results !== undefined) {\r\n            const newState = _.cloneDeep(this.context.currentProject.results);\r\n            this.setState(newState);\r\n        } else {\r\n            const newContext = _.cloneDeep(this.state);\r\n            this.context.currentProject.results = newContext;\r\n        }\r\n        //console.log(this.state);\r\n\r\n        this.checkFormFilled();\r\n    }\r\n    componentDidUpdate() {\r\n        const newContext = _.cloneDeep(this.state);\r\n        this.context.currentProject.results = newContext;\r\n        console.log(this.state);\r\n    }\r\n\r\n    returnResultsForSummaryTable = (props) => {\r\n        if (props.item.score !== undefined) {\r\n            return <td>{parseFloat(props.item.score).toFixed(2)}</td>;\r\n        }\r\n        if (props.item.overallFit !== undefined) {\r\n            return <td>{parseFloat(props.item.overallFit).toFixed(2)}</td>;\r\n        }\r\n        if (props.item.overallRank !== undefined) {\r\n            return <td>{parseInt(props.item.overallRank)}</td>;\r\n        }\r\n    };\r\n\r\n    agroEcoTable = () => {\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Legume Name</th>\r\n                            {this.state.agroEcoFilters.map((agroEcoFilter) => {\r\n                                return <th>{agroEcoFilter.label}</th>;\r\n                            })}\r\n                            <th>total agro-eco score</th>\r\n                            <th>agro-eco rank</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.orderAndFilterLegume().map((legume) => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{legume.name}</td>\r\n                                    {legume.results.agroEcoFit.map(\r\n                                        (agroEcoItem) => {\r\n                                            return this.returnResultsForSummaryTable(\r\n                                                {\r\n                                                    item: agroEcoItem,\r\n                                                }\r\n                                            );\r\n                                        }\r\n                                    )}\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    contextFitTable = () => {\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Legume Name</th>\r\n                            {this.state.attributes.map((attribute) => {\r\n                                return <th>{attribute.label}</th>;\r\n                            })}\r\n                            <th>context score</th>\r\n                            <th>context rank</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.orderAndFilterLegume().map((legume) => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{legume.name}</td>\r\n                                    {legume.results.contextFit.map(\r\n                                        (contextItem) => {\r\n                                            return this.returnResultsForSummaryTable(\r\n                                                {\r\n                                                    item: contextItem,\r\n                                                }\r\n                                            );\r\n                                        }\r\n                                    )}\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    functionFitTable = () => {\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Legume Name</th>\r\n                            {this.state.legumeFunctions.map(\r\n                                (legumeFunction) => {\r\n                                    return <th>{legumeFunction.label}</th>;\r\n                                }\r\n                            )}\r\n                            <th>function score</th>\r\n                            <th>function rank</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.orderAndFilterLegume().map((legume) => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{legume.name}</td>\r\n                                    {legume.results.functionFit.map(\r\n                                        (functionItem) => {\r\n                                            return this.returnResultsForSummaryTable(\r\n                                                {\r\n                                                    item: functionItem,\r\n                                                }\r\n                                            );\r\n                                        }\r\n                                    )}\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    returnRank = (props) => {\r\n        let scoreToReturn = 0;\r\n        props.arr.map((item) => {\r\n            if (item.overallRank !== undefined) {\r\n                scoreToReturn = item.overallRank;\r\n            }\r\n        });\r\n\r\n        return scoreToReturn;\r\n    };\r\n\r\n    returnScore = (props) => {\r\n        let scoreToReturn = 0;\r\n        props.arr.map((item) => {\r\n            if (item.overallFit !== undefined) {\r\n                scoreToReturn = item.overallFit;\r\n            }\r\n        });\r\n\r\n        return parseFloat(scoreToReturn).toFixed(2);\r\n    };\r\n\r\n    compareScores = (a, b, props) => {\r\n        let scoreA = \"\";\r\n        a.results[props.scoreType].map((item) => {\r\n            if (item.overallFit !== undefined) {\r\n                scoreA = item.overallFit;\r\n            }\r\n        });\r\n        let scoreB = \"\";\r\n        b.results[props.scoreType].map((item) => {\r\n            if (item.overallFit !== undefined) {\r\n                scoreB = item.overallFit;\r\n            }\r\n        });\r\n\r\n        if (scoreA < scoreB) {\r\n            return 1;\r\n        }\r\n        if (scoreA > scoreB) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    orderAndFilterLegume = () => {\r\n        const filter = this.state.resultsFilter.selection.order;\r\n\r\n        let legumeArr = _.cloneDeep(this.state.legumes);\r\n\r\n        // Filter by overall score\r\n        if (filter === \"Overall Score\") {\r\n            legumeArr.sort((a, b) =>\r\n                this.compareScores(a, b, { scoreType: \"overallFit\" })\r\n            );\r\n            console.log(legumeArr);\r\n        }\r\n        // Filter by AgroEcoScore\r\n        if (filter === \"AgroEco Score\") {\r\n            legumeArr.sort((a, b) =>\r\n                this.compareScores(a, b, { scoreType: \"agroEcoFit\" })\r\n            );\r\n            console.log(legumeArr);\r\n        }\r\n        // Filter by ContextScore\r\n        if (filter === \"Context Score\") {\r\n            legumeArr.sort((a, b) =>\r\n                this.compareScores(a, b, { scoreType: \"contextFit\" })\r\n            );\r\n            console.log(legumeArr);\r\n        }\r\n        // Filter by Function Fit\r\n        if (filter === \"Function Score\") {\r\n            legumeArr.sort((a, b) =>\r\n                this.compareScores(a, b, { scoreType: \"functionFit\" })\r\n            );\r\n            console.log(legumeArr);\r\n        }\r\n\r\n        if (this.state.resultsFilter.selection.numberOfLegumes == \"5\") {\r\n            legumeArr = legumeArr.slice(0, 5);\r\n        }\r\n\r\n        if (this.state.resultsFilter.selection.numberOfLegumes == \"10\") {\r\n            legumeArr = legumeArr.slice(0, 10);\r\n        }\r\n\r\n        if (this.state.resultsFilter.selection.numberOfLegumes == \"20\") {\r\n            legumeArr = legumeArr.slice(0, 20);\r\n        }\r\n\r\n        return legumeArr;\r\n    };\r\n\r\n    changeCellColour = () => {\r\n        return \"blue\";\r\n    };\r\n\r\n    summaryTable = () => {\r\n        return (\r\n            <div>\r\n                <Table bordered striped hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Legume Name</th>\r\n                            <th>Agro-Eco score</th>\r\n                            <th>Agro-Eco rank</th>\r\n                            <th>Context score</th>\r\n                            <th>Context rank</th>\r\n                            <th>Function score</th>\r\n                            <th>Function rank</th>\r\n\r\n                            <th>Overall score (0-1)</th>\r\n                            <th>Overall rank</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.orderAndFilterLegume().map((legume) => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{legume.name}</td>\r\n                                    <td\r\n                                    // style={{\r\n                                    //     backgroundColor: this.changeCellColour(),\r\n                                    // }}\r\n                                    >\r\n                                        {this.returnScore({\r\n                                            arr: legume.results.agroEcoFit,\r\n                                        })}\r\n                                    </td>\r\n                                    <td>\r\n                                        {this.returnRank({\r\n                                            arr: legume.results.agroEcoFit,\r\n                                        })}\r\n                                    </td>\r\n                                    <td>\r\n                                        {this.returnScore({\r\n                                            arr: legume.results.contextFit,\r\n                                        })}\r\n                                    </td>\r\n                                    <td>\r\n                                        {this.returnRank({\r\n                                            arr: legume.results.contextFit,\r\n                                        })}\r\n                                    </td>\r\n                                    <td>\r\n                                        {this.returnScore({\r\n                                            arr: legume.results.functionFit,\r\n                                        })}\r\n                                    </td>\r\n                                    <td>\r\n                                        {this.returnRank({\r\n                                            arr: legume.results.functionFit,\r\n                                        })}\r\n                                    </td>\r\n                                    <td>\r\n                                        {this.returnScore({\r\n                                            arr: legume.results.overallFit,\r\n                                        })}\r\n                                    </td>\r\n                                    <td>\r\n                                        {this.returnRank({\r\n                                            arr: legume.results.overallFit,\r\n                                        })}\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderLegumeResults = () => {\r\n        if (this.state.resultsFilter.selection.whichResults === \"Summary\") {\r\n            return this.summaryTable();\r\n        }\r\n\r\n        if (\r\n            this.state.resultsFilter.selection.whichResults === \"AgroEco Scores\"\r\n        ) {\r\n            return this.agroEcoTable();\r\n        }\r\n\r\n        if (\r\n            this.state.resultsFilter.selection.whichResults === \"Context Scores\"\r\n        ) {\r\n            return this.contextFitTable();\r\n        }\r\n\r\n        if (\r\n            this.state.resultsFilter.selection.whichResults ===\r\n            \"Function Scores\"\r\n        ) {\r\n            return this.functionFitTable();\r\n        }\r\n    };\r\n\r\n    changeSelection = (event, props) => {\r\n        this.setState(\r\n            (prevState) => {\r\n                return {\r\n                    ...prevState,\r\n                    resultsFilter: {\r\n                        ...prevState.resultsFilter,\r\n                        selection: {\r\n                            ...prevState.resultsFilter.selection,\r\n                            [props.type]: event.target.value,\r\n                        },\r\n                    },\r\n                };\r\n            },\r\n            () => this.orderAndFilterLegume()\r\n        );\r\n    };\r\n\r\n    resultsFilters = () => {\r\n        return (\r\n            <div className=\"card-container\">\r\n                <Card>\r\n                    <Card.Header className=\"bg-dark text-white\">\r\n                        <h2>Filter Results</h2>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Form className=\"results-form\">\r\n                            <FormGroup\r\n                                controlId=\"resultsSelect\"\r\n                                className=\"form-item\"\r\n                            >\r\n                                <FormLabel>Results</FormLabel>\r\n\r\n                                <FormControl\r\n                                    value={\r\n                                        this.state.resultsFilter.selection\r\n                                            .whichResults\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                        this.changeSelection(event, {\r\n                                            type: \"whichResults\",\r\n                                        })\r\n                                    }\r\n                                    as=\"select\"\r\n                                >\r\n                                    {this.state.resultsFilter.selectOptions.map(\r\n                                        (selectionoption) => {\r\n                                            return (\r\n                                                <option>\r\n                                                    {selectionoption}\r\n                                                </option>\r\n                                            );\r\n                                        }\r\n                                    )}\r\n                                </FormControl>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup\r\n                                value={this.state.resultsFilter.selection.order}\r\n                                onChange={(event) =>\r\n                                    this.changeSelection(event, {\r\n                                        type: \"order\",\r\n                                    })\r\n                                }\r\n                                controlId=\"resultsFilter\"\r\n                                className=\"form-item\"\r\n                            >\r\n                                <FormLabel>Order by:</FormLabel>\r\n\r\n                                <FormControl\r\n                                    as=\"select\"\r\n                                    value={\r\n                                        this.state.resultsFilter.selection.order\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                        this.changeSelection(event, {\r\n                                            type: \"order\",\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    {this.state.resultsFilter.orderOptions.map(\r\n                                        (orderoption) => {\r\n                                            return (\r\n                                                <option>{orderoption}</option>\r\n                                            );\r\n                                        }\r\n                                    )}\r\n                                </FormControl>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup\r\n                                controlId=\"resultsFilter\"\r\n                                className=\"form-item\"\r\n                            >\r\n                                <FormLabel>\r\n                                    Number of Legumes Displayed\r\n                                </FormLabel>\r\n\r\n                                <FormControl\r\n                                    as=\"select\"\r\n                                    value={\r\n                                        this.state.resultsFilter.selection\r\n                                            .numberOfLegumes\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                        this.changeSelection(event, {\r\n                                            type: \"numberOfLegumes\",\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    {this.state.resultsFilter.numberOfLegumesOptions.map(\r\n                                        (numberoption) => {\r\n                                            return (\r\n                                                <option>{numberoption}</option>\r\n                                            );\r\n                                        }\r\n                                    )}\r\n                                </FormControl>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderBody = () => {\r\n        if (this.state.formFilled === false) {\r\n            return <h1>No data entered yet. Please fill in data-entry form</h1>;\r\n        }\r\n        if (this.state.formFilled === true) {\r\n            return (\r\n                <div className=\"results-container\">\r\n                    {this.resultsFilters()}\r\n                    <div>{this.renderLegumeResults()}</div>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <div>{this.renderBody()}</div>;\r\n    }\r\n}\r\n\r\nResults.contextType = AppContext;\r\n\r\nexport default Results;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport AppContext from \"../../AppContext\";\r\n\r\nclass ViewContext extends Component {\r\n    static contextType = AppContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(AppContext);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initialiseContext();\r\n    }\r\n\r\n    initialiseContext = () => {\r\n        const appVariables = [\r\n            \"agroEcoData\",\r\n            \"contextScores\",\r\n            \"location\",\r\n            \"pairWiseScores\",\r\n            \"participatoryMatrixScores\",\r\n            \"projectInfo\",\r\n            \"results\",\r\n            \"user\",\r\n        ];\r\n\r\n        const appData = {};\r\n\r\n        appVariables.map((variable) => {\r\n            if (this.context[variable] !== undefined) {\r\n                appData[variable] = _.cloneDeep(this.context[variable]);\r\n            }\r\n        });\r\n\r\n        this.setState(appData);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>App Context</h1>\r\n                <pre>{JSON.stringify(this.state, null, 2)}</pre>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewContext;\r\n","import React, {\r\n    useState,\r\n    useCallback,\r\n    useRef,\r\n    useMemo,\r\n    useEffect,\r\n    useContext,\r\n    createContext,\r\n} from \"react\";\r\n\r\nimport _ from \"lodash\";\r\nimport \"./map-polygon-component.css\";\r\n\r\nimport AppContext from \"../../AppContext\";\r\n\r\nimport { MapContainer, Marker, Popup, TileLayer, Polygon } from \"react-leaflet\";\r\n\r\nlet center = {\r\n    lat: 5.26,\r\n    lng: 22.7,\r\n};\r\n\r\nlet markerpositions = [];\r\n\r\nif (AppContext.currentProject === undefined) {\r\n    AppContext.currentProject = {};\r\n}\r\nif (AppContext.currentProject.location === undefined) {\r\n    markerpositions = [\r\n        {\r\n            lat: center.lat + 10,\r\n            lng: center.lng - 10,\r\n        },\r\n        {\r\n            lat: center.lat + 10,\r\n            lng: center.lng + 10,\r\n        },\r\n        {\r\n            lat: center.lat - 10,\r\n            lng: center.lng + 10,\r\n        },\r\n        {\r\n            lat: center.lat - 10,\r\n            lng: center.lng - 10,\r\n        },\r\n    ];\r\n}\r\n\r\nif (AppContext.currentProject.location !== undefined) {\r\n    markerpositions = AppContext.currentProject.location;\r\n}\r\n\r\nfunction DraggableMarker(props) {\r\n    const markerRef = useRef(null);\r\n\r\n    const updateMarker = useMemo(\r\n        () => ({\r\n            dragend() {\r\n                const marker = markerRef.current;\r\n\r\n                if (marker != null) {\r\n                    let newArray = _.clone(props.center);\r\n                    let newLat = marker.getLatLng().lat;\r\n                    let newLng = marker.getLatLng().lng;\r\n                    newArray[props.index].lat = newLat;\r\n                    newArray[props.index].lng = newLng;\r\n                    props.changeMarkerPositions(newArray);\r\n\r\n                    //console.log(marker.getLatLng().lat);\r\n                }\r\n            },\r\n        }),\r\n        []\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Marker\r\n                draggable={true}\r\n                eventHandlers={updateMarker}\r\n                position={props.center[props.index]}\r\n                ref={markerRef}\r\n            ></Marker>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction DraggablePolygon(props) {\r\n    return (\r\n        <Polygon\r\n            pathOptions={{ color: \"purple\" }}\r\n            positions={props.positions}\r\n        />\r\n    );\r\n}\r\n\r\nfunction MapPolygon(location) {\r\n    const [markerPositions, changeMarkerPositions] = useState(markerpositions);\r\n\r\n    const [mapCenter, changeCenter] = useState(center);\r\n\r\n    const AppContextMap = useContext(AppContext);\r\n\r\n    console.log(AppContextMap.currentProject);\r\n    useEffect(() => {\r\n        if (AppContextMap.currentProject.location !== undefined) {\r\n            changeMarkerPositions(AppContextMap.currentProject.location);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        AppContextMap.currentProject.location = markerPositions;\r\n        // console.log(markerPositions);\r\n    });\r\n\r\n    return (\r\n        <div className=\"leaflet-container\">\r\n            <MapContainer center={mapCenter} zoom={3} scrollWheelZoom={false}>\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n\r\n                <DraggablePolygon positions={markerPositions} />\r\n\r\n                <DraggableMarker\r\n                    center={markerPositions}\r\n                    index={0}\r\n                    changeMarkerPositions={changeMarkerPositions}\r\n                />\r\n                <DraggableMarker\r\n                    center={markerPositions}\r\n                    index={1}\r\n                    changeMarkerPositions={changeMarkerPositions}\r\n                />\r\n                <DraggableMarker\r\n                    center={markerPositions}\r\n                    index={2}\r\n                    changeMarkerPositions={changeMarkerPositions}\r\n                />\r\n                <DraggableMarker\r\n                    center={markerPositions}\r\n                    index={3}\r\n                    changeMarkerPositions={changeMarkerPositions}\r\n                />\r\n            </MapContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MapPolygon;\r\n","import React, { Component } from \"react\";\r\nimport AppContext from \"../../AppContext\";\r\n\r\nimport MapPolygon from \"../map-polygon-component/map-polygon-component\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport _ from \"lodash\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport \"./project-information-component.css\";\r\nimport \"../../App.css\";\r\nimport { countryList } from \"./countries-list\";\r\nimport {\r\n    Button,\r\n    Form,\r\n    FormControl,\r\n    FormText,\r\n    FormLabel,\r\n    FormGroup,\r\n} from \"react-bootstrap\";\r\n\r\nlet countryNames = [];\r\n\r\ncountryList.forEach((country) => {\r\n    countryNames.push(country.name);\r\n});\r\n\r\nconst projectID = uuidv4();\r\nclass ProjectInformation extends Component {\r\n    //static contextType = AppContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: {\r\n                firstname: \"\",\r\n                surname: \"\",\r\n                email: \"\",\r\n                institution: \"\"\r\n            },\r\n            projectName: \"\",\r\n            projectID: projectID,\r\n            country: \"\",\r\n            majorRegion: \"\",\r\n            minorRegion: \"\",\r\n            communityName: \"\",\r\n            communityType: \"\",\r\n            description: \"\",\r\n            date: new Date(),\r\n            countryNames: countryNames,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n        if (this.context.currentProject === undefined) {\r\n            this.context.currentProject = {};\r\n        }\r\n        if (this.context.currentProject.projectInfo === undefined) {\r\n            const newContext = _.cloneDeep(this.state);\r\n            this.context.currentProject.projectInfo = newContext;\r\n        }\r\n        if (this.context.currentProject.projectInfo !== undefined) {\r\n            const newState = _.cloneDeep(\r\n                this.context.currentProject.projectInfo\r\n            );\r\n            this.setState(newState);\r\n        }\r\n\r\n        // console.log(this.state.countryNames);\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        //console.log(this.state);\r\n        const newContext = _.cloneDeep(this.state);\r\n        this.context.currentProject.projectInfo = newContext;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"project-info-container\">\r\n                <div className=\"card-container\">\r\n                    <Card>\r\n                        <Card.Header className=\"bg-dark text-white\">\r\n                            <h2>User Information</h2>\r\n                        </Card.Header>\r\n                    </Card>\r\n                </div>\r\n\r\n                <Form className=\"form-display\">\r\n                    <FormGroup className=\"short-form-entry\">\r\n                        <FormLabel>First Name</FormLabel>\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            value={this.state.user.firstname}\r\n                            onChange={(event) =>\r\n                                this.setState((prevState) => {\r\n                                    return {\r\n                                        ...prevState,\r\n                                        user: {\r\n                                            ...prevState.user,\r\n                                            firstname: event.target.value,\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"short-form-entry\">\r\n                        <FormLabel>Surname</FormLabel>\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            value={this.state.user.surname}\r\n                            onChange={(event) =>\r\n                                this.setState((prevState) => {\r\n                                    return {\r\n                                        ...prevState,\r\n                                        user: {\r\n                                            ...prevState.user,\r\n                                            surname: event.target.value,\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"short-form-entry\">\r\n                        <FormLabel>Institution</FormLabel>\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            value={this.state.user.institution}\r\n                            onChange={(event) =>\r\n                                this.setState((prevState) => {\r\n                                    return {\r\n                                        ...prevState,\r\n                                        user: {\r\n                                            ...prevState.user,\r\n                                            institution: event.target.value,\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n                        />\r\n                        <FormText>The organisation responsible for data collection</FormText>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"short-form-entry\">\r\n                        <FormLabel>Email</FormLabel>\r\n                        <FormControl\r\n                            type=\"email\"\r\n                            value={this.state.user.email}\r\n                            onChange={(event) =>\r\n                                this.setState((prevState) => {\r\n                                    return {\r\n                                        ...prevState,\r\n                                        user: {\r\n                                            ...prevState.user,\r\n                                            email: event.target.value,\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n                        />\r\n                    </FormGroup>\r\n                </Form>\r\n\r\n\r\n\r\n                <div className=\"card-container\">\r\n                    <Card>\r\n                        <Card.Header className=\"bg-dark text-white\">\r\n                            <h2>Project Metadata</h2>\r\n                        </Card.Header>\r\n                    </Card>\r\n                </div>\r\n                <Form className=\"form-display\">\r\n                    <FormGroup className=\"short-form-entry\">\r\n                        <FormLabel>Project Name</FormLabel>\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            value={this.state.projectName}\r\n                            onChange={(event) =>\r\n                                this.setState({\r\n                                    projectName: event.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                        <FormText className=\"text-muted\">\r\n                            A memorable name for your project.\r\n                        </FormText>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"short-form-entry\">\r\n                        <FormLabel>Project ID</FormLabel>\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            placeholder={this.state.projectID}\r\n                            readOnly\r\n                        />\r\n                        <FormText className=\"text-muted\">\r\n                            A universally unique identifier (uuid) for your\r\n                            project.\r\n                        </FormText>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"short-form-entry\">\r\n                        <FormLabel>Country</FormLabel>\r\n                        <FormControl\r\n                            as=\"select\"\r\n                            value={this.state.country}\r\n                            onChange={(event) => {\r\n                                this.setState({ country: event.target.value });\r\n                            }}\r\n                        >\r\n                            {this.state.countryNames.map((country) => {\r\n                                return <option>{country}</option>;\r\n                            })}\r\n                        </FormControl>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"short-form-entry\">\r\n                        <FormLabel>Major Region</FormLabel>\r\n                        <FormControl\r\n                            value={this.state.majorRegion}\r\n                            onChange={(event) =>\r\n                                this.setState({\r\n                                    majorRegion: event.target.value,\r\n                                })\r\n                            }\r\n                        ></FormControl>\r\n                        <FormText className=\"text-muted\">\r\n                            e.g. state/province\r\n                        </FormText>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"short-form-entry\">\r\n                        <FormLabel>Minor Region</FormLabel>\r\n                        <FormControl\r\n                            value={this.state.minorRegion}\r\n                            onChange={(event) =>\r\n                                this.setState({\r\n                                    minorRegion: event.target.value,\r\n                                })\r\n                            }\r\n                        ></FormControl>\r\n                        <FormText className=\"text-muted\">e.g. county</FormText>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"short-form-entry\">\r\n                        <FormLabel>Community Name</FormLabel>\r\n                        <FormControl\r\n                            value={this.state.communityName}\r\n                            onChange={(event) =>\r\n                                this.setState({\r\n                                    communityName: event.target.value,\r\n                                })\r\n                            }\r\n                        ></FormControl>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"short-form-entry\">\r\n                        <FormLabel>Community Type</FormLabel>\r\n                        <FormControl\r\n                            value={this.state.communityType}\r\n                            onChange={(event) =>\r\n                                this.setState({\r\n                                    communityType: event.target.value,\r\n                                })\r\n                            }\r\n                        ></FormControl>\r\n                        <FormText className=\"text-muted\">\r\n                            e.g. village/sub-village\r\n                        </FormText>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"short-form-entry\">\r\n                        <FormLabel>Date</FormLabel>\r\n                        <DatePicker\r\n                            selected={Date.parse(this.state.date)}\r\n                            onChange={(date) => this.setState({ date: date })}\r\n                        />\r\n                        <FormText className=\"text-muted\">\r\n                            The date the data-collection ended\r\n                        </FormText>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"long-form-entry\">\r\n                        <FormLabel>Project Description</FormLabel>\r\n                        <FormControl\r\n                            as=\"textarea\"\r\n                            rows={4}\r\n                            value={this.state.description}\r\n                            onChange={(event) =>\r\n                                this.setState({\r\n                                    description: event.target.value,\r\n                                })\r\n                            }\r\n                        ></FormControl>\r\n                    </FormGroup>\r\n                </Form>\r\n\r\n                <div className=\"card-container\">\r\n                    <Card>\r\n                        <Card.Header className=\"bg-dark text-white\">\r\n                            <h2>Mapping</h2>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            The map below can be used to select your study\r\n                            region. We recommend that you set the approximate\r\n                            study location before going to the field. That way,\r\n                            the some information from the map can be cached for\r\n                            offline use. If there are any problems collecting\r\n                            geolocation offline, collect the rest of the data\r\n                            needed, save your progress, and fill in the mapping\r\n                            information when you once again have access to\r\n                            internet\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"map-container\">\r\n                    <MapPolygon />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProjectInformation.contextType = AppContext;\r\n\r\nexport default ProjectInformation;\r\n","const countryList = [\r\n    { name: \"Afghanistan\", code: \"AF\" },\r\n    { name: \"Åland Islands\", code: \"AX\" },\r\n    { name: \"Albania\", code: \"AL\" },\r\n    { name: \"Algeria\", code: \"DZ\" },\r\n    { name: \"American Samoa\", code: \"AS\" },\r\n    { name: \"AndorrA\", code: \"AD\" },\r\n    { name: \"Angola\", code: \"AO\" },\r\n    { name: \"Anguilla\", code: \"AI\" },\r\n    { name: \"Antarctica\", code: \"AQ\" },\r\n    { name: \"Antigua and Barbuda\", code: \"AG\" },\r\n    { name: \"Argentina\", code: \"AR\" },\r\n    { name: \"Armenia\", code: \"AM\" },\r\n    { name: \"Aruba\", code: \"AW\" },\r\n    { name: \"Australia\", code: \"AU\" },\r\n    { name: \"Austria\", code: \"AT\" },\r\n    { name: \"Azerbaijan\", code: \"AZ\" },\r\n    { name: \"Bahamas\", code: \"BS\" },\r\n    { name: \"Bahrain\", code: \"BH\" },\r\n    { name: \"Bangladesh\", code: \"BD\" },\r\n    { name: \"Barbados\", code: \"BB\" },\r\n    { name: \"Belarus\", code: \"BY\" },\r\n    { name: \"Belgium\", code: \"BE\" },\r\n    { name: \"Belize\", code: \"BZ\" },\r\n    { name: \"Benin\", code: \"BJ\" },\r\n    { name: \"Bermuda\", code: \"BM\" },\r\n    { name: \"Bhutan\", code: \"BT\" },\r\n    { name: \"Bolivia\", code: \"BO\" },\r\n    { name: \"Bosnia and Herzegovina\", code: \"BA\" },\r\n    { name: \"Botswana\", code: \"BW\" },\r\n    { name: \"Bouvet Island\", code: \"BV\" },\r\n    { name: \"Brazil\", code: \"BR\" },\r\n    { name: \"British Indian Ocean Territory\", code: \"IO\" },\r\n    { name: \"Brunei Darussalam\", code: \"BN\" },\r\n    { name: \"Bulgaria\", code: \"BG\" },\r\n    { name: \"Burkina Faso\", code: \"BF\" },\r\n    { name: \"Burundi\", code: \"BI\" },\r\n    { name: \"Cambodia\", code: \"KH\" },\r\n    { name: \"Cameroon\", code: \"CM\" },\r\n    { name: \"Canada\", code: \"CA\" },\r\n    { name: \"Cape Verde\", code: \"CV\" },\r\n    { name: \"Cayman Islands\", code: \"KY\" },\r\n    { name: \"Central African Republic\", code: \"CF\" },\r\n    { name: \"Chad\", code: \"TD\" },\r\n    { name: \"Chile\", code: \"CL\" },\r\n    { name: \"China\", code: \"CN\" },\r\n    { name: \"Christmas Island\", code: \"CX\" },\r\n    { name: \"Cocos (Keeling) Islands\", code: \"CC\" },\r\n    { name: \"Colombia\", code: \"CO\" },\r\n    { name: \"Comoros\", code: \"KM\" },\r\n    { name: \"Congo\", code: \"CG\" },\r\n    { name: \"Congo, The Democratic Republic of the\", code: \"CD\" },\r\n    { name: \"Cook Islands\", code: \"CK\" },\r\n    { name: \"Costa Rica\", code: \"CR\" },\r\n    { name: \"Cote D'Ivoire\", code: \"CI\" },\r\n    { name: \"Croatia\", code: \"HR\" },\r\n    { name: \"Cuba\", code: \"CU\" },\r\n    { name: \"Cyprus\", code: \"CY\" },\r\n    { name: \"Czech Republic\", code: \"CZ\" },\r\n    { name: \"Denmark\", code: \"DK\" },\r\n    { name: \"Djibouti\", code: \"DJ\" },\r\n    { name: \"Dominica\", code: \"DM\" },\r\n    { name: \"Dominican Republic\", code: \"DO\" },\r\n    { name: \"Ecuador\", code: \"EC\" },\r\n    { name: \"Egypt\", code: \"EG\" },\r\n    { name: \"El Salvador\", code: \"SV\" },\r\n    { name: \"Equatorial Guinea\", code: \"GQ\" },\r\n    { name: \"Eritrea\", code: \"ER\" },\r\n    { name: \"Estonia\", code: \"EE\" },\r\n    { name: \"Ethiopia\", code: \"ET\" },\r\n    { name: \"Falkland Islands (Malvinas)\", code: \"FK\" },\r\n    { name: \"Faroe Islands\", code: \"FO\" },\r\n    { name: \"Fiji\", code: \"FJ\" },\r\n    { name: \"Finland\", code: \"FI\" },\r\n    { name: \"France\", code: \"FR\" },\r\n    { name: \"French Guiana\", code: \"GF\" },\r\n    { name: \"French Polynesia\", code: \"PF\" },\r\n    { name: \"French Southern Territories\", code: \"TF\" },\r\n    { name: \"Gabon\", code: \"GA\" },\r\n    { name: \"Gambia\", code: \"GM\" },\r\n    { name: \"Georgia\", code: \"GE\" },\r\n    { name: \"Germany\", code: \"DE\" },\r\n    { name: \"Ghana\", code: \"GH\" },\r\n    { name: \"Gibraltar\", code: \"GI\" },\r\n    { name: \"Greece\", code: \"GR\" },\r\n    { name: \"Greenland\", code: \"GL\" },\r\n    { name: \"Grenada\", code: \"GD\" },\r\n    { name: \"Guadeloupe\", code: \"GP\" },\r\n    { name: \"Guam\", code: \"GU\" },\r\n    { name: \"Guatemala\", code: \"GT\" },\r\n    { name: \"Guernsey\", code: \"GG\" },\r\n    { name: \"Guinea\", code: \"GN\" },\r\n    { name: \"Guinea-Bissau\", code: \"GW\" },\r\n    { name: \"Guyana\", code: \"GY\" },\r\n    { name: \"Haiti\", code: \"HT\" },\r\n    { name: \"Heard Island and Mcdonald Islands\", code: \"HM\" },\r\n    { name: \"Holy See (Vatican City State)\", code: \"VA\" },\r\n    { name: \"Honduras\", code: \"HN\" },\r\n    { name: \"Hong Kong\", code: \"HK\" },\r\n    { name: \"Hungary\", code: \"HU\" },\r\n    { name: \"Iceland\", code: \"IS\" },\r\n    { name: \"India\", code: \"IN\" },\r\n    { name: \"Indonesia\", code: \"ID\" },\r\n    { name: \"Iran, Islamic Republic Of\", code: \"IR\" },\r\n    { name: \"Iraq\", code: \"IQ\" },\r\n    { name: \"Ireland\", code: \"IE\" },\r\n    { name: \"Isle of Man\", code: \"IM\" },\r\n    { name: \"Israel\", code: \"IL\" },\r\n    { name: \"Italy\", code: \"IT\" },\r\n    { name: \"Jamaica\", code: \"JM\" },\r\n    { name: \"Japan\", code: \"JP\" },\r\n    { name: \"Jersey\", code: \"JE\" },\r\n    { name: \"Jordan\", code: \"JO\" },\r\n    { name: \"Kazakhstan\", code: \"KZ\" },\r\n    { name: \"Kenya\", code: \"KE\" },\r\n    { name: \"Kiribati\", code: \"KI\" },\r\n    { name: \"Korea, Democratic People's Republic of\", code: \"KP\" },\r\n    { name: \"Korea, Republic of\", code: \"KR\" },\r\n    { name: \"Kuwait\", code: \"KW\" },\r\n    { name: \"Kyrgyzstan\", code: \"KG\" },\r\n    { name: \"Lao People's Democratic Republic\", code: \"LA\" },\r\n    { name: \"Latvia\", code: \"LV\" },\r\n    { name: \"Lebanon\", code: \"LB\" },\r\n    { name: \"Lesotho\", code: \"LS\" },\r\n    { name: \"Liberia\", code: \"LR\" },\r\n    { name: \"Libyan Arab Jamahiriya\", code: \"LY\" },\r\n    { name: \"Liechtenstein\", code: \"LI\" },\r\n    { name: \"Lithuania\", code: \"LT\" },\r\n    { name: \"Luxembourg\", code: \"LU\" },\r\n    { name: \"Macao\", code: \"MO\" },\r\n    { name: \"Macedonia, The Former Yugoslav Republic of\", code: \"MK\" },\r\n    { name: \"Madagascar\", code: \"MG\" },\r\n    { name: \"Malawi\", code: \"MW\" },\r\n    { name: \"Malaysia\", code: \"MY\" },\r\n    { name: \"Maldives\", code: \"MV\" },\r\n    { name: \"Mali\", code: \"ML\" },\r\n    { name: \"Malta\", code: \"MT\" },\r\n    { name: \"Marshall Islands\", code: \"MH\" },\r\n    { name: \"Martinique\", code: \"MQ\" },\r\n    { name: \"Mauritania\", code: \"MR\" },\r\n    { name: \"Mauritius\", code: \"MU\" },\r\n    { name: \"Mayotte\", code: \"YT\" },\r\n    { name: \"Mexico\", code: \"MX\" },\r\n    { name: \"Micronesia, Federated States of\", code: \"FM\" },\r\n    { name: \"Moldova, Republic of\", code: \"MD\" },\r\n    { name: \"Monaco\", code: \"MC\" },\r\n    { name: \"Mongolia\", code: \"MN\" },\r\n    { name: \"Montserrat\", code: \"MS\" },\r\n    { name: \"Morocco\", code: \"MA\" },\r\n    { name: \"Mozambique\", code: \"MZ\" },\r\n    { name: \"Myanmar\", code: \"MM\" },\r\n    { name: \"Namibia\", code: \"NA\" },\r\n    { name: \"Nauru\", code: \"NR\" },\r\n    { name: \"Nepal\", code: \"NP\" },\r\n    { name: \"Netherlands\", code: \"NL\" },\r\n    { name: \"Netherlands Antilles\", code: \"AN\" },\r\n    { name: \"New Caledonia\", code: \"NC\" },\r\n    { name: \"New Zealand\", code: \"NZ\" },\r\n    { name: \"Nicaragua\", code: \"NI\" },\r\n    { name: \"Niger\", code: \"NE\" },\r\n    { name: \"Nigeria\", code: \"NG\" },\r\n    { name: \"Niue\", code: \"NU\" },\r\n    { name: \"Norfolk Island\", code: \"NF\" },\r\n    { name: \"Northern Mariana Islands\", code: \"MP\" },\r\n    { name: \"Norway\", code: \"NO\" },\r\n    { name: \"Oman\", code: \"OM\" },\r\n    { name: \"Pakistan\", code: \"PK\" },\r\n    { name: \"Palau\", code: \"PW\" },\r\n    { name: \"Palestinian Territory, Occupied\", code: \"PS\" },\r\n    { name: \"Panama\", code: \"PA\" },\r\n    { name: \"Papua New Guinea\", code: \"PG\" },\r\n    { name: \"Paraguay\", code: \"PY\" },\r\n    { name: \"Peru\", code: \"PE\" },\r\n    { name: \"Philippines\", code: \"PH\" },\r\n    { name: \"Pitcairn\", code: \"PN\" },\r\n    { name: \"Poland\", code: \"PL\" },\r\n    { name: \"Portugal\", code: \"PT\" },\r\n    { name: \"Puerto Rico\", code: \"PR\" },\r\n    { name: \"Qatar\", code: \"QA\" },\r\n    { name: \"Reunion\", code: \"RE\" },\r\n    { name: \"Romania\", code: \"RO\" },\r\n    { name: \"Russian Federation\", code: \"RU\" },\r\n    { name: \"RWANDA\", code: \"RW\" },\r\n    { name: \"Saint Helena\", code: \"SH\" },\r\n    { name: \"Saint Kitts and Nevis\", code: \"KN\" },\r\n    { name: \"Saint Lucia\", code: \"LC\" },\r\n    { name: \"Saint Pierre and Miquelon\", code: \"PM\" },\r\n    { name: \"Saint Vincent and the Grenadines\", code: \"VC\" },\r\n    { name: \"Samoa\", code: \"WS\" },\r\n    { name: \"San Marino\", code: \"SM\" },\r\n    { name: \"Sao Tome and Principe\", code: \"ST\" },\r\n    { name: \"Saudi Arabia\", code: \"SA\" },\r\n    { name: \"Senegal\", code: \"SN\" },\r\n    { name: \"Serbia and Montenegro\", code: \"CS\" },\r\n    { name: \"Seychelles\", code: \"SC\" },\r\n    { name: \"Sierra Leone\", code: \"SL\" },\r\n    { name: \"Singapore\", code: \"SG\" },\r\n    { name: \"Slovakia\", code: \"SK\" },\r\n    { name: \"Slovenia\", code: \"SI\" },\r\n    { name: \"Solomon Islands\", code: \"SB\" },\r\n    { name: \"Somalia\", code: \"SO\" },\r\n    { name: \"South Africa\", code: \"ZA\" },\r\n    { name: \"South Georgia and the South Sandwich Islands\", code: \"GS\" },\r\n    { name: \"Spain\", code: \"ES\" },\r\n    { name: \"Sri Lanka\", code: \"LK\" },\r\n    { name: \"Sudan\", code: \"SD\" },\r\n    { name: \"Suriname\", code: \"SR\" },\r\n    { name: \"Svalbard and Jan Mayen\", code: \"SJ\" },\r\n    { name: \"Swaziland\", code: \"SZ\" },\r\n    { name: \"Sweden\", code: \"SE\" },\r\n    { name: \"Switzerland\", code: \"CH\" },\r\n    { name: \"Syrian Arab Republic\", code: \"SY\" },\r\n    { name: \"Taiwan, Province of China\", code: \"TW\" },\r\n    { name: \"Tajikistan\", code: \"TJ\" },\r\n    { name: \"Tanzania, United Republic of\", code: \"TZ\" },\r\n    { name: \"Thailand\", code: \"TH\" },\r\n    { name: \"Timor-Leste\", code: \"TL\" },\r\n    { name: \"Togo\", code: \"TG\" },\r\n    { name: \"Tokelau\", code: \"TK\" },\r\n    { name: \"Tonga\", code: \"TO\" },\r\n    { name: \"Trinidad and Tobago\", code: \"TT\" },\r\n    { name: \"Tunisia\", code: \"TN\" },\r\n    { name: \"Turkey\", code: \"TR\" },\r\n    { name: \"Turkmenistan\", code: \"TM\" },\r\n    { name: \"Turks and Caicos Islands\", code: \"TC\" },\r\n    { name: \"Tuvalu\", code: \"TV\" },\r\n    { name: \"Uganda\", code: \"UG\" },\r\n    { name: \"Ukraine\", code: \"UA\" },\r\n    { name: \"United Arab Emirates\", code: \"AE\" },\r\n    { name: \"United Kingdom\", code: \"GB\" },\r\n    { name: \"United States\", code: \"US\" },\r\n    { name: \"United States Minor Outlying Islands\", code: \"UM\" },\r\n    { name: \"Uruguay\", code: \"UY\" },\r\n    { name: \"Uzbekistan\", code: \"UZ\" },\r\n    { name: \"Vanuatu\", code: \"VU\" },\r\n    { name: \"Venezuela\", code: \"VE\" },\r\n    { name: \"Viet Nam\", code: \"VN\" },\r\n    { name: \"Virgin Islands, British\", code: \"VG\" },\r\n    { name: \"Virgin Islands, U.S.\", code: \"VI\" },\r\n    { name: \"Wallis and Futuna\", code: \"WF\" },\r\n    { name: \"Western Sahara\", code: \"EH\" },\r\n    { name: \"Yemen\", code: \"YE\" },\r\n    { name: \"Zambia\", code: \"ZM\" },\r\n    { name: \"Zimbabwe\", code: \"ZW\" },\r\n];\r\n\r\nexport { countryList };\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// import { TiTick } from \"react-icons/ti\";\r\n// import { ImCross } from \"react-icons/im\";\r\n\r\nimport { Button, FormFile, Card } from \"react-bootstrap\";\r\n\r\nimport AppContext from \"../../AppContext\";\r\n\r\nimport \"./submit-data-component.css\";\r\n\r\nclass ManageData extends Component {\r\n    //static contextType = AppContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // this.state = {\r\n        //     currentProject: {},\r\n        //     jsonFile: {},\r\n        //     previousProjects: [],\r\n        // };\r\n\r\n        this.fileOnload = this.fileOnload.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.initialiseState();\r\n        console.log(this.context);\r\n        //console.log(navigator.onLine);\r\n    }\r\n    componentDidUpdate() {\r\n        //const newContext = _.cloneDeep(this.state.currentProject);\r\n        //this.context = newContext;\r\n        //console.log(this.context);\r\n    }\r\n\r\n    checkAllFieldsComplete = () => {\r\n        if (this.context.currentProject === undefined) {\r\n            this.context.currentProject = {};\r\n        }\r\n\r\n        if (\r\n            this.context.currentProject.agroEcoData !== undefined &&\r\n            this.context.currentProject.contextScores !== undefined &&\r\n            this.context.currentProject.location !== undefined &&\r\n            this.context.currentProject.pairWiseScores !== undefined &&\r\n            this.context.currentProject.participatoryMatrixScores !==\r\n                undefined &&\r\n            this.context.currentProject.projectInfo !== undefined &&\r\n            this.context.currentProject.results !== undefined\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    submitData = () => {\r\n        const dataToSubmit = _.cloneDeep(this.context.currentProject);\r\n        // console.log(dataToSubmit);\r\n        axios({\r\n            method: \"post\",\r\n            //url: \"http://localhost:5000/api/projects/submit-data/\",\r\n            url: \"https://l-gorman.com/api/projects/submit-data/\",\r\n            data: dataToSubmit,\r\n            headers: {\r\n                accept: \"application/json\",\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    // retrieveProjects = () => {\r\n    //     axios({\r\n    //         method: \"get\",\r\n    //         url: \"https://l-gorman.com/api/projects/get-projects/\",\r\n    //         headers: {\r\n    //             accept: \"application/json\",\r\n    //         },\r\n    //     })\r\n    //         .then((response) => {\r\n    //             this.setState({\r\n    //                 previousProjects: response.data,\r\n    //             });\r\n    //             console.log(response);\r\n    //         })\r\n    //         .catch(function (error) {\r\n    //             console.log(error);\r\n    //         });\r\n    // };\r\n\r\n    downLoadData = () => {\r\n        let dataToDownload = _.cloneDeep(this.context.currentProject);\r\n\r\n        return (\r\n            <a\r\n                type=\"button\"\r\n                href={`data:text/json;charset=utf-8,${encodeURIComponent(\r\n                    JSON.stringify(dataToDownload)\r\n                )}`}\r\n                download=\"filename.json\"\r\n            >\r\n                <Button className=\"bg-light text-dark\" variant=\"outline-dark \">\r\n                    Save Progress\r\n                </Button>\r\n            </a>\r\n        );\r\n    };\r\n\r\n    uploadData = () => {\r\n        return (\r\n            // Good tutorial on file upload\r\n            <div>\r\n                {/* <input type=\"file\" name=\"file\" onChange={this.fileUploader} />\r\n                <div> */}\r\n                <FormFile\r\n                    className=\"button-primary\"\r\n                    onChange={this.fileUploadButton}\r\n                />\r\n                {/* </div> */}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    fileOnload = (event) => {\r\n        // The file's text will be printed here\r\n        // console.log(JSON.parse(event.target.result));\r\n        const jsonFile = JSON.parse(event.target.result);\r\n        this.context.currentProject = {};\r\n        this.context.currentProject = _.cloneDeep(jsonFile);\r\n\r\n        console.log(this.context);\r\n        // this.setState(\r\n        //     { currentProject: jsonFile.currentProject },\r\n        //     //() => (this.context.currentProject = jsonFile.currentProject)\r\n        //     () => {\r\n        //         this.setState(\r\n        //             {\r\n        //                 currentProject: jsonFile.cur,\r\n        //             },\r\n        //             () => {\r\n        //                 this.setContext();\r\n        //             }\r\n        //         );\r\n        //     }\r\n        // );\r\n    };\r\n\r\n    fileUploadButton = (event) => {\r\n        //console.log(event.target.files[0]);\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = this.fileOnload;\r\n        reader.readAsText(event.target.files[0]);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Manage Data</h1>\r\n                <div className=\"cards-container\">\r\n                    <Card className=\"card-style \">\r\n                        <Card.Header className=\"bg-dark text-white\">\r\n                            Save Project Progress\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                This application allows you to save your\r\n                                progress as a JSON file. At any point, you can\r\n                                upload this file into the application to\r\n                                continue collecting/editing your data\r\n                            </Card.Text>\r\n                            {this.downLoadData()}\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card className=\"card-style\">\r\n                        <Card.Header className=\"bg-dark text-white\">\r\n                            Load Project\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                Here you can load in data from a previously\r\n                                saved project. This data must be stored as a\r\n                                JSON file.\r\n                            </Card.Text>\r\n                            <footer>\r\n                                <div className=\"upload-button\">\r\n                                    {this.uploadData()}\r\n                                </div>\r\n                            </footer>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                    <Card className=\"card-style\">\r\n                        <Card.Header className=\"bg-dark text-white\">\r\n                            Submit Data\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                Submit your data in order for it to be processed\r\n                                into csv format. Follow this &nbsp;\r\n                                <a\r\n                                    href=\"https://l-gorman.com/LegumeCHOICE/\"\r\n                                    target=\"_blank\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                >\r\n                                    link\r\n                                </a>\r\n                                &nbsp; to access publicly available legume\r\n                                CHOICE projects. To find data from your own\r\n                                project, go to \"IndividualProjects\" and search\r\n                                for the folder which matches your project ID.{\" \"}\r\n                                <br />\r\n                                <br /> You cannot submit data unless data has\r\n                                been entered, project information has been\r\n                                entered, and results have been viewed.\r\n                            </Card.Text>\r\n                            {this.checkAllFieldsComplete() ? (\r\n                                <Button\r\n                                    className=\"bg-light text-dark\"\r\n                                    variant=\"outline-dark \"\r\n                                    onClick={this.submitData}\r\n                                >\r\n                                    Submit\r\n                                </Button>\r\n                            ) : (\r\n                                <Button\r\n                                    className=\"bg-light text-dark\"\r\n                                    variant=\"outline-dark \"\r\n                                    onClick={this.submitData}\r\n                                    disabled={true}\r\n                                >\r\n                                    Project not yet complete\r\n                                </Button>\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nManageData.contextType = AppContext;\r\n\r\nexport default ManageData;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { AiOutlineDatabase, AiFillHome, AiOutlineSend } from \"react-icons/ai\";\r\nimport { BsFolder } from \"react-icons/bs\";\r\nimport { IoIosInformationCircleOutline } from \"react-icons/io\";\r\nimport { RiUserSettingsLine } from \"react-icons/ri\";\r\nimport { VscAccount } from \"react-icons/vsc\";\r\nimport { FaLeaf, FaDatabase } from \"react-icons/fa\";\r\nimport { GoGraph, GoSettings } from \"react-icons/go\";\r\nimport Home from \"../home-component/home-component\";\r\nimport Admin from \"../admin-data-entry-component/admin-data-entry-component\";\r\nimport Login from \"../login-component/login-component\";\r\nimport DataEntry from \"../data-entry-component/data-entry-component\";\r\nimport Results from \"../results-component/results-component\";\r\nimport ViewContext from \"../view-context-component/view-context-component\";\r\nimport ProjectInformation from \"../project-information-component/project-information-component\";\r\nimport ManageData from \"../submit-data-component/submit-data-component\";\r\n//import Legumes from \"../legumes-component/legumes-component\";\r\n\r\n// Set the icon size for the imported icons\r\nconst iconSize = 30;\r\n\r\nconst sidebarlinkcName = \"sidebar-nav-link\";\r\n\r\nconst SidebarData = [\r\n    {\r\n        title: \"Information\",\r\n        routeKey: \"information-route\",\r\n        component: <Home />,\r\n        path: \"/info\",\r\n        icon: <IoIosInformationCircleOutline size={iconSize} />,\r\n        cName: sidebarlinkcName,\r\n    },\r\n    {\r\n        title: \"Project Information\",\r\n        routeKey: \"project-info-route\",\r\n        component: <ProjectInformation />,\r\n        path: \"/project-info\",\r\n\r\n        icon: <GoSettings size={iconSize} />,\r\n        cName: sidebarlinkcName,\r\n    },\r\n    {\r\n        title: \"Data Entry\",\r\n        routeKey: \"data-entry-route\",\r\n        component: <DataEntry />,\r\n        path: \"/data-entry\",\r\n\r\n        icon: <AiOutlineDatabase size={iconSize} />,\r\n        cName: sidebarlinkcName,\r\n    },\r\n\r\n    {\r\n        title: \"Results\",\r\n        routeKey: \"results-route\",\r\n        component: <Results />,\r\n        path: \"/results\",\r\n\r\n        icon: <GoGraph size={iconSize} />,\r\n        cName: sidebarlinkcName,\r\n    },\r\n\r\n    // {\r\n    //     title: \"Admin\",\r\n    //     routeKey: \"admin-route\",\r\n    //     component: <Admin />,\r\n    //     path: \"/admin\",\r\n    //     icon: <RiUserSettingsLine size={iconSize} />,\r\n    //     cName: sidebarlinkcName,\r\n    // },\r\n    // {\r\n    //     title: \"Login\",\r\n    //     routeKey: \"login-route\",\r\n    //     component: <Login />,\r\n    //     path: \"/login\",\r\n    //     icon: <VscAccount size={iconSize} />,\r\n    //     cName: sidebarlinkcName,\r\n    // },\r\n    {\r\n        title: \"Manage Data\",\r\n        routeKey: \"manage-data-route\",\r\n        component: <ManageData />,\r\n        path: \"/manage-data\",\r\n        icon: <BsFolder size={iconSize} />,\r\n        cName: sidebarlinkcName,\r\n    },\r\n\r\n    // {\r\n    //     title: \"View App Data\",\r\n    //     routeKey: \"app-data-route\",\r\n    //     component: <ViewContext />,\r\n    //     path: \"/app-data\",\r\n    //     icon: <FaDatabase size={iconSize} />,\r\n    //     cName: sidebarlinkcName,\r\n    // },\r\n    // {\r\n    //     title: \"Specify Location\",\r\n    //     routeKey: \"location\",\r\n    //     component: <MapPolygon />,\r\n    //     path: \"/location\",\r\n    //     icon: <FiMapPin size={iconSize} />,\r\n    //     cName: sidebarlinkcName,\r\n    // },\r\n];\r\n\r\nexport default SidebarData;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { AiOutlineMenu, AiOutlineClose } from \"react-icons/ai\";\r\nimport { BsCheck } from \"react-icons/bs\";\r\nimport { TiTick, TiTimes } from \"react-icons/ti\";\r\nimport \"./sidebar-component.css\";\r\nimport SidebarData from \"./sidebar-data\";\r\n\r\nimport _ from \"lodash\";\r\nimport AppContext from \"../../AppContext\";\r\n\r\nclass Sidebar extends React.Component {\r\n    //static contextType = AppContext;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Setting the initial state to closed\r\n\r\n        this.state = {\r\n            sideBarOpen: false,\r\n            project: \"Not Yet Specified\",\r\n            dataEntryComplete: false,\r\n            projectInformationComplete: false,\r\n            resultsComplete: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    componentDidUpdate() {}\r\n\r\n    initialiseContext() {\r\n        let newProject = \"Not Yet Specified\";\r\n        console.log(this.context);\r\n        if (this.context.currentProject === undefined) {\r\n            this.context.currentProject = {};\r\n        }\r\n        if (this.context.currentProject.projectInfo !== undefined) {\r\n            newProject = _.cloneDeep(\r\n                this.context.currentProject.projectInfo.projectName\r\n            );\r\n        }\r\n\r\n        let projectInfoState = false;\r\n        if (this.context.currentProject.projectInfo !== undefined) {\r\n            projectInfoState = true;\r\n        }\r\n        let dataEntryState = false;\r\n        if (\r\n            this.context.currentProject.contextScores !== undefined &&\r\n            this.context.currentProject.agroEcoData !== undefined &&\r\n            this.context.currentProject.pairWiseScores !== undefined &&\r\n            this.context.currentProject.participatoryMatrixScores !== undefined\r\n        ) {\r\n            dataEntryState = true;\r\n        }\r\n        let resultsState = false;\r\n        if (this.context.currentProject.results !== undefined) {\r\n            resultsState = true;\r\n        }\r\n\r\n        this.setState({\r\n            project: newProject,\r\n            dataEntryComplete: dataEntryState,\r\n            projectInformationComplete: projectInfoState,\r\n            resultsComplete: resultsState,\r\n        });\r\n    }\r\n\r\n    // When this function is trigered, state of the side-bar is change, which triggers a change in the css\r\n    toggleSidebar = () => {\r\n        this.setState(\r\n            {\r\n                sideBarOpen: !this.state.sideBarOpen,\r\n            },\r\n            () => this.initialiseContext()\r\n        );\r\n    };\r\n\r\n    returnTopBarInformation = () => {\r\n        return (\r\n            <div className=\"top-bar-items\">\r\n                <p className=\"top-bar-text\">Project: {this.state.project}</p>\r\n                <p className=\"top-bar-text\">\r\n                    Data Entry:{\" \"}\r\n                    {this.state.dataEntryComplete ? (\r\n                        <BsCheck size={40} />\r\n                    ) : (\r\n                        <AiOutlineClose size={40} />\r\n                    )}\r\n                </p>\r\n                <p className=\"top-bar-text\">\r\n                    Project Information:{\" \"}\r\n                    {this.state.projectInformationComplete ? (\r\n                        <BsCheck size={40} />\r\n                    ) : (\r\n                        <AiOutlineClose size={40} />\r\n                    )}\r\n                </p>\r\n                <p className=\"top-bar-text\">\r\n                    Results:{\" \"}\r\n                    {this.state.resultsComplete ? (\r\n                        <BsCheck size={40} />\r\n                    ) : (\r\n                        <AiOutlineClose size={40} />\r\n                    )}\r\n                </p>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container_row\">\r\n                <div className=\"top-bar\">\r\n                    <a onClick={this.toggleSidebar}>\r\n                        <AiOutlineMenu size={50} color=\"white\" />\r\n                    </a>\r\n                    {this.returnTopBarInformation()}\r\n                </div>\r\n\r\n                <div\r\n                    className={\r\n                        this.state.sideBarOpen\r\n                            ? \"sidebar-container active\"\r\n                            : \"sidebar-container\"\r\n                    }\r\n                >\r\n                    <div\r\n                        key=\"sidebar-header \"\r\n                        className=\"sidebar-header-container\"\r\n                    >\r\n                        <h2>LegumeCHOICE</h2>\r\n\r\n                        <a onClick={this.toggleSidebar}>\r\n                            <div className=\"close-menu-icon\">\r\n                                <IoIosArrowBack size={40} color=\"white\" />\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n\r\n                    <div className=\"link-container\">\r\n                        <ul>\r\n                            {SidebarData.map((item, index) => {\r\n                                return (\r\n                                    <Link\r\n                                        key={index + \"-link-item\"}\r\n                                        className={item.cName}\r\n                                        to={item.path}\r\n                                        onClick={this.toggleSidebar}\r\n                                    >\r\n                                        <div className=\"sidebar-list-item\">\r\n                                            <li\r\n                                                className=\"sidebar-list-item\"\r\n                                                key={index + \"-list-item\"}\r\n                                            >\r\n                                                <span className=\"side-bar-link-icon\">\r\n                                                    {item.icon}\r\n                                                </span>\r\n                                                <span className=\"side-bar-link-text\">\r\n                                                    {item.title}\r\n                                                </span>\r\n                                            </li>\r\n                                        </div>\r\n                                    </Link>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSidebar.contextType = AppContext;\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\n\r\nimport {\r\n    //BrowserRouter as Router,\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport Sidebar from \"./components/sidebar-component/sidebar-component\";\r\n\r\n// In this location, we have all of the details of each of the individual components\r\nimport SidebarData from \"./components/sidebar-component/sidebar-data\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport AppContext from \"./AppContext\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //this.state = AppContext;\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.setState({ currentProject: {} });\r\n    }\r\n\r\n    render() {\r\n        {\r\n            /*basename={process.env.PUBLIC_URL + \"/\"}*/\r\n        }\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <AppContext.Provider value={{}}>\r\n                        <Sidebar />\r\n                        <div className=\"outer-page-container\">\r\n                            <div className=\"inner-page-container\">\r\n                                <Switch>\r\n                                    {/* Context provider specifies which components should have access to the context */}\r\n                                    {SidebarData.map((item) => {\r\n                                        // Return Each of the components and their specified routes\r\n                                        return (\r\n                                            <Route\r\n                                                exact\r\n                                                path={item.path}\r\n                                                key={item.routeKey}\r\n                                            >\r\n                                                {item.component}\r\n                                            </Route>\r\n                                        );\r\n                                    })}\r\n                                    <Redirect exact from=\"/\" to=\"/info\" />\r\n                                </Switch>\r\n                            </div>\r\n                        </div>\r\n                    </AppContext.Provider>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nApp.contextType = AppContext;\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}