{"version":3,"sources":["components/home-component/home-component-markdown.md","components/home-component/home-component.js","AppContext.js","components/admin-data-entry-component/admin-data-entry-component.js","components/login-component/login-component.js","components/data-entry-component/data-entry-data.js","components/agro-ecological-filter-component/agro-ecological-data.js","components/agro-ecological-filter-component/agro-ecological-filter.js","components/context-scores-component/context-scores-data.js","components/context-scores-component/context-scores-component.js","components/participatory-matrix-scoring-component/participatory-matrix-data.js","components/participatory-matrix-scoring-component/participatory-matrix-scoring.js","components/pairwise-ranking-component/pairwise-ranking-data.js","components/pairwise-ranking-component/pairwise-ranking-component.js","components/data-entry-component/data-entry-component.js","components/results-component/results-data.js","components/legumes-component/legume-information-clean.js","components/legumes-component/legume-data.js","components/results-component/results-component.js","components/view-context-component/view-context-component.js","components/map-polygon-component/map-polygon-component.js","components/project-information-component/project-information-component.js","components/project-information-component/countries-list.js","components/submit-data-component/submit-data-component.js","components/sidebar-component/sidebar-data.js","components/sidebar-component/sidebar-component.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Home","props","state","file","markdownFile","markdown","axios","get","this","then","response","setState","data","className","children","type","href","download","Button","Component","AppContext","createContext","Login","handleChange","event","variable","target","value","authenticateUser","preventDefault","authenticated","username","password","undefined","context","currentProject","user","newState","_","cloneDeep","newContext","Form","Label","Control","onChange","onClick","React","contextType","legfunc","name","label","typologies","participants","attributes","biofilters","minValue","maxValue","AgroEcoData","AgroEco","tableHeader","renderDefaultValue","tableBody","map","biofilter","index","FormControl","bioFiltersArray","forEach","biofilterSubset","biofilterIndex","parseFloat","agroEcoData","console","log","Card","Header","Body","Text","Table","striped","bordered","hover","ContextScoreData","scores","attributesIndex","length","push","scoreType","attribute","score","participantIndex","typologyIndex","participant","typology","ContextScore","renderRadarChart","avergeScores","scoreLabels","radarData","meta","class","color","defaultOptions","size","axes","scales","captions","captionMargin","dots","zoomDistance","setViewBox","options","smoothing","points","d","toFixed","i","axisProps","scaleProps","fill","shapeProps","captionProps","textAnchor","fontSize","fontFamily","dotProps","mouseEnter","dot","mouseLeave","parseInt","scoresArray","element","averageAttributes","changeIndividualScores","arr","total","numberofscores","average","scoreIndex","averageAttribute","attributetoAverage","scoresLength","renderRowAverage","valueToReturn","contextRow","rowAttribute","rowTypology","rowParticipant","as","allRows","key","rowSpan","colSpan","contextScores","newSelections","JSON","parse","stringify","func","includes","MatrixData","farmerAttributes","farmers","legumeFunctions","blankFarmer","number","gender","selections","summary","scoreTypes","scoresIndividual","legumefunction","legumeFunction","ParticipatoryMatrix","addFarmer","farmersArray","newfarmertoAdd","updateTotal","updateFarmerSummary","farmEntryFields","scoringInput","farmerNameInput","farmerDetailsSelectInput","farmer","updateFarmerName","defaultValue","updateFarmerScore","updateFarmerDetailesSelect","whichFarmer","farmerIndex","legumefuncs","whichValue","funct","funcIndex","newScore","selection","tableRows","calculateAttributeRank","individualScore","firstScore","secondScore","numberOfScores","numberOfOccurences","occurences","conversion","rank","prevState","updateTypologyScore","scoresByLegumeFunction","individualScores","mapThroughFarmers","summaryscore","summaryScoreIndex","totalScoreTemp","farmerSelection","selectionIndex","resultsTable","scoreTypeIndex","bind","participatoryMatrixScores","scoreSum","relevantFarmers","farmerSelectionIndex","toLowerCase","style","PairwiseRankingData","male","pairwiseSelection","totals","female","averages","previousidentifiers","outerArrayIndex","function1","innerArrayIndex","function2","intermediateidentifier","sort","identifier","join","funct1","funct2","PairwiseRanking","updateSelections","selectedValue","selectionArr","selectionItem","upDateTotalScore","alert","totalsArray","totalsItem","totalsIndex","updateAverage","totalsArrayMale","totalsArrayFemale","newAverages","newAverage","pairWiseTable","item","itemIndex","pairWiseResultsTable","pairWiseScores","DataEntry","renderComponents","components","component","functionFitForm","legfuncCopy","contextFitForm","attributesCopy","legumeResultsToAdd","functionFit","contextFit","agroEcoFit","overallFit","overallRank","legfunction","agroEcoCopy","agroecofiltter","agroEcoFilter","biofiltersCopy","biofiltersCleaned","resultsData","agroEcoFilters","agroEcoFitSummary","functionFitSummary","contextFitSummary","emptyScoresForLegume","legumes","resultsFilter","selectOptions","orderOptions","numberOfLegumesOptions","whichResults","order","numberOfLegumes","formFilled","allLegumes","food","feed","income","fuel","land","labour","seed","water","markets","rainfall","min","max","temp","alt","soilpH","legumeTypes","sources","legume","legumesData","Results","initialiseResults","newLegumes","newLegume","results","contextData","newContextAverages","newcontextscore","contextscore","pairWiseData","participatoryMatrixData","newFunctionAverages","newfunction","pairwisescoreaverages","pairwisescore","matrixscore","calculateLegumeScores","legumeContextScores","legumecontext","formcontext","scoreToReturn","legumeFunctionScores","formfunction","legumeAgroEcoScores","legumeMin","legumeMax","formvalue","newLegumeState","legumeContextScore","contextAttribute","functionAttribute","legumeAgroEco","agroEcoSummary","agroecoscoreAccumulator","agroecoscore","contextAccumulator","contextScore","functionAccumulator","functionScore","avgFit","firstLegume","valuesEncountered","secondLegume","checkFormFilled","returnResultsForSummaryTable","agroEcoTable","orderAndFilterLegume","agroEcoItem","contextFitTable","contextItem","functionFitTable","functionItem","returnRank","returnScore","compareScores","a","b","scoreA","scoreB","filter","legumeArr","slice","changeCellColour","summaryTable","renderLegumeResults","changeSelection","resultsFilters","FormGroup","controlId","FormLabel","selectionoption","orderoption","numberoption","renderBody","ViewContext","initialiseContext","appData","center","lat","lng","markerpositions","DraggableMarker","markerRef","useRef","updateMarker","useMemo","dragend","marker","current","newArray","clone","newLat","getLatLng","newLng","changeMarkerPositions","Marker","draggable","eventHandlers","position","ref","DraggablePolygon","Polygon","pathOptions","positions","location","MapPolygon","useState","markerPositions","mapCenter","AppContextMap","useContext","useEffect","MapContainer","zoom","scrollWheelZoom","TileLayer","attribution","url","countryNames","code","country","projectID","uuidv4","ProjectInformation","userLocationFound","userLocation","projectName","majorRegion","minorRegion","communityName","communityType","description","date","Date","window","scrollTo","projectInfo","FormText","placeholder","readOnly","selected","rows","ManageData","checkAllFieldsComplete","submitData","dataToSubmit","method","headers","accept","catch","error","downLoadData","dataToDownload","encodeURIComponent","variant","uploadData","FormFile","fileUploadButton","fileOnload","jsonFile","result","files","reader","FileReader","onload","readAsText","rel","disabled","sidebarlinkcName","SidebarData","title","routeKey","path","icon","cName","Sidebar","toggleSidebar","sideBarOpen","returnTopBarInformation","project","dataEntryComplete","projectInformationComplete","resultsComplete","newProject","projectInfoState","dataEntryState","resultsState","to","App","Provider","exact","from","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7a764bc0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home-component-markdown.0579c1b4.md\";","import React, { Component } from \"react\";\nimport \"./home-component.css\";\nimport axios from \"axios\";\nimport ReactMarkdown from \"react-markdown\";\nimport markdownFile from \"./home-component-markdown.md\";\n\nimport { Button } from \"react-bootstrap\";\nclass Home extends Component {\n    // Initialising state for the component\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            file: markdownFile,\n            markdown: \"\",\n        };\n    }\n\n    // Importing markdown when the file is loaded\n    componentDidMount() {\n        axios.get(this.state.file).then((response) => {\n            this.setState({\n                markdown: response.data,\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"markdown-container\">\n                <ReactMarkdown children={this.state.markdown}></ReactMarkdown>\n                <a\n                    type=\"button\"\n                    href={\"legume_CHOICE_guide.pdf\"}\n                    download=\"legume_CHOICE_guide.pdf\"\n                >\n                    <Button>Download Guide</Button>\n                </a>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { createContext } from \"react\";\n\n// Skeleton of the app data\n/*\n    user: {},\n    agroEcoData: {},\n    contextScores: {},\n    pairWiseScores: {},\n    participatoryMatrixScores: {},\n    results: {},\n*/\n\n// Creating the app context to be used with the react contextapi\nconst AppContext = createContext();\n\nexport default AppContext;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\n\nimport \"./admin-data-entry-component.css\";\n\nclass Admin extends Component {\n    /////////////////////////////////////////////////////////////////////////////////\n    // Initialising variables\n    /////////////////////////////////////////////////////////////////////////////////\n    constructor(props) {\n        super(props);\n        //console.log(\"Constructor\");\n        this.state = {\n            usersLocal: [],\n            usersOnline: [],\n\n            formEntry: {\n                username: \"\",\n                email: \"\",\n            },\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.addUserlocal = this.addUserlocal.bind(this);\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Loaded when the page loads. Fetches entries from the database\n    /////////////////////////////////////////////////////////////////////////////////\n    componentDidMount() {\n        axios({\n            method: \"get\",\n            url: \"https://l-gorman.com/api/users\",\n            headers: {\n                accept: \"application/json\",\n            },\n        })\n            .then((response) => {\n                this.setState({\n                    usersLocal: response.data,\n                    usersOnline: response.data,\n                });\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Function for adding user\n    /////////////////////////////////////////////////////////////////////////////////\n    addUserlocal = (event) => {\n        event.preventDefault();\n        //console.log(\"About to update state\");\n        const prevUsers = this.state.usersLocal;\n        const newUser = this.state.formEntry;\n\n        // Checking if the username exists already\n        if (newUser.username === \"\") {\n            alert(\"No username entered\");\n            return;\n        }\n        if (prevUsers.some((user) => user.username === newUser.username)) {\n            alert(\"Username already exists\");\n            return;\n        }\n\n        // Checking if the email exists already\n        if (prevUsers.some((user) => user.email === newUser.email)) {\n            alert(\"email already registered\");\n            return;\n        }\n\n        // Updating state\n        this.setState({\n            usersLocal: [...prevUsers, newUser],\n            formEntry: {\n                username: \"\",\n                email: \"\",\n            },\n        });\n    };\n\n    handleChange = (event) => {\n        event.preventDefault();\n        const name = [event.target.name];\n        const value = event.target.value;\n        this.setState((prevState) => ({\n            formEntry: {\n                ...prevState.formEntry,\n                [name]: value,\n            },\n        }));\n    };\n    /////////////////////////////////////////////////////////////////////////////////\n    // Function for deleting user\n    /////////////////////////////////////////////////////////////////////////////////\n    deleteUser = (event, params = {}) => {\n        event.preventDefault();\n\n        const oldUsers = this.state.usersLocal;\n        const newUser = oldUsers.filter(\n            (user) =>\n                user.email !== params.email || user.username !== params.username\n        );\n        //console.log(newUser);\n\n        this.setState((prevState) => ({\n            usersLocal: newUser,\n        }));\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Subset Arrays\n    /////////////////////////////////////////////////////////////////////////////////\n\n    subsetArrays = (array, variable) => {\n        return array.map((item) => {\n            return item[variable];\n        });\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Making Changes to Db\n    /////////////////////////////////////////////////////////////////////////////////\n    saveChanges = (event) => {\n        //event.preventDefault();\n\n        const usersLocal = this.state.usersLocal;\n        const usersOnline = this.state.usersOnline;\n\n        //console.log(this.subsetArrays(usersOnline, \"email\"));\n        let usersToAdd = [];\n        let usersToDelete = [];\n\n        usersToAdd = usersLocal.filter(\n            (localusers) =>\n                !this.subsetArrays(usersOnline, \"email\").includes(\n                    localusers.email\n                ) &&\n                !this.subsetArrays(usersOnline, \"username\").includes(\n                    localusers.username\n                )\n        );\n\n        usersToDelete = usersOnline.filter(\n            (localusers) =>\n                !this.subsetArrays(usersLocal, \"email\").includes(\n                    localusers.email\n                ) &&\n                !this.subsetArrays(usersLocal, \"username\").includes(\n                    localusers.username\n                )\n        );\n\n        //console.log(usersToDelete);\n\n        //console.log(usersToDelete);\n\n        if (usersToAdd.length > 0) {\n            axios({\n                method: \"post\",\n                url: \"https://l-gorman.com/api/users/insertmany/\",\n                data: { newUsers: usersToAdd },\n                headers: {\n                    accept: \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                },\n            })\n                .then((response) => {\n                    console.log(response);\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        }\n\n        if (usersToDelete.length > 0) {\n            axios({\n                method: \"post\",\n                url: \"https://l-gorman.com/api/users/deletemany/\",\n                data: { deleteUsers: usersToDelete },\n                headers: {\n                    accept: \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                },\n            })\n                .then((response) => {\n                    console.log(response);\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        }\n\n        this.setState(() => ({\n            usersOnline: usersLocal,\n        }));\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Checking if the component has updated\n    /////////////////////////////////////////////////////////////////////////////////\n    componentDidUpdate() {\n        console.log(this.state);\n    }\n\n    userForm = () => {\n        return (\n            <>\n                <div className=\"form-container\">\n                    <h2>New Users</h2>\n                    <Form onSubmit={this.addUserlocal}>\n                        <Form.Group controlId=\"basicusername\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control\n                                name=\"username\"\n                                type=\"text\"\n                                onChange={this.handleChange}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"basicemail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                name=\"email\"\n                                type=\"email\"\n                                onChange={this.handleChange}\n                            />\n                        </Form.Group>\n\n                        <Button\n                            className=\"delete-button\"\n                            variant=\"primary\"\n                            type=\"submit\"\n                        >\n                            Add User\n                        </Button>\n                    </Form>\n                </div>\n                <div className=\"form-container\">\n                    <h2>Users</h2>\n                    {this.state.usersLocal.map((user, index) => {\n                        return (\n                            <div\n                                className=\"user-container\"\n                                key={\"user \" + user.email + \" \" + user.username}\n                            >\n                                {index + 1}. {user.username} ({user.email})\n                                <div className=\"deleteButton\">\n                                    <Button\n                                        onClick={(e) =>\n                                            this.deleteUser(e, {\n                                                id: user._id,\n                                                username: user.username,\n                                                email: user.email,\n                                            })\n                                        }\n                                    >\n                                        Delete User\n                                    </Button>\n                                </div>\n                            </div>\n                        );\n                    })}\n                    <div className=\"user-container\">\n                        <Button\n                            onClick={this.saveChanges}\n                            className=\"deleteButton\"\n                        >\n                            Submit\n                        </Button>\n                    </div>\n                </div>\n            </>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>Admin component</h1>\n                <this.userForm />\n            </div>\n        );\n    }\n}\n\nexport default Admin;\n","import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nimport AppContext from \"../../AppContext\";\n\nimport _ from \"lodash\";\n\nimport \"./login-component.css\";\n\nclass Login extends React.Component {\n    // Initialising context\n    //static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            authenticated: false,\n        };\n    }\n\n    componentDidMount() {\n        if (this.context.currentProject === undefined) {\n            this.context.currentProject = {};\n        }\n        if (this.context.currentProject.user !== undefined) {\n            const newState = _.cloneDeep(this.context.currentProject.user);\n            this.setState(newState);\n        }\n\n        if (this.context.currentProject.user === undefined) {\n            const newContext = _.cloneDeep(this.state);\n            this.context.currentProject.user = newContext;\n        }\n    }\n    componentDidUpdate() {\n        const newContext = _.cloneDeep(this.state);\n        this.context.currentProject.user = newContext;\n    }\n\n    handleChange = (event, props) => {\n        this.setState({\n            [props.variable]: event.target.value,\n        });\n    };\n\n    authenticateUser = (event) => {\n        event.preventDefault();\n        this.setState({\n            authenticated: true,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"form-container\">\n                <h1>Login</h1>\n                <Form>\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        value={this.state.username}\n                        onChange={(event) =>\n                            this.handleChange(event, { variable: \"username\" })\n                        }\n                    />\n                    {/* <Form.Label>Project ID</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        value={this.state.projectID}\n                        onChange={(event) =>\n                            this.handleChange(event, { variable: \"projectID\" })\n                        }\n                    /> */}\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        value={this.state.password}\n                        onChange={(event) =>\n                            this.handleChange(event, { variable: \"password\" })\n                        }\n                    />\n\n                    <Button\n                        className=\"submitButton\"\n                        type=\"submit\"\n                        onClick={this.authenticateUser}\n                    >\n                        Authenticate\n                    </Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nLogin.contextType = AppContext;\n\nexport default Login;\n","export const legfunc = [\n    {\n        name: \"Food\",\n        label: \"food\",\n    },\n    {\n        name: \"Feed\",\n        label: \"feed\",\n    },\n    {\n        name: \"Income\",\n        label: \"income\",\n    },\n    {\n        name: \"Erosion Control\",\n        label: \"erosion-control\",\n    },\n    {\n        name: \"Fuel\",\n        label: \"fuel\",\n    },\n    {\n        name: \"Soil Fertility\",\n        label: \"soil-fertility\",\n    },\n];\n\nexport const typologies = [\n    {\n        name: \"Low\",\n        label: \"low\",\n    },\n    {\n        name: \"Medium\",\n        label: \"med\",\n    },\n    {\n        name: \"High\",\n        label: \"high\",\n    },\n];\n\nexport const participants = [\n    {\n        name: \"Farmer\",\n        label: \"farmer\",\n    },\n    {\n        name: \"Expert\",\n        label: \"expert\",\n    },\n];\n\nexport const attributes = [\n    {\n        name: \"Land\",\n        label: \"land\",\n    },\n    {\n        name: \"Labour\",\n        label: \"labour\",\n    },\n    {\n        name: \"Seed\",\n        label: \"seed\",\n    },\n    {\n        name: \"Inputs and services\",\n        label: \"inp-serv\",\n    },\n    {\n        name: \"Knowledge and skills\",\n        label: \"knowl-skill\",\n    },\n    {\n        name: \"Water\",\n        label: \"water\",\n    },\n    {\n        name: \"Markets\",\n        label: \"markets\",\n    },\n];\n\nexport const biofilters = [\n    {\n        name: \"Rainfall (mm/year)\",\n        label: \"rainfall\",\n        minValue: 280,\n        maxValue: 4290,\n        value: (280 + 4290) / 2,\n    },\n    {\n        name: \"Temperature (mean °C/month)\",\n        label: \"temp\",\n        minValue: 0,\n        maxValue: 45,\n        value: 45 / 2,\n    },\n\n    {\n        name: \"Altitude (average masl)\",\n        label: \"alt\",\n        minValue: 0,\n        maxValue: 3800,\n        value: 3800 / 2,\n    },\n\n    {\n        name: \"Soil pH (average)\",\n        label: \"soilpH\",\n        minValue: 4,\n        maxValue: 9,\n        value: (4 + 9) / 2,\n    },\n];\n","import { biofilters } from \"../data-entry-component/data-entry-data\";\nimport _ from \"lodash\";\n\nconst biofiltersCopy = _.cloneDeep(biofilters);\nconst AgroEcoData = {\n    biofilters: biofiltersCopy,\n};\n\nexport { AgroEcoData };\n","// Component to render the \"agro-ecological-filter\" for data entry\n// This component allows users to specify the context for their study\n\nimport React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport { Card } from \"react-bootstrap\";\n\nimport _ from \"lodash\";\nimport { AgroEcoData } from \"./agro-ecological-data\";\n\nimport \"./agro-ecological-filter.css\";\nimport \"../data-entry-component/data-entry-component.css\";\nimport AppContext from \"../../AppContext\";\n\nclass AgroEco extends React.Component {\n    //static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = _.cloneDeep(AgroEcoData);\n    }\n\n    componentDidMount() {\n        if (this.context.currentProject.agroEcoData !== undefined) {\n            const newState = _.cloneDeep(\n                this.context.currentProject.agroEcoData\n            );\n            this.setState(newState);\n        } else {\n            const newContext = _.cloneDeep(this.state);\n            this.context.currentProject.agroEcoData = newContext;\n        }\n    }\n\n    componentDidUpdate() {\n        const newContext = _.cloneDeep(this.state);\n        this.context.currentProject.agroEcoData = newContext;\n        console.log(this.context.currentProject.agroEcoData);\n    }\n    tableHeader = () => {\n        return (\n            <thead>\n                <tr>\n                    <th>Biofilters</th>\n                    <th>Site Values</th>\n                </tr>\n            </thead>\n        );\n    };\n\n    renderDefaultValue = (props) => {\n        return props.value;\n    };\n    tableBody = () => {\n        return (\n            <tbody>\n                {this.state.biofilters.map((biofilter, index) => {\n                    return (\n                        <tr key={\"agro-eco-table\" + biofilter.label}>\n                            <td>{biofilter.name}</td>\n                            <td>\n                                <FormControl\n                                    type=\"number\"\n                                    value={this.renderDefaultValue({\n                                        value: biofilter.value,\n                                    })}\n                                    onChange={(event) => {\n                                        this.handleChange(event, {\n                                            biofilter: biofilter,\n                                        });\n                                    }}\n                                />\n                            </td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        );\n    };\n\n    handleChange = (event, props) => {\n        const bioFiltersArray = this.state.biofilters;\n\n        // if (\n        //     event.target.value < biofilter.minValue ||\n        //     event.target.value > biofilter.maxValue\n        // ) {\n        //     alert(\"Outside of range\");\n        //     return;\n        // }\n\n        bioFiltersArray.forEach((biofilterSubset, biofilterIndex) => {\n            if (biofilterSubset.label === props.biofilter.label) {\n                bioFiltersArray[biofilterIndex].value = parseFloat(\n                    event.target.value\n                );\n            }\n        });\n\n        this.setState({\n            biofilters: bioFiltersArray,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"table-container\">\n                <div className=\"card-container\">\n                    <Card>\n                        <Card.Header className=\"bg-dark text-white\">\n                            <h2>Agroecological Filter</h2>\n                        </Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n                                Using your own knowledge of the field site fill\n                                the green cells with representative data. These\n                                data are used to assess agro-ecological\n                                suitability of the field site for different\n                                legume options in the Legume Option Scores\n                                sheet.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div>\n                    <Form>\n                        <Table striped bordered hover>\n                            {this.tableHeader()}\n\n                            {this.tableBody()}\n                        </Table>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nAgroEco.contextType = AppContext;\n\nexport default AgroEco;\n","/* Creating all of the possible combinations for context scores \n Could be done in a better way with a series of map functions, or some sort of recursive for loop\nThis is the quickest/best way I could come up with*/\n\nimport {\n    typologies,\n    participants,\n    attributes,\n} from \"../data-entry-component/data-entry-data\";\n\nconst ContextScoreData = {\n    attributes: attributes,\n    participants: participants,\n    typologies: typologies,\n    scores: [],\n};\n\nfor (\n    let attributesIndex = 0;\n    attributesIndex < attributes.length;\n    attributesIndex++\n) {\n    // Giving room to add average scores for each attribute\n    ContextScoreData.scores.push({\n        scoreType: \"average\",\n        attribute: attributes[attributesIndex],\n        score: 0,\n    });\n\n    for (\n        let participantIndex = 0;\n        participantIndex < participants.length;\n        participantIndex++\n    ) {\n        for (\n            let typologyIndex = 0;\n            typologyIndex < typologies.length;\n            typologyIndex++\n        ) {\n            // Giving room to add individual scores for each entry\n            ContextScoreData.scores.push({\n                scoreType: \"individual\",\n                attribute: attributes[attributesIndex],\n                participant: participants[participantIndex],\n                typology: typologies[typologyIndex],\n                score: 0,\n            });\n        }\n    }\n}\n\nexport { ContextScoreData };\n","import React from \"react\";\nimport { ContextScoreData } from \"./context-scores-data\";\nimport { Card } from \"react-bootstrap\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport RadarChart from \"react-svg-radar-chart\";\nimport \"react-svg-radar-chart/build/css/index.css\";\n\nimport _ from \"lodash\";\n\nimport \"./context-scores-component.css\";\nimport \"../data-entry-component/data-entry-component.css\";\nimport AppContext from \"../../AppContext\";\n\nclass ContextScore extends React.Component {\n    //static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = _.cloneDeep(ContextScoreData);\n    }\n\n    componentDidMount() {\n        //console.log(\"Component did mount!\");\n\n        if (this.context.currentProject === undefined) {\n            this.context.currentProject = {};\n        }\n\n        if (this.context.currentProject.contextScores !== undefined) {\n            const newState = _.cloneDeep(\n                this.context.currentProject.contextScores\n            );\n            this.setState(newState);\n            // console.log(\"Set state with old context\");\n        }\n        if (this.context.currentProject.contextScores === undefined) {\n            const newContext = _.cloneDeep(this.state);\n            this.context.currentProject.contextScores = newContext;\n            // console.log(\"Set context with new state\");\n        }\n    }\n\n    componentDidUpdate() {\n        let newContext = _.cloneDeep(this.state);\n        this.context.currentProject.contextScores = newContext;\n\n        // console.log(\"context!!!!!!!!!!!!\");\n        // console.log(this.context.currentProject);\n\n        // console.log(this.context.currentProject.contextScores);\n        // console.log(\"State!!!!!!!!!!!!\");\n        // console.log(this.state);\n\n        //console.log(this.state);\n    }\n\n    renderRadarChart = () => {\n        const avergeScores = {};\n        const scoreLabels = {};\n        this.state.scores.forEach((score) => {\n            if (score.scoreType === \"average\") {\n                avergeScores[score.attribute.label] = score.score / 4;\n                scoreLabels[score.attribute.label] = score.attribute.name;\n            }\n        });\n\n        const radarData = [\n            {\n                data: avergeScores,\n                meta: {\n                    class: \"radar-style\",\n                    color: \"green\",\n                },\n            },\n        ];\n\n        const noSmoothing = (points) => {\n            let d =\n                \"M\" + points[0][0].toFixed(4) + \",\" + points[0][1].toFixed(4);\n            for (let i = 1; i < points.length; i++) {\n                d +=\n                    \"L\" +\n                    points[i][0].toFixed(4) +\n                    \",\" +\n                    points[i][1].toFixed(4);\n            }\n            return d + \"z\";\n        };\n\n        const defaultOptions = {\n            size: 200,\n            axes: true, // show axes?\n            scales: 4, // show scale circles?\n            captions: true, // show captions?\n            captionMargin: 10,\n            dots: true, // show dots?\n            zoomDistance: 1.2, // where on the axes are the captions?\n            setViewBox: (options) =>\n                `-${options.captionMargin} 0 ${\n                    options.size + options.captionMargin * 2\n                } ${options.size}`, // custom viewBox ?\n            smoothing: noSmoothing, // shape smoothing function\n            axisProps: () => ({ className: \"axis\" }),\n            scaleProps: () => ({ className: \"scale\", fill: \"none\" }),\n            shapeProps: () => ({ className: \"shape\" }),\n            captionProps: () => ({\n                className: \"caption\",\n                textAnchor: \"middle\",\n                fontSize: 10,\n                fontFamily: \"sans-serif\",\n            }),\n            dotProps: () => ({\n                className: \"dot\",\n                mouseEnter: (dot) => {\n                    console.log(dot);\n                },\n                mouseLeave: (dot) => {\n                    console.log(dot);\n                },\n            }),\n        };\n\n        return (\n            <div className=\"radar-container\">\n                <RadarChart\n                    captions={scoreLabels}\n                    data={radarData}\n                    size={450}\n                    options={defaultOptions}\n                />\n            </div>\n        );\n    };\n\n    handleChange = (event, props) => {\n        props.score = parseInt(event.target.value); // Ensuring that the entered value is an integer\n        let scoresArray = this.state.scores;\n        console.log(props);\n\n        scoresArray.forEach((element, index) => {\n            console.log(element);\n            if (element.scoreType == \"individual\") {\n                if (\n                    element.participant.label == props.participant.label &&\n                    element.attribute.label == props.attribute.label &&\n                    element.typology.label == props.typology.label\n                ) {\n                    scoresArray[index].score = parseInt(props.score);\n                }\n            }\n        });\n\n        this.setState(\n            {\n                scores: scoresArray,\n            },\n            () => this.averageAttributes()\n        );\n\n        //scoresArray = this.changeIndividualScores(scoresArray, props);\n\n        //scoresArray = this.changeAverages(scoresArray);\n    };\n\n    // Change individual scores in an array through filtering\n    changeIndividualScores = (arr, props) => {};\n\n    averageAttributes = () => {\n        const arr = _.cloneDeep(this.state.scores);\n\n        this.state.attributes.forEach((attribute) => {\n            let total = 0;\n            let numberofscores = 0;\n\n            arr.forEach((score) => {\n                if (\n                    score.scoreType === \"individual\" &&\n                    score.attribute.label === attribute.label\n                ) {\n                    total += score.score;\n                    console.log(\"total: \" + total);\n                    numberofscores += 1;\n                    console.log(\"number of scores: \" + numberofscores);\n\n                    // let average = this.averageAttribute(arr, attribute);\n                    // console.log(average);\n                    // arr[scoreIndex].score = average;\n                }\n            });\n            const average = total / numberofscores;\n            arr.forEach((score, scoreIndex) => {\n                if (\n                    score.scoreType === \"average\" &&\n                    score.attribute.label === attribute.label\n                ) {\n                    console.log(average);\n                    arr[scoreIndex].score = average;\n                }\n            });\n\n            this.setState({\n                scores: arr,\n            });\n        });\n\n        // arr.forEach((score, scoreIndex) => {\n        //     this.state.attributes.forEach((attribute) => {\n        //         if (\n        //             score.scoreType === \"average\" &&\n        //             score.attribute.label === attribute.label\n        //         ) {\n        //             let average = this.averageAttribute(arr, attribute);\n        //             console.log(average);\n        //             arr[scoreIndex].score = average;\n        //         }\n        //     });\n        // });\n        this.setState({\n            scores: arr,\n        });\n    };\n    // Update Averages after we see a score change\n    averageAttribute = (arr, attributetoAverage) => {\n        //axisToAverage.forEach((element, index) => {});\n        //const scores = [];\n        let scores = 0;\n        let scoresLength = 0;\n        arr.forEach((element, index) => {\n            if (\n                element.attribute.label === attributetoAverage.label &&\n                element.scoreType === \"individual\"\n            ) {\n                //scores.push(arr[index].score);\n                scores += arr[index].score;\n                scoresLength += 1;\n            }\n        });\n\n        // const total = scores.reduce(\n        //     (accumulator, currentValue) => accumulator + currentValue,\n        //     0\n        // );\n        //const average = total / scores.length;\n        const average = scores / scoresLength;\n        return average;\n    };\n\n    renderRowAverage = (props) => {\n        return this.state.scores.map((score) => {\n            if (\n                score.scoreType == \"average\" &&\n                score.attribute.label == props.attribute.label\n            ) {\n                return <td>{score.score.toFixed(2)}</td>;\n            }\n        });\n    };\n\n    // Ensuring that the correct values are preselected in the table\n    renderDefaultValue = (props) => {\n        {\n            // const valueToReturn = this.state.scores.filter((element, index) => {\n            //     if (\n            //         element.scoreType === \"individual\" &&\n            //         element.attribute === props.attribute &&\n            //         element.participant === props.participant &&\n            //         element.typology === props.typology\n            //     ) {\n            //         return true;\n            //     }\n            // });\n            let valueToReturn = \"\";\n            this.state.scores.forEach((score) => {\n                if (\n                    score.scoreType === \"individual\" &&\n                    score.attribute.label === props.attribute.label &&\n                    score.participant.label === props.participant.label &&\n                    score.typology.label === props.typology.label\n                ) {\n                    //console.log(\"found it: \" + score.score);\n                    valueToReturn = score.score;\n                }\n            });\n\n            return valueToReturn;\n            // console.log(props);\n            // console.log(scores);\n            //console.log(this.state.scores);\n            //return 999;\n            //return valueToReturn[0].score;\n        }\n    };\n\n    // A function for generating a row in the input table\n    contextRow = (props) => {\n        const rowAttribute = props.attribute;\n        //console.log(\"---------------Row--------------------\");\n\n        return (\n            <tr>\n                {/* Mapping across the different attributes to return a form to enter score (0-4).\n                e.g \n                - Typology-low-> Farmer -> Land score\n                - Typology-high -> Expert -> Seed score*/}\n                <td>{rowAttribute.name}</td>\n                {this.state.typologies.map((rowTypology) => {\n                    return this.state.participants.map((rowParticipant) => {\n                        return (\n                            <td\n                                key={\n                                    \"table-entry-\" +\n                                    rowTypology.name +\n                                    \"-\" +\n                                    rowParticipant.name +\n                                    \"-\" +\n                                    rowAttribute.name\n                                }\n                            >\n                                <FormControl\n                                    as=\"select\"\n                                    key={props.key}\n                                    value={this.renderDefaultValue({\n                                        typology: rowTypology,\n                                        participant: rowParticipant,\n                                        attribute: rowAttribute,\n                                    })}\n                                    onChange={(event) =>\n                                        this.handleChange(event, {\n                                            typology: rowTypology,\n                                            participant: rowParticipant,\n                                            attribute: rowAttribute,\n                                        })\n                                    }\n                                    key={\n                                        \"form-control-\" +\n                                        rowTypology.name +\n                                        \"-\" +\n                                        rowParticipant.name +\n                                        \"-\" +\n                                        rowAttribute.name\n                                    }\n                                >\n                                    {[0, 1, 2, 3, 4].map((score) => {\n                                        return (\n                                            <option\n                                                key={\n                                                    \"form-option-\" +\n                                                    rowTypology.name +\n                                                    \"-\" +\n                                                    rowParticipant.name +\n                                                    \"-\" +\n                                                    rowAttribute.name +\n                                                    \"-\" +\n                                                    score\n                                                }\n                                            >\n                                                {score}\n                                            </option>\n                                        );\n                                    })}\n                                </FormControl>\n                            </td>\n                        );\n                    });\n                })}\n                {this.renderRowAverage({ attribute: rowAttribute })}\n            </tr>\n        );\n    };\n\n    // Using the contextRow and map functions to generate all of the rows in the table\n    allRows = () => {\n        if (this.state !== null) {\n            // console.log(\"rendering all rows\");\n            return this.state.attributes.map((attribute) => {\n                return this.contextRow({\n                    attribute: attribute,\n                    key: \"context-row-\" + attribute.name,\n                });\n            });\n        } else {\n            return <h1>Null State</h1>;\n        }\n    };\n\n    // Creating the header for the table. This is a split header which accounts for typologies and participants\n    tableHeader = () => {\n        if (this.state !== null) {\n            // console.log(\"Header rendering\");\n            return (\n                <thead>\n                    {/* Adding The typology Headers */}\n                    <tr>\n                        <th rowSpan=\"2\"></th>\n                        {this.state.typologies.map((typology) => {\n                            return (\n                                <th\n                                    key={\"typology-header\" + typology.name}\n                                    colSpan=\"2\"\n                                >\n                                    Typology - {typology.name}\n                                </th>\n                            );\n                        })}\n                        {/* Adding The Average Score Headers */}\n\n                        <th key=\"average-header\" rowSpan=\"2\">\n                            Mean Score (0-4)\n                        </th>\n                    </tr>\n                    {/* Adding The Participant Headers */}\n                    <tr key=\"participant-header-row\">\n                        {this.state.typologies.map((typology) => {\n                            return this.state.participants.map(\n                                (participant) => {\n                                    return (\n                                        <th\n                                            key={\n                                                \"participant-header\" +\n                                                participant.name\n                                            }\n                                        >\n                                            {participant.name}\n                                        </th>\n                                    );\n                                }\n                            );\n                        })}\n                    </tr>\n                </thead>\n            );\n        } else {\n            return <h1>Null State</h1>;\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"radar-container\">\n                <div className=\"card-container\">\n                    <Card>\n                        <Card.Header className=\"bg-dark text-white\">\n                            <h2>Context Assessment</h2>\n                        </Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n                                The purpose of the exercise is to come up with a\n                                series of scores from zero to four that indicate\n                                the strength of a series of generic constraints\n                                to legume production. The exercise is carried\n                                out with a group – the questions are asked and\n                                on the basis of the responses, the group is\n                                asked to come up with a score for each\n                                constraint. The facilitator also assigns a score\n                                based on his assessment. This exercise is\n                                conducted separately with the 3 typology groups\n                                and the average for each attribute is the\n                                rounded average of all 6 scores (3 typologies x\n                                2 score types per attribute)\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"context-table\">\n                    <Form>\n                        <Table striped bordered hover>\n                            {this.tableHeader()}\n                            <tbody>{this.allRows()}</tbody>\n                        </Table>\n                    </Form>\n                </div>\n                {this.renderRadarChart()}\n            </div>\n        );\n    }\n}\nContextScore.contextType = AppContext;\n\nexport default ContextScore;\n","import { typologies, legfunc } from \"../data-entry-component/data-entry-data\";\n\nconst newSelections = JSON.parse(JSON.stringify(legfunc));\nnewSelections.forEach((func, index) => {\n    if ([0, 1].includes(index)) {\n        func.score = 4;\n    }\n    if ([2, 3, 4, 5].includes(index)) {\n        func.score = 3;\n    }\n});\nconst newFarmer = {\n    // Setting initial values\n    number: 0,\n    name: \"Jane Bloggs\",\n    gender: \"Female\",\n    typology: \"Medium\",\n    selections: newSelections,\n    total: 0,\n};\n\nconst MatrixData = {\n    farmerAttributes: [\n        {\n            name: \"Number\",\n            label: \"number\",\n        },\n        {\n            name: \"Name\",\n            label: \"name\",\n        },\n        {\n            name: \"Gender\",\n            label: \"gender\",\n        },\n        {\n            name: \"Typology\",\n            label: \"typology\",\n        },\n        {\n            name: \"Matrix Selections\",\n            label: \"selections\",\n        },\n        {\n            name: \"Total\",\n            label: \"total\",\n        },\n    ],\n    farmers: [],\n    legumeFunctions: legfunc,\n    blankFarmer: newFarmer,\n    typology: typologies,\n    gender: [\n        {\n            name: \"Male\",\n            label: \"male\",\n        },\n        {\n            name: \"Female\",\n            label: \"female\",\n        },\n    ],\n    summary: {\n        scoreTypes: [],\n        scoresIndividual: [],\n    },\n};\n\nlegfunc.forEach((legumefunction) => {\n    MatrixData.summary.scoresIndividual.push({\n        legumeFunction: legumefunction,\n        scores: [\n            {\n                name: \"Total\",\n                label: \"total\",\n                score: 0,\n            },\n            {\n                name: \"Score (0-5)\",\n                label: \"score\",\n                score: 0,\n            },\n            {\n                name: \"Average Rank\",\n                label: \"rank\",\n                score: 0,\n            },\n        ],\n    });\n});\n\nlegfunc.forEach((legumefunction, index) => {\n    MatrixData.gender.map((gender) => {\n        MatrixData.summary.scoresIndividual[index].scores.push({\n            name: gender.name + \" (0-5)\",\n            label: gender.label,\n            type: \"gender\",\n            score: 0,\n        });\n    });\n    MatrixData.typology.map((typology) => {\n        MatrixData.summary.scoresIndividual[index].scores.push({\n            name: typology.name + \" (0-5)\",\n            label: typology.name,\n            type: \"typology\",\n            score: 0,\n        });\n    });\n});\n\nMatrixData.summary.scoreTypes = MatrixData.summary.scoresIndividual[0].scores;\n\nexport { MatrixData };\n","import React from \"react\";\nimport _ from \"lodash\";\n\nimport \"./participatory-matrix-scoring.css\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport { Card } from \"react-bootstrap\";\nimport { MatrixData } from \"./participatory-matrix-data\";\n\nimport AppContext from \"../../AppContext\";\n\nclass ParticipatoryMatrix extends React.Component {\n    //static contextType = AppContext;\n    constructor(props) {\n        super(props);\n        this.state = _.cloneDeep(MatrixData);\n\n        this.addFarmer = this.addFarmer.bind(this);\n        this.farmEntryFields = this.farmEntryFields.bind(this);\n        this.farmerNameInput = this.farmerNameInput.bind(this);\n        this.scoringInput = this.scoringInput.bind(this);\n        this.farmerDetailsSelectInput = this.farmerDetailsSelectInput.bind(\n            this\n        );\n        this.updateFarmerScore = this.updateFarmerScore.bind(this);\n        this.updateTotal = this.updateTotal.bind(this);\n        this.updateFarmerName = this.updateFarmerName.bind(this);\n        this.updateFarmerDetailesSelect = this.updateFarmerDetailesSelect.bind(\n            this\n        );\n        this.tableHeader = this.tableHeader.bind(this);\n        this.tableRows = this.tableRows.bind(this);\n    }\n\n    componentDidMount() {\n        if (\n            this.context.currentProject.participatoryMatrixScores !== undefined\n        ) {\n            const newState = this.context.currentProject\n                .participatoryMatrixScores;\n            this.setState(newState);\n        } else {\n            const newContext = this.state;\n            this.context.currentProject.participatoryMatrixScores = newContext;\n\n            this.addFarmer();\n        }\n        //console.log(this.state);\n    }\n\n    componentDidUpdate() {\n        const newContext = this.state;\n        this.context.currentProject.participatoryMatrixScores = newContext;\n\n        //console.log(this.state);\n    }\n\n    addFarmer = () => {\n        //This is so important to make sure that we are creating a clean copy\n        //Deep cloning\n        let farmersArray = _.cloneDeep(this.state.farmers);\n        let number = farmersArray.length + 1;\n\n        let newfarmertoAdd = _.cloneDeep(this.state.blankFarmer);\n        newfarmertoAdd.number = number;\n\n        farmersArray.push(newfarmertoAdd);\n\n        this.setState(\n            {\n                farmers: farmersArray,\n            },\n            () => {\n                this.updateTotal();\n                this.updateFarmerSummary();\n            }\n        );\n    };\n\n    farmEntryFields = (props) => {\n        //console.log(props);\n\n        if (props.attribute.label === \"selections\") {\n            return this.scoringInput(props);\n        } else {\n            if (props.attribute.label === \"name\") {\n                return this.farmerNameInput(props);\n            } else {\n                return this.farmerDetailsSelectInput(props);\n            }\n        }\n    };\n\n    farmerNameInput = (props) => {\n        return (\n            <td>\n                <FormControl\n                    value={props.farmer.name}\n                    type=\"text\"\n                    onChange={(event) => this.updateFarmerName(event, props)}\n                />\n            </td>\n        );\n    };\n\n    scoringInput = (props) => {\n        return (\n            <td>\n                <FormControl\n                    defaultValue={props.legumeFunctions.score}\n                    type=\"number\"\n                    onChange={(event) => this.updateFarmerScore(event, props)}\n                />\n            </td>\n        );\n    };\n\n    farmerDetailsSelectInput = (props) => {\n        return (\n            <td>\n                <FormControl\n                    as=\"select\"\n                    defaultValue={props.farmer[props.attribute.label]}\n                    onChange={(event) =>\n                        this.updateFarmerDetailesSelect(event, props)\n                    }\n                >\n                    {this.state[props.attribute.label].map((attribute) => {\n                        return (\n                            <option\n                                key={\n                                    \"form-option-\" +\n                                    props.attribute.label +\n                                    \"-\" +\n                                    props.farmer.number +\n                                    \"-\" +\n                                    attribute.label\n                                }\n                            >\n                                {attribute.name}\n                            </option>\n                        );\n                    })}\n                </FormControl>\n            </td>\n        );\n    };\n\n    updateFarmerScore = (event, props) => {\n        let farmersArray = [...this.state.farmers];\n\n        //console.log(farmersArray);\n        //console.log(props);\n        // Finding which farmer to subset\n        let whichFarmer = \"\";\n        farmersArray.forEach((farmer, farmerIndex) => {\n            if (farmer.number === props.farmer.number) {\n                whichFarmer = farmerIndex;\n            }\n        });\n\n        let legumefuncs = this.state.legumeFunctions;\n        let whichValue = \"\";\n        // Finding which value to update\n        legumefuncs.forEach((funct, funcIndex) => {\n            if (funct.label === props.legumeFunctions.label) {\n                whichValue = funcIndex;\n            }\n        });\n\n        let newScore = { ...farmersArray[whichFarmer].selections[whichValue] };\n        newScore.score = parseInt(event.target.value);\n        farmersArray[whichFarmer].selections[whichValue] = newScore;\n        this.setState({\n            farmers: farmersArray,\n        });\n\n        this.updateTotal();\n        this.updateFarmerSummary();\n    };\n\n    updateTotal = () => {\n        const farmers = this.state.farmers;\n\n        farmers.map((farmer) => {\n            farmer.total = 0;\n\n            farmer.selections.map((selection) => {\n                farmer.total += selection.score;\n            });\n        });\n\n        this.setState({\n            farmers: farmers,\n        });\n    };\n\n    updateFarmerName = (event, props) => {\n        let farmersArray = [...this.state.farmers];\n\n        farmersArray.forEach((farmer, farmerIndex) => {\n            if (farmer.number === props.farmer.number) {\n                farmersArray[farmerIndex].name = event.target.value;\n            }\n        });\n        this.setState({ farmers: farmersArray });\n    };\n\n    updateFarmerDetailesSelect = (event, props) => {\n        let farmersArray = [...this.state.farmers]; // making a shallow copy\n        farmersArray.forEach((farmer, farmerIndex) => {\n            if (farmer.number === props.farmer.number) {\n                farmersArray[farmerIndex][props.attribute.label] =\n                    event.target.value;\n            }\n        });\n        this.setState({ farmers: farmersArray });\n        this.updateFarmerSummary();\n    };\n\n    tableHeader = () => {\n        if (this.state !== null) {\n            return (\n                <thead>\n                    <tr>\n                        <th rowSpan=\"2\">Farmer Number</th>\n                        <th rowSpan=\"2\">Farmer Name</th>\n                        <th rowSpan=\"2\">Gender</th>\n                        <th rowSpan=\"2\">Typology</th>\n                        <th rowSpan=\"1\" colSpan=\"6\">\n                            Functions\n                        </th>\n                        <th rowSpan=\"2\">Total</th>\n                    </tr>\n                    <tr>\n                        {this.state.legumeFunctions.map((funct) => {\n                            return (\n                                <th\n                                    key={\n                                        \"participatory-matrix-head-\" +\n                                        funct.label\n                                    }\n                                >\n                                    {funct.name}\n                                </th>\n                            );\n                        })}\n                    </tr>\n                </thead>\n            );\n        } else {\n            return <h1>Null State</h1>;\n        }\n    };\n\n    tableRows = () => {\n        if (this.state !== null) {\n            return this.state.farmers.map((farmer) => {\n                return (\n                    <tr key={\"participatory-matrix-body-\" + farmer.number}>\n                        {this.state.farmerAttributes.map((attribute) => {\n                            // Returning a value for each of the potential selections\n                            if (attribute.label === \"selections\") {\n                                return farmer.selections.map((selection) => {\n                                    return this.farmEntryFields({\n                                        key:\n                                            \"participatory-matrix-body-\" +\n                                            farmer.number +\n                                            selection.label,\n                                        attribute: attribute,\n                                        farmer: farmer,\n                                        legumeFunctions: selection,\n                                        farmer: farmer,\n                                    });\n                                });\n\n                                // Return the farmers number for the row number\n                            } else if (attribute.label === \"number\") {\n                                return (\n                                    <td\n                                        key={\n                                            \"select-input\" +\n                                            farmer.number +\n                                            \"-\" +\n                                            attribute.label\n                                        }\n                                    >\n                                        {farmer.number}\n                                    </td>\n                                );\n                                // Return the total score for that particular farmer\n                            } else if (attribute.label === \"total\") {\n                                return (\n                                    <td\n                                        key={\n                                            \"select-input\" +\n                                            farmer.number +\n                                            \"-\" +\n                                            attribute.label\n                                        }\n                                    >\n                                        {farmer.total}\n                                    </td>\n                                );\n                            } else {\n                                return this.farmEntryFields({\n                                    key:\n                                        \"farmEntry-field-\" +\n                                        attribute.label +\n                                        \"-\" +\n                                        farmer.number,\n                                    attribute: attribute,\n                                    farmer: farmer,\n                                });\n                            }\n                        })}\n                    </tr>\n                );\n            });\n        } else {\n            return <h1>Null State</h1>;\n        }\n    };\n\n    calculateAttributeRank = () => {\n        const scoresIndividual = _.cloneDeep(\n            this.state.summary.scoresIndividual\n        );\n\n        // Initialise the ranks\n        scoresIndividual.forEach((individualScore) => {\n            // Setting rank to zero\n            individualScore.scores[2].score = 1;\n        });\n\n        // Actually ranking the scores (draws included)\n        scoresIndividual.forEach((firstScore) => {\n            scoresIndividual.forEach((secondScore) => {\n                if (firstScore.scores[1].score > secondScore.scores[1].score) {\n                    firstScore.scores[2].score = firstScore.scores[2].score;\n                }\n                if (firstScore.scores[1].score < secondScore.scores[1].score) {\n                    firstScore.scores[2].score += 1;\n                }\n            });\n        });\n\n        // Averaging the ranks based on number of ties\n        const numberOfScores = this.state.legumeFunctions.length;\n        const numberOfOccurences = [];\n        for (let i = 0; i < numberOfScores; i++) {\n            numberOfOccurences[i] = {\n                number: i + 1,\n                occurences: 0,\n                conversion: i + 1,\n            };\n        }\n\n        // Finding out how to convert to ranking average\n        scoresIndividual.forEach((firstScore) => {\n            numberOfOccurences.forEach((rank) => {\n                if (firstScore.scores[2].score == rank.number) {\n                    rank.occurences += 1;\n                    rank.conversion =\n                        (rank.occurences + 2 * rank.number - 1) / 2;\n                }\n            });\n        });\n\n        //applying ranking average conversion\n        scoresIndividual.forEach((firstScore) => {\n            numberOfOccurences.forEach((rank) => {\n                if (firstScore.scores[2].score == rank.number) {\n                    firstScore.scores[2].score = rank.conversion;\n                }\n            });\n        });\n\n        this.setState((prevState) => {\n            return {\n                ...prevState,\n                summary: {\n                    ...prevState.summary,\n                    scoresIndividual: scoresIndividual,\n                },\n            };\n        });\n    };\n\n    // Return a score from the farmer if they match the correct criteria\n    mapThroughFarmers(props) {\n        const farmers = _.cloneDeep(this.state.farmers);\n\n        let scoreSum = 0;\n        let relevantFarmers = 0;\n\n        farmers.map((farmer, farmerIndex) => {\n            farmer.selections.map((farmerSelection, farmerSelectionIndex) => {\n                // If the farmer has the correct gender\n                // If the farmer is selecting the correct attribute\n                // return Score\n                // else\n                // return 0\n\n                if (props.variable === \"typology\") {\n                    if (\n                        props.typology.toLowerCase() ===\n                            farmer.typology.toLowerCase() &&\n                        props.selection.label === farmerSelection.label\n                    ) {\n                        relevantFarmers += 1;\n                        scoreSum += parseFloat(\n                            (farmerSelection.score * 5) / 20\n                        );\n                    }\n                }\n                if (props.variable === \"gender\") {\n                    if (\n                        props.gender.toLowerCase() ===\n                            farmer.gender.toLowerCase() &&\n                        props.selection.label === farmerSelection.label\n                    ) {\n                        relevantFarmers += 1;\n                        scoreSum += parseFloat(\n                            (farmerSelection.score * 5) / 20\n                        );\n                    }\n                }\n            });\n        });\n\n        if (relevantFarmers > 0) {\n            return parseFloat(scoreSum / relevantFarmers).toFixed(2);\n        }\n\n        return parseFloat(scoreSum).toFixed(2);\n    }\n\n    // updateGenderScore = () => {\n    //     const summary = _.cloneDeep(this.state.summary.scoresIndividual);\n\n    //     summary.map((scoresByLegumeFunction) => {\n    //         scoresByLegumeFunction.scores.map((individualScores) => {\n    //             if (individualScores.type === \"gender\") {\n    //                 individualScores.score = this.mapThroughFarmers({\n    //                     variable: \"gender\",\n    //                     gender: individualScores.label,\n    //                     selection: scoresByLegumeFunction.legumeFunction,\n    //                 });\n    //             }\n    //         });\n    //     });\n\n    //     this.setState((prevState) => {\n    //         return {\n    //             ...prevState,\n    //             summary: {\n    //                 ...prevState.summary,\n    //                 scoresIndividual: summary,\n    //             },\n    //         };\n    //     });\n    // };\n\n    updateTypologyScore = () => {\n        const summary = _.cloneDeep(this.state.summary.scoresIndividual);\n\n        summary.map((scoresByLegumeFunction) => {\n            scoresByLegumeFunction.scores.map((individualScores) => {\n                if (individualScores.type === \"typology\") {\n                    individualScores.score = this.mapThroughFarmers({\n                        variable: \"typology\",\n                        typology: individualScores.label,\n                        selection: scoresByLegumeFunction.legumeFunction,\n                    });\n                }\n                if (individualScores.type === \"gender\") {\n                    individualScores.score = this.mapThroughFarmers({\n                        variable: \"gender\",\n                        gender: individualScores.label,\n                        selection: scoresByLegumeFunction.legumeFunction,\n                    });\n                }\n            });\n        });\n\n        this.setState(\n            (prevState) => {\n                return {\n                    ...prevState,\n                    summary: {\n                        ...prevState.summary,\n                        scoresIndividual: summary,\n                    },\n                };\n            },\n            () => {\n                this.calculateAttributeRank();\n            }\n        );\n    };\n\n    updateFarmerSummary = () => {\n        const summary = _.cloneDeep(this.state.summary.scoresIndividual);\n        const farmers = _.cloneDeep(this.state.farmers);\n        // Update total score per attribute\n        summary.forEach((summaryscore, summaryScoreIndex) => {\n            summary[summaryScoreIndex].scores[0].score = 0;\n            let totalScoreTemp = _.cloneDeep(\n                summary[summaryScoreIndex].scores[0].score\n            );\n            farmers.forEach((farmer) => {\n                farmer.selections.forEach((farmerSelection, selectionIndex) => {\n                    if (\n                        farmerSelection.label ==\n                        summaryscore.legumeFunction.label\n                    ) {\n                        // Setting total score\n\n                        totalScoreTemp +=\n                            farmerSelection.score / farmers.length;\n\n                        summary[summaryScoreIndex].scores[0].score = parseFloat(\n                            parseFloat(totalScoreTemp).toFixed(2)\n                        );\n                        // Setting 0-5 score\n                        summary[summaryScoreIndex].scores[1].score = parseFloat(\n                            parseFloat((totalScoreTemp * 5) / 20).toFixed(2)\n                        );\n                    }\n                });\n            });\n        });\n\n        this.setState(\n            (prevState) => {\n                return {\n                    ...prevState,\n                    summary: {\n                        ...prevState.summary,\n                        scoresIndividual: summary,\n                    },\n                };\n            },\n            () => {\n                //this.updateGenderScore();\n                this.updateTypologyScore();\n            }\n        );\n    };\n\n    resultsTable = () => {\n        return (\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th rowSpan=\"2\">Summary Type</th>\n                        <th\n                            rowSpan=\"1\"\n                            colSpan={this.state.legumeFunctions.length}\n                        >\n                            Function\n                        </th>\n                    </tr>\n\n                    <tr>\n                        {this.state.legumeFunctions.map((funct) => {\n                            return (\n                                <th\n                                    key={\n                                        \"participatory-matrix-head-\" +\n                                        funct.label\n                                    }\n                                >\n                                    {funct.name}\n                                </th>\n                            );\n                        })}\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {this.state.summary.scoreTypes.map(\n                        (type, scoreTypeIndex) => {\n                            return (\n                                <tr>\n                                    <td>{type.name}</td>\n                                    {this.state.summary.scoresIndividual.map(\n                                        (individualScore) => {\n                                            return (\n                                                <td>\n                                                    {\n                                                        individualScore.scores[\n                                                            scoreTypeIndex\n                                                        ].score\n                                                    }\n                                                </td>\n                                            );\n                                        }\n                                    )}\n                                </tr>\n                            );\n                        }\n                    )}\n                </tbody>\n            </Table>\n        );\n    };\n\n    render() {\n        return (\n            <div className=\"data-entry-container\">\n                <div className=\"card-container\">\n                    <Card>\n                        <Card.Header className=\"bg-dark text-white\">\n                            <h2>Participatory Matrix Scoring</h2>\n                        </Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n                                Purpose of the exercise is to assess what\n                                individual farmers of different gender and\n                                typology would look for in any new intervention\n                                involving legumes. This is a separate approach\n                                to establishing/validating community aspirations\n                                on legume functions. This helps to triangulate\n                                the results of the previous exercise. Farmers\n                                are given 20 beans/seeds and asked to allocate\n                                them according to the importance of the various\n                                functions for their future aspirations. The data\n                                from this exercise produces an overall community\n                                score for each legume function but also allows\n                                variation according to type and gender to be\n                                assessed.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <Form>\n                    <Table striped bordered hover>\n                        {this.tableHeader()}\n                        <tbody>{this.tableRows()}</tbody>\n                    </Table>\n                    <Button\n                        style={{ \"margin-bottom\": \"2em\" }}\n                        className=\"float-right\"\n                        onClick={this.addFarmer}\n                    >\n                        Add Farmer\n                    </Button>\n                </Form>\n\n                {this.resultsTable()}\n            </div>\n        );\n    }\n}\n\nParticipatoryMatrix.contextType = AppContext;\n\nexport default ParticipatoryMatrix;\n","import { legfunc } from \"../data-entry-component/data-entry-data\";\n\nlet PairwiseRankingData = {\n    legumeFunctions: legfunc,\n    male: {\n        pairwiseSelection: [],\n        totals: [],\n    },\n    female: {\n        pairwiseSelection: [],\n        totals: [],\n    },\n    averages: [],\n};\n\n// Creating all of the potential pairwise functions for each of the entries\nlet previousidentifiers = [];\nfor (\n    let outerArrayIndex = 0;\n    outerArrayIndex < PairwiseRankingData.legumeFunctions.length;\n    outerArrayIndex++\n) {\n    let function1 = PairwiseRankingData.legumeFunctions[outerArrayIndex];\n\n    PairwiseRankingData.male.totals.push({\n        attribute: function1,\n        value: 0,\n    });\n\n    PairwiseRankingData.female.totals.push({\n        attribute: function1,\n        value: 0,\n    });\n\n    PairwiseRankingData.averages.push({\n        attribute: function1,\n        value: 0,\n    });\n\n    for (\n        let innerArrayIndex = 0;\n        innerArrayIndex < PairwiseRankingData.legumeFunctions.length;\n        innerArrayIndex++\n    ) {\n        let function2 = PairwiseRankingData.legumeFunctions[innerArrayIndex];\n\n        // Checking if the pair is the same\n        if (function1 !== function2) {\n            let intermediateidentifier = [function1.label, function2.label];\n            intermediateidentifier.sort();\n            let identifier = intermediateidentifier.join(\"_\");\n\n            if (!previousidentifiers.includes(identifier)) {\n                PairwiseRankingData.male.pairwiseSelection.push({\n                    funct1: function1,\n                    funct2: function2,\n                    identifier: identifier,\n                    value: function1,\n                });\n\n                PairwiseRankingData.female.pairwiseSelection.push({\n                    funct1: function1,\n                    funct2: function2,\n                    identifier: identifier,\n                    value: function1,\n                });\n                previousidentifiers.push(identifier);\n            }\n        }\n    }\n}\nexport default PairwiseRankingData;\n","import React, { Component } from \"react\";\nimport PairwiseRankingData from \"./pairwise-ranking-data\";\n\nimport \"./pairwise-ranking-component.css\";\nimport \"../data-entry-component/data-entry-component.css\";\n\nimport { Card } from \"react-bootstrap\";\n\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport AppContext from \"../../AppContext\";\n\nimport _ from \"lodash\";\n\nclass PairwiseRanking extends Component {\n    //static contextType = AppContext;\n    constructor(props) {\n        super(props);\n\n        this.state = _.cloneDeep(PairwiseRankingData);\n    }\n\n    componentDidMount() {\n        //console.log(this.state);\n\n        if (this.context.currentProject.pairWiseScores !== undefined) {\n            let newState = _.cloneDeep(\n                this.context.currentProject.pairWiseScores\n            );\n            this.setState(newState, () => {\n                this.upDateTotalScore(\"male\");\n                this.upDateTotalScore(\"female\");\n            });\n        } else {\n            let newContext = _.cloneDeep(this.state);\n            this.context.currentProject.pairWiseScores = newContext;\n            this.upDateTotalScore(\"male\");\n            this.upDateTotalScore(\"female\");\n        }\n    }\n    componentDidUpdate() {\n        let newContext = _.cloneDeep(this.state);\n        this.context.currentProject.pairWiseScores = newContext;\n        console.log(this.state);\n    }\n\n    updateSelections = (event, props) => {\n        if (event.target.value == \"\") {\n            alert(\"Must not select empty value\");\n            return;\n        }\n        // Converting legume function name into legume function item\n        let selectedValue = \"\";\n\n        if (event.target.value === props.funct1.name) {\n            selectedValue = props.funct1;\n        }\n        if (event.target.value === props.funct2.name) {\n            selectedValue = props.funct2;\n        }\n\n        let selectionArr = _.cloneDeep(\n            this.state[props.gender].pairwiseSelection\n        );\n        selectionArr.forEach((selectionItem, selectionIndex) => {\n            if (\n                selectionItem.funct1.label === props.funct1.label &&\n                selectionItem.funct2.label === props.funct2.label\n            ) {\n                selectionArr[selectionIndex].value = selectedValue;\n                console.log(selectionArr);\n            }\n        });\n        //console.log(\"selection: \" + JSON.stringify(selectionArr));\n\n        const gender = props.gender;\n        this.setState(\n            (prevState) => ({\n                [gender]: {\n                    ...prevState[gender],\n                    pairwiseSelection: selectionArr,\n                },\n            }),\n            () => {\n                this.upDateTotalScore(gender);\n            }\n        );\n    };\n\n    upDateTotalScore = (gender) => {\n        const totalsArray = _.cloneDeep(this.state[gender].totals);\n        totalsArray.forEach((totalsItem, totalsIndex) => {\n            totalsArray[totalsIndex].value = 0;\n            this.state[gender].pairwiseSelection.forEach((selectionItem) => {\n                if (selectionItem.value.label === totalsItem.attribute.label) {\n                    totalsArray[totalsIndex].value++;\n                }\n            });\n        });\n        this.setState(\n            (prevState) => ({\n                [gender]: {\n                    ...prevState[gender],\n                    totals: totalsArray,\n                },\n            }),\n            () => {\n                this.updateAverage();\n            }\n        );\n\n        //this.updateAverage();\n    };\n\n    updateAverage = () => {\n        const totalsArrayMale = _.cloneDeep(this.state[\"male\"].totals);\n        const totalsArrayFemale = _.cloneDeep(this.state[\"female\"].totals);\n\n        const newAverages = _.cloneDeep(this.state.averages);\n\n        newAverages.map((average, index) => {\n            const newAverage =\n                (totalsArrayMale[index].value +\n                    totalsArrayFemale[index].value) /\n                2;\n            newAverages[index].value = newAverage;\n            this.setState({\n                averages: newAverages,\n            });\n        });\n    };\n\n    pairWiseTable = (props) => {\n        const tableGender = props.gender;\n        return (\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th>Pair</th>\n                        <th>Selection Female</th>\n                        <th>Selection Male</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state[props.gender].pairwiseSelection.map(\n                        (item, itemIndex) => {\n                            return (\n                                <tr\n                                    key={\n                                        \"pairwise-ranking-table-row\" +\n                                        item.funct1.name +\n                                        item.funct2.name\n                                    }\n                                >\n                                    <td\n                                        key={\n                                            \"pairwise-ranking-table-item-name\" +\n                                            item.funct1.name +\n                                            \"-\" +\n                                            item.funct2.name\n                                        }\n                                    >\n                                        {item.funct1.name +\n                                            \" vs \" +\n                                            item.funct2.name}\n                                    </td>\n                                    <td\n                                        key={\n                                            \"pairwise-ranking-table-item-form\" +\n                                            item.funct1.name +\n                                            \"-\" +\n                                            item.funct2.name +\n                                            \"-female\"\n                                        }\n                                    >\n                                        <FormControl\n                                            value={\n                                                this.state[\"female\"]\n                                                    .pairwiseSelection[\n                                                    itemIndex\n                                                ].value.name\n                                            }\n                                            key={\n                                                \"pairwise-ranking-table-form\" +\n                                                item.funct1.name +\n                                                \"-\" +\n                                                item.funct2.name +\n                                                \"-female\"\n                                            }\n                                            as=\"select\"\n                                            onChange={(event) =>\n                                                this.updateSelections(event, {\n                                                    funct1: item.funct1,\n                                                    funct2: item.funct2,\n                                                    gender: \"female\",\n                                                })\n                                            }\n                                        >\n                                            <option>{item.funct1.name}</option>\n                                            <option>{item.funct2.name}</option>\n                                        </FormControl>\n                                    </td>\n                                    <td\n                                        key={\n                                            \"pairwise-ranking-table-item-form\" +\n                                            item.funct1.name +\n                                            \"-\" +\n                                            item.funct2.name +\n                                            \"-male\"\n                                        }\n                                    >\n                                        <FormControl\n                                            as=\"select\"\n                                            value={\n                                                this.state[\"male\"]\n                                                    .pairwiseSelection[\n                                                    itemIndex\n                                                ].value.name\n                                            }\n                                            key={\n                                                \"pairwise-ranking-table-form\" +\n                                                item.funct1.name +\n                                                \"-\" +\n                                                item.funct2.name +\n                                                \"-male\"\n                                            }\n                                            onChange={(event) =>\n                                                this.updateSelections(event, {\n                                                    funct1: item.funct1,\n                                                    funct2: item.funct2,\n                                                    gender: \"male\",\n                                                })\n                                            }\n                                        >\n                                            <option>{item.funct1.name}</option>\n                                            <option>{item.funct2.name}</option>\n                                        </FormControl>\n                                    </td>\n                                </tr>\n                            );\n                        }\n                    )}\n                </tbody>\n            </Table>\n        );\n    };\n\n    pairWiseResultsTable = (props) => {\n        return (\n            <Table striped bordered hover className=\"table-style\">\n                <thead>\n                    <tr>\n                        <th>Attribute</th>\n                        <th>Count Female</th>\n                        <th>Count Male</th>\n                        <th>Average Count</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state.legumeFunctions.map((item, index) => {\n                        return (\n                            <tr key={\"pairwise-results-table-row-\" + item.name}>\n                                <td\n                                    key={\n                                        \"pairwise-results-table-row-item-\" +\n                                        item.name\n                                    }\n                                >\n                                    {item.name}\n                                </td>\n                                <td\n                                    key={\n                                        \"pairwise-results-table-row-item-female-\" +\n                                        item.name\n                                    }\n                                >\n                                    {this.state.female.totals[index].value}\n                                </td>\n                                <td\n                                    key={\n                                        \"pairwise-results-table-row-item-male-\" +\n                                        item.name\n                                    }\n                                >\n                                    {this.state.male.totals[index].value}\n                                </td>\n\n                                <td\n                                    key={\n                                        \"pairwise-results-table-row-item-average-\" +\n                                        item.name\n                                    }\n                                >\n                                    {this.state.averages[index].value}\n                                </td>\n                            </tr>\n                        );\n                    })}\n                    {/*this.state[props.gender].totals.map((item) => {\n                        return (\n                            <tr>\n                                <td>{item.attribute.name}</td>\n                                <td>{item.value}</td>\n                            </tr>\n                        );\n                    })*/}\n                </tbody>\n            </Table>\n        );\n    };\n\n    render() {\n        return (\n            <div className=\"data-entry-container\">\n                <div className=\"card-container\">\n                    <Card>\n                        <Card.Header className=\"bg-dark text-white\">\n                            <h2>Pairwise Component Ranking</h2>\n                        </Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n                                This exercise is carried out as a group. The\n                                method for this exercise involves presenting all\n                                possible pairs of functions to participants and\n                                asking them to vote on which is more important.\n                                The exercise is conducted separately for men and\n                                women.\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"table-container\">\n                    <Form className=\"table-container\">\n                        {this.pairWiseTable({ gender: \"female\" })}\n                    </Form>\n                    {this.pairWiseResultsTable({\n                        gender: \"female\",\n                        className: \"results-table-pairwise\",\n                    })}\n                </div>\n\n                <div className=\"table-container\"></div>\n            </div>\n        );\n    }\n}\nPairwiseRanking.contextType = AppContext;\n\nexport default PairwiseRanking;\n","import React from \"react\";\n\nimport \"./data-entry-component.css\";\n\nimport AgroEco from \"../agro-ecological-filter-component/agro-ecological-filter\";\nimport ContextScore from \"../context-scores-component/context-scores-component\";\nimport ParticipatoryMatrix from \"../participatory-matrix-scoring-component/participatory-matrix-scoring\";\nimport PairwiseRanking from \"../pairwise-ranking-component/pairwise-ranking-component\";\n\n// import Results from \"../results-component/results-component\";\n\nimport AppContext from \"../../AppContext\";\n\nclass DataEntry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            components: [\n                <ContextScore key=\"contextScore\" />,\n                <PairwiseRanking key=\"pairwise\" />,\n                <ParticipatoryMatrix key=\"matrix\" />,\n                <AgroEco key=\"agroeco\" />,\n                //<Results key=\"results\" />,\n            ],\n        };\n    }\n\n    renderComponents = () => {};\n    render() {\n        return (\n            <div>\n                {/* <AppContext.Provider value={AppContext}> */}\n                <div className=\"data-entry-container\">\n                    {this.state.components.map((component) => {\n                        return component;\n                    })}\n                    ;\n                </div>\n                {/* </AppContext.Provider> */}\n            </div>\n        );\n    }\n}\n\nDataEntry.contextType = AppContext;\n\nexport default DataEntry;\n","import {\n    legfunc,\n    attributes,\n    biofilters,\n} from \"../data-entry-component/data-entry-data\";\nimport _ from \"lodash\";\n\n// data on all of the legumes initially\n\n// go through the legume functions, and average matrix score and pairwise ranking score\nconst functionFitForm = [];\nlet legfuncCopy = _.cloneDeep(legfunc);\nlegfuncCopy.forEach((legumefunction) => {\n    functionFitForm.push({\n        legumeFunction: legumefunction,\n        score: 0,\n    });\n});\n\n// simply pass through the context scores\nconst contextFitForm = [];\nlet attributesCopy = _.cloneDeep(attributes);\nattributesCopy.forEach((attribute) => {\n    contextFitForm.push({\n        attribute: attribute,\n        score: 0,\n    });\n});\n\n// Adding all of the attributes to the initial legumes\n// For each component we have to add an averageScore and an overall rank\n// For the final summary, we are only presenting the ranks\nlet legumeResultsToAdd = {\n    functionFit: [],\n    contextFit: [],\n    agroEcoFit: [],\n    overallFit: [],\n};\n\n// Adding legume function scores to each legume\nattributesCopy.map((attribute) => {\n    legumeResultsToAdd.contextFit.push({\n        attribute: attribute,\n        score: 0,\n    });\n});\nlegumeResultsToAdd.contextFit.push({\n    overallFit: 0,\n});\nlegumeResultsToAdd.contextFit.push({\n    overallRank: 1,\n});\n\n// Adding context scores to each legume\nlegfuncCopy.map((legfunction) => {\n    legumeResultsToAdd.functionFit.push({\n        legumeFunction: legfunction,\n        score: 0,\n    });\n});\nlegumeResultsToAdd.functionFit.push({\n    overallFit: 0,\n});\nlegumeResultsToAdd.functionFit.push({\n    overallRank: 1,\n});\n\n// Adding agroEco scores to each legume\nconst agroEcoCopy = _.cloneDeep(biofilters);\n\nagroEcoCopy.map((agroecofiltter) => {\n    legumeResultsToAdd.agroEcoFit.push({\n        agroEcoFilter: agroecofiltter,\n        score: 0,\n    });\n});\nlegumeResultsToAdd.agroEcoFit.push({\n    overallFit: 0,\n});\nlegumeResultsToAdd.agroEcoFit.push({\n    overallRank: 1,\n});\n\n// Overall Scores\nlegumeResultsToAdd.overallFit.push({\n    overallFit: 0,\n});\nlegumeResultsToAdd.overallFit.push({\n    overallRank: 1,\n});\n\nconst agroEcoFilters = [];\n\nconst biofiltersCopy = _.cloneDeep(biofilters);\nconst biofiltersCleaned = [];\nbiofiltersCopy.map((biofilter) => {\n    biofiltersCleaned.push({\n        name: biofilter.name,\n        label: biofilter.label,\n    });\n});\n\n// Compiling all of the results data together\nconst resultsData = {\n    legumeFunctions: legfuncCopy,\n    attributes: attributes,\n    agroEcoFilters: biofiltersCleaned,\n    agroEcoFitSummary: agroEcoCopy,\n\n    functionFitSummary: functionFitForm,\n    contextFitSummary: contextFitForm,\n    emptyScoresForLegume: legumeResultsToAdd,\n    legumes: [],\n\n    resultsFilter: {\n        selectOptions: [\n            \"Summary\",\n            \"AgroEco Scores\",\n            \"Context Scores\",\n            \"Function Scores\",\n        ],\n        orderOptions: [\n            \"Overall Score\",\n            \"AgroEco Score\",\n            \"Context Score\",\n            \"Function Score\",\n        ],\n        numberOfLegumesOptions: [\"5\", \"10\", \"20\", \"All\"],\n\n        selection: {\n            whichResults: \"Summary\",\n            order: \"Overall Score\",\n            numberOfLegumes: \"5\",\n        },\n    },\n\n    formFilled: false,\n};\n\nexport { resultsData };\n","export const allLegumes = [\n    {\n        name: \"Pigeon pea (Cajanus cajan)\",\n        type: \"Grain legume perennial\",\n        food: 4,\n        feed: 2,\n        income: 3,\n        \"erosion-control\": 3,\n        fuel: 2,\n        \"soil-fertility\": 3,\n        land: 1,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 530.0, max: 4030.0 }],\n        temp: [{ min: 16.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 4.5, max: 8.0 }],\n    },\n    {\n        name:\n            \"Climbing beans (Phaseolus vulgaris), local types available in W Ethiopia, harvested several (4-5) years before reseeding)\",\n        type: \"Grain legume perennial\",\n        food: 4,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 1,\n        labour: 1,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 3,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 3000.0 }],\n        temp: [{ min: 6.0, max: 29.0 }],\n        alt: [{ min: 500.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name: \"Climbing beans (Phaseolus vulgaris) annual type\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 1,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 3,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 3000.0 }],\n        temp: [{ min: 6.0, max: 29.0 }],\n        alt: [{ min: 500.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name: \"Bush bean (Phaseolus vulgaris)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 1,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 1,\n        \"soil-fertility\": 1,\n        land: 2,\n        labour: 3,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 3,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 3000.0 }],\n        temp: [{ min: 6.0, max: 29.0 }],\n        alt: [{ min: 500.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name: \"Groundnuts (Arachis hypogaea L.)\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 3,\n        land: 4,\n        labour: 4,\n        seed: 1,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 2,\n        markets: 1,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 310.0, max: 3000.0 }],\n        temp: [{ min: 10.0, max: 45.0 }],\n        alt: [{ min: 0.0, max: 1600.0 }],\n        soilpH: [{ min: 4.0, max: 8.0 }],\n    },\n    {\n        name: \"Soybean grain type (Glycine max L.)\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 2,\n        land: 3,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 2,\n        markets: 4,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 700.0, max: 2000.0 }],\n        temp: [{ min: 10.0, max: 30.0 }],\n        alt: [{ min: 0.0, max: 1400.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name: \"Soybean/dual purpose grain plus fodder (Glycine max L.)\",\n        type: \"Grain legume seasonal\",\n        food: 2,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 3,\n        fuel: 1,\n        \"soil-fertility\": 4,\n        land: 3,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 2,\n        markets: 4,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 700.0, max: 2000.0 }],\n        temp: [{ min: 10.0, max: 30.0 }],\n        alt: [{ min: 0.0, max: 1400.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name: \"Faba bean (Vicia faba L.) \",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 300.0, max: 2090.0 }],\n        temp: [{ min: 6.0, max: 28.0 }],\n        alt: [{ min: 1800.0, max: 3200.0 }],\n        soilpH: [{ min: 4.5, max: 8.3 }],\n    },\n    {\n        name: \"Cowpea \\u2013 grain type (Vigna unguiculata)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 1,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 400.0, max: 2000.0 }],\n        temp: [{ min: 13.0, max: 28.0 }],\n        alt: [{ min: 0.0, max: 1500.0 }],\n        soilpH: [{ min: 4.3, max: 7.9 }],\n    },\n    {\n        name: \"Cowpea \\u2013 forage type (Vigna unguiculata)\",\n        type: \"Grain legume seasonal\",\n        food: 2,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 2,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 3,\n        seed: 3,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 400.0, max: 2000.0 }],\n        temp: [{ min: 13.0, max: 28.0 }],\n        alt: [{ min: 0.0, max: 1500.0 }],\n        soilpH: [{ min: 4.3, max: 7.9 }],\n    },\n    {\n        name: \"Bambara nut (Voandzou subterraneous)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 0,\n        income: 0,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 1,\n        labour: 1,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name:\n            \"Chickpea (Cicer arietinum L.) \\u2013 desi type (for food)- following the main crop\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 3,\n        seed: 1,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 1500.0 }],\n        temp: [{ min: 7.0, max: 28.0 }],\n        alt: [{ min: 1170.0, max: 1900.0 }],\n        soilpH: [{ min: 5.0, max: 8.3 }],\n    },\n    {\n        name:\n            \"Chickpea (Cicer arietinum L.) \\u2013 kabuli type (for export)-main crop\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 3,\n        labour: 3,\n        seed: 3,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 1500.0 }],\n        temp: [{ min: 7.0, max: 28.0 }],\n        alt: [{ min: 1170.0, max: 1900.0 }],\n        soilpH: [{ min: 5.0, max: 8.3 }],\n    },\n    {\n        name: \"Green grams/Mung bean (Vigna radiata)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 1,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 1,\n        land: 2,\n        labour: 3,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 1,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Lentils (Lens culinaris Medik.)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 3,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 280.0, max: 2430.0 }],\n        temp: [{ min: 6.0, max: 27.0 }],\n        alt: [{ min: 1000.0, max: 3800.0 }],\n        soilpH: [{ min: 4.5, max: 8.2 }],\n    },\n    {\n        name: \"Lupins \\u2013 Sweet lupin (new), traditional (Et)\",\n        type: \"Grain legume seasonal\",\n        food: 2,\n        feed: 1,\n        income: 3,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 4,\n        land: 1,\n        labour: 1,\n        seed: 2,\n        \"inp-serv\": 0,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 350.0, max: 1660.0 }],\n        temp: [{ min: 6.0, max: 26.0 }],\n        alt: [{ min: 1600.0, max: 3000.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name:\n            \"Field Pea (Pisum sativum L), adapted to high rainfall environment\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 3,\n        income: 4,\n        \"erosion-control\": 2,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 3,\n        labour: 2,\n        seed: 2,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 3,\n        markets: 1,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name:\n            \"Field pea (Pisum absynicum var. sativum)-adapted to low rainfall environment\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 3,\n        income: 3,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 2,\n        seed: 3,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Grass pea \\u2013 (Lathyrus spp)\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 1,\n        income: 3,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 320.0, max: 1360.0 }],\n        temp: [{ min: 5.0, max: 27.0 }],\n        alt: [{ min: 800.0, max: 3000.0 }],\n        soilpH: [{ min: 4.5, max: 8.3 }],\n    },\n    {\n        name: \"Cluster bean (Cyamopsis tetragonoloba L.)\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 1,\n        income: 3,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 380.0, max: 2410.0 }],\n        temp: [{ min: 12.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 1000.0 }],\n        soilpH: [{ min: 5.3, max: 8.3 }],\n    },\n    {\n        name: \"Dolichos lablab (Lablab purpureus)- for grain\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 4,\n        income: 3,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 2500.0 }],\n        temp: [{ min: 15.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2100.0 }],\n        soilpH: [{ min: 4.5, max: 7.8 }],\n    },\n    {\n        name: \"French beans (Phaseolus vulgaris)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 0,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 1,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 4,\n        \"knowl-skill\": 3,\n        water: 4,\n        markets: 4,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Desmodium silverleaf (Desmodium uncinatum)\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 3,\n        labour: 1,\n        seed: 3,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 750.0, max: 2400.0 }],\n        temp: [{ min: 3.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2500.0 }],\n        soilpH: [{ min: 6.5, max: 7.5 }],\n    },\n    {\n        name: \"Clover (Trifolium)\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 1,\n        \"erosion-control\": 2,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 1,\n        labour: 3,\n        seed: 3,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 3,\n        water: 3,\n        markets: 0,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Alfalfa/lucerne (Medicago sativa)\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 3,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 500.0, max: 2700.0 }],\n        temp: [{ min: 4.0, max: 27.0 }],\n        alt: [{ min: 300.0, max: 3000.0 }],\n        soilpH: [{ min: 5.5, max: 8.8 }],\n    },\n    {\n        name: \"Stylosanthes guianensis - semi-erect -forage type\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 500.0, max: 2000.0 }],\n        temp: [{ min: 15.0, max: 27.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 4.0, max: 7.7 }],\n    },\n    {\n        name: \"Stylosanthes hamata - bush/branching type-forage type\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 1700.0 }],\n        temp: [{ min: 22.0, max: 30.0 }],\n        alt: [{ min: 0.0, max: 500.0 }],\n        soilpH: [{ min: 4.0, max: 6.0 }],\n    },\n    {\n        name: \"Stylosanthes scabra -erect - forage type\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 500.0, max: 1700.0 }],\n        temp: [{ min: 20.0, max: 30.0 }],\n        alt: [{ min: 0.0, max: 600.0 }],\n        soilpH: [{ min: 4.0, max: 7.0 }],\n    },\n    {\n        name: \"Hairy Vetch (Vicia villosa )\",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 3,\n        water: 3,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 310.0, max: 1660.0 }],\n        temp: [{ min: 4.0, max: 21.0 }],\n        alt: [{ min: 1800.0, max: 3000.0 }],\n        soilpH: [{ min: 4.9, max: 8.2 }],\n    },\n    {\n        name: \"Vicia dasycarpa\",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 3,\n        water: 3,\n        markets: 2,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Velvet bean (Mucuna pruriens) \",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 0,\n        feed: 1,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 4,\n        land: 3,\n        labour: 2,\n        seed: 3,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 4,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 650.0, max: 3000.0 }],\n        temp: [{ min: 15.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2100.0 }],\n        soilpH: [{ min: 4.5, max: 7.7 }],\n    },\n    {\n        name: \"Lablab- forage type (Lablab purpureus)\",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 3,\n        feed: 4,\n        income: 3,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 2500.0 }],\n        temp: [{ min: 15.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2100.0 }],\n        soilpH: [{ min: 4.5, max: 7.8 }],\n    },\n    {\n        name: \"Crotolaria juncea\",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 0,\n        feed: 1,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 490.0, max: 4290.0 }],\n        temp: [{ min: 8.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2500.0 }],\n        soilpH: [{ min: 4.5, max: 7.5 }],\n    },\n    {\n        name: \"Calliandra calothyrus\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 4,\n        fuel: 3,\n        \"soil-fertility\": 3,\n        land: 1,\n        labour: 1,\n        seed: 3,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 1200.0, max: 4290.0 }],\n        temp: [{ min: 10.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 4.5, max: 7.5 }],\n    },\n    {\n        name: \"Gliricidia sepium\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 3,\n        income: 1,\n        \"erosion-control\": 4,\n        fuel: 4,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 2,\n        seed: 3,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 4,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 800.0, max: 4000.0 }],\n        temp: [{ min: 15.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 4.3, max: 8.0 }],\n    },\n    {\n        name: \"Leucaena leucocephala\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 4,\n        fuel: 4,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 500.0, max: 4100.0 }],\n        temp: [{ min: 15.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 1350.0 }],\n        soilpH: [{ min: 4.6, max: 8.7 }],\n    },\n    {\n        name: \"Leucaena trichandra\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 900.0, max: 3500.0 }],\n        temp: [{ min: 10.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 8.7 }],\n    },\n    {\n        name: \"Leucaena diversifolia\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 500.0, max: 4000.0 }],\n        temp: [{ min: 3.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 8.7 }],\n    },\n    {\n        name: \"Tree lucerne (Chamaecytisus palmensis)\",\n        type: \"Tree legumes \\u2013 coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 300.0, max: 1600.0 }],\n        temp: [{ min: 3.0, max: 28.0 }],\n        alt: [{ min: 1000.0, max: 2500.0 }],\n        soilpH: [{ min: 5.0, max: 8.7 }],\n    },\n    {\n        name: \"Sesbania sesban\",\n        type: \"Tree legumes \\u2013 non coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 4,\n        fuel: 3,\n        \"soil-fertility\": 3,\n        land: 1,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 500.0, max: 2500.0 }],\n        temp: [{ min: 15.0, max: 30.0 }],\n        alt: [{ min: 0.0, max: 2300.0 }],\n        soilpH: [{ min: 5.0, max: 7.5 }],\n    },\n    {\n        name: \"Sesbania grandiflora\",\n        type: \"Tree legumes \\u2013 non coppicing\",\n        food: 0,\n        feed: 3,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 3,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 700.0, max: 3000.0 }],\n        temp: [{ min: 22.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 1000.0 }],\n        soilpH: [{ min: 4.5, max: 8.7 }],\n    },\n    {\n        name: \"Tephrosia (Tephrosia vogelii)\",\n        type: \"Tree legumes \\u2013 non coppicing\",\n        food: 0,\n        feed: 0,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 870.0, max: 2670.0 }],\n        temp: [{ min: 13.0, max: 29.0 }],\n        alt: [{ min: 0.0, max: 2100.0 }],\n        soilpH: [{ min: 4.5, max: 6.5 }],\n    },\n    {\n        name: \"Faidherbia albidia\",\n        type: \"Tree legumes \\u2013 non coppicing\",\n        food: 0,\n        feed: 3,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 3,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Acacia angustissima\",\n        type: \"Tree legumes \\u2013 non coppicing\",\n        food: 0,\n        feed: 2,\n        income: 3,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 800.0, max: 3000.0 }],\n        temp: [{ min: 10.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 8.7 }],\n    },\n];\n","import { allLegumes } from \"./legume-information-clean\";\n\nconst legumeTypes = [];\nconst sources = [];\nallLegumes.map((legume) => {\n    if (!legumeTypes.includes(legume.type)) {\n        legumeTypes.push(legume.type);\n    }\n    if (\n        !sources.includes(legume[\"agroecology-source\"]) &&\n        legume[\"agroecology-source\"] !== null\n    ) {\n        sources.push(legume[\"agroecology-source\"]);\n    }\n});\n\nconst legumesData = {\n    allLegumes: allLegumes,\n    legumeTypes: legumeTypes,\n    sources: sources,\n};\n\nexport { legumesData };\n","import React, { Component } from \"react\";\n\nimport { Table, Card } from \"react-bootstrap\";\n\nimport _ from \"lodash\";\nimport \"./results-component.css\";\n\nimport { resultsData } from \"./results-data\";\nimport AppContext from \"../../AppContext\";\n\nimport { Form, FormControl, FormLabel, FormGroup } from \"react-bootstrap\";\n\nimport { legumesData } from \"../legumes-component/legume-data\";\n\nclass Results extends Component {\n    //static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = resultsData;\n\n        this.initialiseResults = this.initialiseResults.bind(this);\n        this.legumeContextScores = this.legumeContextScores.bind(this);\n        this.legumeFunctionScores = this.legumeFunctionScores.bind(this);\n        this.legumeAgroEcoScores = this.legumeAgroEcoScores.bind(this);\n        this.calculateLegumeScores = this.calculateLegumeScores.bind(this);\n        this.checkFormFilled = this.checkFormFilled.bind(this);\n    }\n\n    // Adding empty results attribute to fill for each of the legumes\n    // Loading the results from the form and getting the correct averages\n\n    initialiseResults = () => {\n        // Adding empty results to each legume\n        //const newLegumes = _.cloneDeep(legumesData.allLegumes.slice(0, 10));\n        const newLegumes = _.cloneDeep(legumesData.allLegumes);\n        newLegumes.map((newLegume) => {\n            newLegume.results = _.cloneDeep(this.state.emptyScoresForLegume);\n        });\n\n        // Adding form Results\n\n        // Not much editing for agroeco\n        const agroEcoData = _.cloneDeep(\n            this.context.currentProject.agroEcoData\n        );\n\n        //Extract average scores for context\n        const contextData = _.cloneDeep(\n            this.context.currentProject.contextScores.scores\n        );\n        const newContextAverages = _.cloneDeep(this.state.contextFitSummary);\n\n        newContextAverages.map((newcontextscore) => {\n            contextData.map((contextscore) => {\n                if (\n                    contextscore.scoreType === \"average\" &&\n                    newcontextscore.attribute.label ===\n                        contextscore.attribute.label\n                ) {\n                    newcontextscore.score = 4 - contextscore.score;\n                }\n            });\n        });\n\n        // For the functional summary, need to average results from the pairwise selections and\n        // from the participatory score matching\n\n        const pairWiseData = _.cloneDeep(\n            this.context.currentProject.pairWiseScores.averages\n        );\n        const participatoryMatrixData = _.cloneDeep(\n            this.context.currentProject.participatoryMatrixScores.summary\n                .scoresIndividual\n        );\n\n        const newFunctionAverages = _.cloneDeep(this.state.functionFitSummary);\n\n        newFunctionAverages.map((newfunction) => {\n            pairWiseData.map((pairwisescoreaverages) => {\n                if (\n                    pairwisescoreaverages.attribute.label ===\n                    newfunction.legumeFunction.label\n                ) {\n                    newfunction.pairwisescore = pairwisescoreaverages.value;\n                }\n            });\n        });\n\n        newFunctionAverages.map((newfunction) => {\n            participatoryMatrixData.map((matrixscore) => {\n                if (\n                    matrixscore.legumeFunction.label ===\n                    newfunction.legumeFunction.label\n                ) {\n                    newfunction.matrixscore = matrixscore.scores[1].score;\n                }\n            });\n        });\n\n        newFunctionAverages.map((newfunction) => {\n            newfunction.score = parseFloat(\n                (\n                    newfunction.pairwisescore / 2 +\n                    newfunction.matrixscore / 2\n                ).toFixed(2)\n            );\n        });\n\n        // Set initial state and then calculate initial results for legumes\n        this.setState(\n            {\n                legumes: newLegumes,\n                agroEcoFitSummary: agroEcoData.biofilters,\n                contextFitSummary: newContextAverages,\n                functionFitSummary: newFunctionAverages,\n            },\n            () => {\n                this.calculateLegumeScores();\n            }\n        );\n    };\n\n    legumeContextScores = (props) => {\n        // Context Scores\n        // console.log(\"Legume Context: \" + props.legumecontext);\n        // console.log(\"Form Context: \" + props.formcontext);\n\n        let legumecontext = parseFloat(props.legumecontext);\n        let formcontext = parseFloat(props.formcontext);\n        // Condition 1\n        if (\n            legumecontext - formcontext > -0.5 &&\n            legumecontext - formcontext <= 0\n        ) {\n            let scoreToReturn = 4 + (legumecontext - formcontext) / 2;\n            if (scoreToReturn > 0) {\n                return scoreToReturn;\n            }\n        }\n\n        // Condition 2\n        if (\n            legumecontext - formcontext < 0.5 &&\n            legumecontext - formcontext >= 0\n        ) {\n            let scoreToReturn = 4 - (legumecontext - formcontext) / 2;\n            if (scoreToReturn > 0) {\n                return scoreToReturn;\n            }\n        }\n\n        // Condition 3\n        if (legumecontext > formcontext) {\n            let scoreToReturn = 4 - (legumecontext - formcontext) * 2;\n            if (scoreToReturn > 0) {\n                return scoreToReturn;\n            }\n        }\n\n        // Condition 4\n        if (formcontext > legumecontext) {\n            return 4;\n        }\n\n        return 0;\n    };\n\n    legumeFunctionScores = (props) => {\n        // Calculating the averages for each of the legumes\n        // Function Scores\n\n        let formfunction = props.formfunction;\n        let legumefunction = props.legumefunction;\n        if (formfunction === 0) {\n            return 0;\n        }\n        if (legumefunction < formfunction) {\n            return (legumefunction * formfunction) / 8;\n        }\n        return (legumefunction * formfunction) / 4;\n    };\n\n    legumeAgroEcoScores = (props) => {\n        //console.log(props.legumeMin);\n        //console.log(props.legumeMax);\n        //console.log(props.formvalue);\n\n        let legumeMin = props.legumeMin;\n        let legumeMax = props.legumeMax;\n        let formvalue = props.formvalue;\n\n        if (formvalue >= legumeMin && formvalue <= legumeMax) {\n            return 1;\n        } else {\n            return 0;\n        }\n    };\n\n    calculateLegumeScores = () => {\n        const newLegumeState = _.cloneDeep(this.state.legumes);\n\n        newLegumeState.map((legume) => {\n            // Set context scores\n            // map through individual legumes\n            legume.results.contextFit.map((legumeContextScore) => {\n                // Map through the contextFit summaries\n                this.state.contextFitSummary.map((contextAttribute) => {\n                    if (legumeContextScore.attribute !== undefined) {\n                        // Match the attribute in the legume to the attribute in the context fit sumary\n                        if (\n                            contextAttribute.attribute.label ===\n                            legumeContextScore.attribute.label\n                        ) {\n                            // Assign the context score\n                            // console.log(legumeContextScore);\n                            // console.log(contextAttribute);\n                            // console.log(\n                            //     \"Legume Attribute: \" +\n                            //         contextAttribute.attribute.label\n                            // );\n                            //console.log(legume);\n\n                            legumeContextScore.score = this.legumeContextScores(\n                                // Props to send to the function\n                                {\n                                    legumecontext:\n                                        legume[\n                                            contextAttribute.attribute.label\n                                        ],\n                                    formcontext: contextAttribute.score,\n                                }\n                            );\n                            // console.log(legumeContextScore.score);\n                        }\n                    }\n                });\n            });\n\n            // Set function scores\n            legume.results.functionFit.map((legumeFunction) => {\n                this.state.functionFitSummary.map((functionAttribute) => {\n                    if (\n                        functionAttribute.legumeFunction !== undefined &&\n                        legumeFunction.legumeFunction !== undefined\n                    ) {\n                        if (\n                            functionAttribute.legumeFunction.label ===\n                            legumeFunction.legumeFunction.label\n                        ) {\n                            legumeFunction.score = this.legumeFunctionScores({\n                                formfunction: functionAttribute.score,\n                                legumefunction:\n                                    legume[\n                                        functionAttribute.legumeFunction.label\n                                    ],\n                            });\n                        }\n                    }\n                });\n            });\n\n            // set agroeco scores\n            legume.results.agroEcoFit.map((legumeAgroEco) => {\n                this.state.agroEcoFitSummary.map((agroEcoSummary) => {\n                    if (legumeAgroEco.agroEcoFilter !== undefined) {\n                        if (\n                            legumeAgroEco.agroEcoFilter.label ===\n                            agroEcoSummary.label\n                        ) {\n                            legumeAgroEco.score = this.legumeAgroEcoScores({\n                                legumeMin: legume[agroEcoSummary.label][0].min,\n                                legumeMax: legume[agroEcoSummary.label][0].max,\n                                formvalue: agroEcoSummary.value,\n                            });\n                            // console.log(legumeAgroEco);\n                            // console.log(agroEcoSummary);\n                            // console.log(legume[agroEcoSummary.label][0].min);\n                            // console.log(legume[agroEcoSummary.label][0].max);\n                        }\n                    }\n                });\n            });\n        });\n\n        // Update overall scores\n        newLegumeState.map((legume) => {\n            // Sum agroEco Scores\n            let agroecoscoreAccumulator = 0;\n            legume.results.agroEcoFit.forEach((agroecoscore) => {\n                if (agroecoscore.agroEcoFilter !== undefined) {\n                    agroecoscoreAccumulator += agroecoscore.score;\n                }\n            });\n            legume.results.agroEcoFit.forEach((agroecoscore) => {\n                if (agroecoscore.overallFit !== undefined) {\n                    agroecoscore.overallFit = agroecoscoreAccumulator;\n                }\n            });\n\n            // Sum context Scores\n            let contextAccumulator = 0;\n            legume.results.contextFit.forEach((contextScore) => {\n                if (contextScore.attribute !== undefined) {\n                    contextAccumulator += contextScore.score;\n                }\n            });\n            legume.results.contextFit.forEach((contextScore) => {\n                if (contextScore.overallFit !== undefined) {\n                    contextScore.overallFit = contextAccumulator;\n                }\n            });\n            // Sum function scores\n            let functionAccumulator = 0;\n            legume.results.functionFit.forEach((functionScore) => {\n                if (functionScore.legumeFunction !== undefined) {\n                    functionAccumulator += functionScore.score;\n                }\n            });\n            legume.results.functionFit.forEach((functionScore) => {\n                if (functionScore.overallFit !== undefined) {\n                    functionScore.overallFit = functionAccumulator;\n                }\n            });\n\n            // Set overall Score\n            legume.results.overallFit.map((avgFit) => {\n                if (avgFit.overallFit !== undefined) {\n                    avgFit.overallFit =\n                        (agroecoscoreAccumulator /\n                            this.state.agroEcoFilters.length +\n                            contextAccumulator /\n                                (this.state.attributes.length * 4) +\n                            functionAccumulator /\n                                (this.state.legumeFunctions.length * 4)) /\n                        3;\n                }\n            });\n        });\n\n        // Set ranking the scores (draws included)\n        newLegumeState.forEach((firstLegume) => {\n            // Overall rank is the fifth item in the array\n            firstLegume.results.agroEcoFit[5].overallRank = 1;\n            let valuesEncountered = [];\n            newLegumeState.forEach((secondLegume) => {\n                //-------------------------------------------------------------------------------------------------\n                // AgroEco Rank\n                if (\n                    // Overall rank is the fifth item in the array\n\n                    firstLegume.results.agroEcoFit[4].overallFit <\n                        secondLegume.results.agroEcoFit[4].overallFit &&\n                    // Making sure the value has not been encountered before.\n                    // If it has, there is no need to push the rank further down the list\n                    !valuesEncountered.includes(\n                        secondLegume.results.agroEcoFit[4].overallFit\n                    )\n                ) {\n                    //\n                    valuesEncountered.push(\n                        secondLegume.results.agroEcoFit[4].overallFit\n                    );\n                    firstLegume.results.agroEcoFit[5].overallRank += 1;\n                }\n                //-------------------------------------------------------------------------------------------------\n                // Context Rank\n                if (\n                    // Overall rank is the 8th item in the array\n\n                    firstLegume.results.contextFit[7].overallFit <\n                        secondLegume.results.contextFit[7].overallFit &&\n                    // Making sure the value has not been encountered before.\n                    // If it has, there is no need to push the rank further down the list\n                    !valuesEncountered.includes(\n                        secondLegume.results.contextFit[7].overallFit\n                    )\n                ) {\n                    //\n                    valuesEncountered.push(\n                        secondLegume.results.contextFit[7].overallFit\n                    );\n                    firstLegume.results.contextFit[8].overallRank += 1;\n                }\n                // Function Rank\n                //-------------------------------------------------------------------------------------------------\n                if (\n                    // Overall rank is the 7th item in the array\n\n                    firstLegume.results.functionFit[6].overallFit <\n                        secondLegume.results.functionFit[6].overallFit &&\n                    // Making sure the value has not been encountered before.\n                    // If it has, there is no need to push the rank further down the list\n                    !valuesEncountered.includes(\n                        secondLegume.results.functionFit[6].overallFit\n                    )\n                ) {\n                    //\n                    valuesEncountered.push(\n                        secondLegume.results.functionFit[6].overallFit\n                    );\n                    firstLegume.results.functionFit[7].overallRank += 1;\n                }\n\n                // Overall Rank\n                //-------------------------------------------------------------------------------------------------\n                if (\n                    // Overall rank is the first item in the array\n\n                    firstLegume.results.overallFit[0].overallFit <\n                        secondLegume.results.overallFit[0].overallFit &&\n                    // Making sure the value has not been encountered before.\n                    // If it has, there is no need to push the rank further down the list\n                    !valuesEncountered.includes(\n                        secondLegume.results.overallFit[0].overallFit\n                    )\n                ) {\n                    //\n                    valuesEncountered.push(\n                        secondLegume.results.overallFit[0].overallFit\n                    );\n                    firstLegume.results.overallFit[1].overallRank += 1;\n                }\n            });\n        });\n\n        this.setState({\n            legumes: newLegumeState,\n        });\n    };\n\n    checkFormFilled = () => {\n        if (\n            this.context.currentProject.agroEcoData !== undefined &&\n            this.context.currentProject.contextScores !== undefined &&\n            this.context.currentProject.pairWiseScores !== undefined &&\n            this.context.currentProject.participatoryMatrixScores !== undefined\n        ) {\n            this.setState(\n                {\n                    formFilled: true,\n                },\n                () => {\n                    this.initialiseResults();\n                }\n            );\n        }\n    };\n\n    componentDidMount() {\n        if (this.context.currentProject === undefined) {\n            this.context.currentProject = {};\n        }\n        if (this.context.currentProject.results !== undefined) {\n            const newState = _.cloneDeep(this.context.currentProject.results);\n            this.setState(newState);\n        } else {\n            const newContext = _.cloneDeep(this.state);\n            this.context.currentProject.results = newContext;\n        }\n        //console.log(this.state);\n\n        this.checkFormFilled();\n    }\n    componentDidUpdate() {\n        const newContext = _.cloneDeep(this.state);\n        this.context.currentProject.results = newContext;\n        console.log(this.state);\n    }\n\n    returnResultsForSummaryTable = (props) => {\n        if (props.item.score !== undefined) {\n            return <td>{parseFloat(props.item.score).toFixed(2)}</td>;\n        }\n        if (props.item.overallFit !== undefined) {\n            return <td>{parseFloat(props.item.overallFit).toFixed(2)}</td>;\n        }\n        if (props.item.overallRank !== undefined) {\n            return <td>{parseInt(props.item.overallRank)}</td>;\n        }\n    };\n\n    agroEcoTable = () => {\n        return (\n            <div>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Legume Name</th>\n                            {this.state.agroEcoFilters.map((agroEcoFilter) => {\n                                return <th>{agroEcoFilter.label}</th>;\n                            })}\n                            <th>total score</th>\n                            <th>overall rank</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.orderAndFilterLegume().map((legume) => {\n                            return (\n                                <tr>\n                                    <td>{legume.name}</td>\n                                    {legume.results.agroEcoFit.map(\n                                        (agroEcoItem) => {\n                                            return this.returnResultsForSummaryTable(\n                                                {\n                                                    item: agroEcoItem,\n                                                }\n                                            );\n                                        }\n                                    )}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    };\n\n    contextFitTable = () => {\n        return (\n            <div>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Legume Name</th>\n                            {this.state.attributes.map((attribute) => {\n                                return <th>{attribute.label}</th>;\n                            })}\n                            <th>total score</th>\n                            <th>overall rank</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.orderAndFilterLegume().map((legume) => {\n                            return (\n                                <tr>\n                                    <td>{legume.name}</td>\n                                    {legume.results.contextFit.map(\n                                        (contextItem) => {\n                                            return this.returnResultsForSummaryTable(\n                                                {\n                                                    item: contextItem,\n                                                }\n                                            );\n                                        }\n                                    )}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    };\n\n    functionFitTable = () => {\n        return (\n            <div>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Legume Name</th>\n                            {this.state.legumeFunctions.map(\n                                (legumeFunction) => {\n                                    return <th>{legumeFunction.label}</th>;\n                                }\n                            )}\n                            <th>total score</th>\n                            <th>overall rank</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.orderAndFilterLegume().map((legume) => {\n                            return (\n                                <tr>\n                                    <td>{legume.name}</td>\n                                    {legume.results.functionFit.map(\n                                        (functionItem) => {\n                                            return this.returnResultsForSummaryTable(\n                                                {\n                                                    item: functionItem,\n                                                }\n                                            );\n                                        }\n                                    )}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    };\n\n    returnRank = (props) => {\n        let scoreToReturn = 0;\n        props.arr.map((item) => {\n            if (item.overallRank !== undefined) {\n                scoreToReturn = item.overallRank;\n            }\n        });\n\n        return scoreToReturn;\n    };\n\n    returnScore = (props) => {\n        let scoreToReturn = 0;\n        props.arr.map((item) => {\n            if (item.overallFit !== undefined) {\n                scoreToReturn = item.overallFit;\n            }\n        });\n\n        return parseFloat(scoreToReturn).toFixed(2);\n    };\n\n    compareScores = (a, b, props) => {\n        let scoreA = \"\";\n        a.results[props.scoreType].map((item) => {\n            if (item.overallFit !== undefined) {\n                scoreA = item.overallFit;\n            }\n        });\n        let scoreB = \"\";\n        b.results[props.scoreType].map((item) => {\n            if (item.overallFit !== undefined) {\n                scoreB = item.overallFit;\n            }\n        });\n\n        if (scoreA < scoreB) {\n            return 1;\n        }\n        if (scoreA > scoreB) {\n            return -1;\n        }\n        return 0;\n    };\n\n    orderAndFilterLegume = () => {\n        const filter = this.state.resultsFilter.selection.order;\n\n        let legumeArr = _.cloneDeep(this.state.legumes);\n\n        // Filter by overall score\n        if (filter === \"Overall Score\") {\n            legumeArr.sort((a, b) =>\n                this.compareScores(a, b, { scoreType: \"overallFit\" })\n            );\n            console.log(legumeArr);\n        }\n        // Filter by AgroEcoScore\n        if (filter === \"AgroEco Score\") {\n            legumeArr.sort((a, b) =>\n                this.compareScores(a, b, { scoreType: \"agroEcoFit\" })\n            );\n            console.log(legumeArr);\n        }\n        // Filter by ContextScore\n        if (filter === \"Context Score\") {\n            legumeArr.sort((a, b) =>\n                this.compareScores(a, b, { scoreType: \"contextFit\" })\n            );\n            console.log(legumeArr);\n        }\n        // Filter by Function Fit\n        if (filter === \"Function Score\") {\n            legumeArr.sort((a, b) =>\n                this.compareScores(a, b, { scoreType: \"functionFit\" })\n            );\n            console.log(legumeArr);\n        }\n\n        if (this.state.resultsFilter.selection.numberOfLegumes == \"5\") {\n            legumeArr = legumeArr.slice(0, 5);\n        }\n\n        if (this.state.resultsFilter.selection.numberOfLegumes == \"10\") {\n            legumeArr = legumeArr.slice(0, 10);\n        }\n\n        if (this.state.resultsFilter.selection.numberOfLegumes == \"20\") {\n            legumeArr = legumeArr.slice(0, 20);\n        }\n\n        return legumeArr;\n    };\n\n    changeCellColour = () => {\n        return \"blue\";\n    };\n\n    summaryTable = () => {\n        return (\n            <div>\n                <Table bordered striped hover>\n                    <thead>\n                        <tr>\n                            <th>Legume Name</th>\n                            <th>Agro-Eco score</th>\n                            <th>Agro-Eco rank</th>\n                            <th>Context score</th>\n                            <th>Context rank</th>\n                            <th>Function score</th>\n                            <th>Function rank</th>\n\n                            <th>Overall score (0-1)</th>\n                            <th>Overall rank</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.orderAndFilterLegume().map((legume) => {\n                            return (\n                                <tr>\n                                    <td>{legume.name}</td>\n                                    <td\n                                    // style={{\n                                    //     backgroundColor: this.changeCellColour(),\n                                    // }}\n                                    >\n                                        {this.returnScore({\n                                            arr: legume.results.agroEcoFit,\n                                        })}\n                                    </td>\n                                    <td>\n                                        {this.returnRank({\n                                            arr: legume.results.agroEcoFit,\n                                        })}\n                                    </td>\n                                    <td>\n                                        {this.returnScore({\n                                            arr: legume.results.contextFit,\n                                        })}\n                                    </td>\n                                    <td>\n                                        {this.returnRank({\n                                            arr: legume.results.contextFit,\n                                        })}\n                                    </td>\n                                    <td>\n                                        {this.returnScore({\n                                            arr: legume.results.functionFit,\n                                        })}\n                                    </td>\n                                    <td>\n                                        {this.returnRank({\n                                            arr: legume.results.functionFit,\n                                        })}\n                                    </td>\n                                    <td>\n                                        {this.returnScore({\n                                            arr: legume.results.overallFit,\n                                        })}\n                                    </td>\n                                    <td>\n                                        {this.returnRank({\n                                            arr: legume.results.overallFit,\n                                        })}\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    };\n\n    renderLegumeResults = () => {\n        if (this.state.resultsFilter.selection.whichResults === \"Summary\") {\n            return this.summaryTable();\n        }\n\n        if (\n            this.state.resultsFilter.selection.whichResults === \"AgroEco Scores\"\n        ) {\n            return this.agroEcoTable();\n        }\n\n        if (\n            this.state.resultsFilter.selection.whichResults === \"Context Scores\"\n        ) {\n            return this.contextFitTable();\n        }\n\n        if (\n            this.state.resultsFilter.selection.whichResults ===\n            \"Function Scores\"\n        ) {\n            return this.functionFitTable();\n        }\n    };\n\n    changeSelection = (event, props) => {\n        this.setState(\n            (prevState) => {\n                return {\n                    ...prevState,\n                    resultsFilter: {\n                        ...prevState.resultsFilter,\n                        selection: {\n                            ...prevState.resultsFilter.selection,\n                            [props.type]: event.target.value,\n                        },\n                    },\n                };\n            },\n            () => this.orderAndFilterLegume()\n        );\n    };\n\n    resultsFilters = () => {\n        return (\n            <div className=\"card-container\">\n                <Card>\n                    <Card.Header className=\"bg-dark text-white\">\n                        <h2>Filter Results</h2>\n                    </Card.Header>\n                    <Card.Body>\n                        <Form className=\"results-form\">\n                            <FormGroup\n                                controlId=\"resultsSelect\"\n                                className=\"form-item\"\n                            >\n                                <FormLabel>Results</FormLabel>\n\n                                <FormControl\n                                    value={\n                                        this.state.resultsFilter.selection\n                                            .whichResults\n                                    }\n                                    onChange={(event) =>\n                                        this.changeSelection(event, {\n                                            type: \"whichResults\",\n                                        })\n                                    }\n                                    as=\"select\"\n                                >\n                                    {this.state.resultsFilter.selectOptions.map(\n                                        (selectionoption) => {\n                                            return (\n                                                <option>\n                                                    {selectionoption}\n                                                </option>\n                                            );\n                                        }\n                                    )}\n                                </FormControl>\n                            </FormGroup>\n\n                            <FormGroup\n                                value={this.state.resultsFilter.selection.order}\n                                onChange={(event) =>\n                                    this.changeSelection(event, {\n                                        type: \"order\",\n                                    })\n                                }\n                                controlId=\"resultsFilter\"\n                                className=\"form-item\"\n                            >\n                                <FormLabel>Order by:</FormLabel>\n\n                                <FormControl\n                                    as=\"select\"\n                                    value={\n                                        this.state.resultsFilter.selection.order\n                                    }\n                                    onChange={(event) =>\n                                        this.changeSelection(event, {\n                                            type: \"order\",\n                                        })\n                                    }\n                                >\n                                    {this.state.resultsFilter.orderOptions.map(\n                                        (orderoption) => {\n                                            return (\n                                                <option>{orderoption}</option>\n                                            );\n                                        }\n                                    )}\n                                </FormControl>\n                            </FormGroup>\n\n                            <FormGroup\n                                controlId=\"resultsFilter\"\n                                className=\"form-item\"\n                            >\n                                <FormLabel>\n                                    Number of Legumes Displayed\n                                </FormLabel>\n\n                                <FormControl\n                                    as=\"select\"\n                                    value={\n                                        this.state.resultsFilter.selection\n                                            .numberOfLegumes\n                                    }\n                                    onChange={(event) =>\n                                        this.changeSelection(event, {\n                                            type: \"numberOfLegumes\",\n                                        })\n                                    }\n                                >\n                                    {this.state.resultsFilter.numberOfLegumesOptions.map(\n                                        (numberoption) => {\n                                            return (\n                                                <option>{numberoption}</option>\n                                            );\n                                        }\n                                    )}\n                                </FormControl>\n                            </FormGroup>\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </div>\n        );\n    };\n\n    renderBody = () => {\n        if (this.state.formFilled === false) {\n            return <h1>No data entered yet. Please fill in data-entry form</h1>;\n        }\n        if (this.state.formFilled === true) {\n            return (\n                <div className=\"results-container\">\n                    {this.resultsFilters()}\n                    <div>{this.renderLegumeResults()}</div>\n                </div>\n            );\n        }\n    };\n\n    render() {\n        return <div>{this.renderBody()}</div>;\n    }\n}\n\nResults.contextType = AppContext;\n\nexport default Results;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nimport AppContext from \"../../AppContext\";\n\nclass ViewContext extends Component {\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        console.log(AppContext);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        this.initialiseContext();\n    }\n\n    initialiseContext = () => {\n        const appVariables = [\n            \"agroEcoData\",\n            \"contextScores\",\n            \"location\",\n            \"pairWiseScores\",\n            \"participatoryMatrixScores\",\n            \"projectInfo\",\n            \"results\",\n            \"user\",\n        ];\n\n        const appData = {};\n\n        appVariables.map((variable) => {\n            if (this.context[variable] !== undefined) {\n                appData[variable] = _.cloneDeep(this.context[variable]);\n            }\n        });\n\n        this.setState(appData);\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>App Context</h1>\n                <pre>{JSON.stringify(this.state, null, 2)}</pre>\n            </div>\n        );\n    }\n}\n\nexport default ViewContext;\n","import React, {\n    useState,\n    useCallback,\n    useRef,\n    useMemo,\n    useEffect,\n    useContext,\n    createContext,\n} from \"react\";\n\nimport _ from \"lodash\";\nimport \"./map-polygon-component.css\";\n\nimport AppContext from \"../../AppContext\";\n\nimport { MapContainer, Marker, Popup, TileLayer, Polygon } from \"react-leaflet\";\n\nlet center = {\n    lat: 5.26,\n    lng: 22.7,\n};\n\nlet markerpositions = [];\n\nif (AppContext.currentProject === undefined) {\n    AppContext.currentProject = {};\n}\nif (AppContext.currentProject.location === undefined) {\n    markerpositions = [\n        {\n            lat: center.lat + 10,\n            lng: center.lng - 10,\n        },\n        {\n            lat: center.lat + 10,\n            lng: center.lng + 10,\n        },\n        {\n            lat: center.lat - 10,\n            lng: center.lng + 10,\n        },\n        {\n            lat: center.lat - 10,\n            lng: center.lng - 10,\n        },\n    ];\n}\n\nif (AppContext.currentProject.location !== undefined) {\n    markerpositions = AppContext.currentProject.location;\n}\n\nfunction DraggableMarker(props) {\n    const markerRef = useRef(null);\n\n    const updateMarker = useMemo(\n        () => ({\n            dragend() {\n                const marker = markerRef.current;\n\n                if (marker != null) {\n                    let newArray = _.clone(props.center);\n                    let newLat = marker.getLatLng().lat;\n                    let newLng = marker.getLatLng().lng;\n                    newArray[props.index].lat = newLat;\n                    newArray[props.index].lng = newLng;\n                    props.changeMarkerPositions(newArray);\n\n                    //console.log(marker.getLatLng().lat);\n                }\n            },\n        }),\n        []\n    );\n\n    return (\n        <>\n            <Marker\n                draggable={true}\n                eventHandlers={updateMarker}\n                position={props.center[props.index]}\n                ref={markerRef}\n            ></Marker>\n        </>\n    );\n}\n\nfunction DraggablePolygon(props) {\n    return (\n        <Polygon\n            pathOptions={{ color: \"purple\" }}\n            positions={props.positions}\n        />\n    );\n}\n\nfunction MapPolygon(location) {\n    const [markerPositions, changeMarkerPositions] = useState(markerpositions);\n\n    const [mapCenter, changeCenter] = useState(center);\n\n    const AppContextMap = useContext(AppContext);\n\n    console.log(AppContextMap.currentProject);\n    useEffect(() => {\n        if (AppContextMap.currentProject.location !== undefined) {\n            changeMarkerPositions(AppContextMap.currentProject.location);\n        }\n    }, []);\n\n    useEffect(() => {\n        AppContextMap.currentProject.location = markerPositions;\n        // console.log(markerPositions);\n    });\n\n    return (\n        <div className=\"leaflet-container\">\n            <MapContainer center={mapCenter} zoom={3} scrollWheelZoom={false}>\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n\n                <DraggablePolygon positions={markerPositions} />\n\n                <DraggableMarker\n                    center={markerPositions}\n                    index={0}\n                    changeMarkerPositions={changeMarkerPositions}\n                />\n                <DraggableMarker\n                    center={markerPositions}\n                    index={1}\n                    changeMarkerPositions={changeMarkerPositions}\n                />\n                <DraggableMarker\n                    center={markerPositions}\n                    index={2}\n                    changeMarkerPositions={changeMarkerPositions}\n                />\n                <DraggableMarker\n                    center={markerPositions}\n                    index={3}\n                    changeMarkerPositions={changeMarkerPositions}\n                />\n            </MapContainer>\n        </div>\n    );\n}\n\nexport default MapPolygon;\n","import React, { Component } from \"react\";\nimport AppContext from \"../../AppContext\";\n\nimport MapPolygon from \"../map-polygon-component/map-polygon-component\";\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Card } from \"react-bootstrap\";\nimport _ from \"lodash\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport \"./project-information-component.css\";\nimport \"../../App.css\";\nimport { countryList } from \"./countries-list\";\nimport {\n    Button,\n    Form,\n    FormControl,\n    FormText,\n    FormLabel,\n    FormGroup,\n} from \"react-bootstrap\";\n\nlet countryNames = [];\n\ncountryList.forEach((country) => {\n    countryNames.push(country.name);\n});\n\nconst projectID = uuidv4();\nclass ProjectInformation extends Component {\n    //static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userLocationFound: false,\n            userLocation: {},\n            projectName: \"\",\n            projectID: projectID,\n            country: \"\",\n            majorRegion: \"\",\n            minorRegion: \"\",\n            communityName: \"\",\n            communityType: \"\",\n            description: \"\",\n            date: new Date(),\n            countryNames: countryNames,\n        };\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n        if (this.context.currentProject === undefined) {\n            this.context.currentProject = {};\n        }\n        if (this.context.currentProject.projectInfo === undefined) {\n            const newContext = _.cloneDeep(this.state);\n            this.context.currentProject.projectInfo = newContext;\n        }\n        if (this.context.currentProject.projectInfo !== undefined) {\n            const newState = _.cloneDeep(\n                this.context.currentProject.projectInfo\n            );\n            this.setState(newState);\n        }\n\n        // console.log(this.state.countryNames);\n    }\n\n    // geoLocate = () => {\n    //     let userlocation = {};\n    //     if (\"geolocation\" in navigator) {\n    //         navigator.geolocation.getCurrentPosition(function (\n    //             position\n    //         ) {\n    //             userlocation = {\n    //                 lat: position.coords.latitude,\n    //                 lng: position.coords.longitude,\n    //             };\n\n    //             console.log(userlocation);\n    //             return userlocation;\n    //             //console.log(\"Longitude is :\", );\n    //         });\n    //         console.log(\"Available\");\n    //         this.setState({\n    //             userLocationFound: true,\n    //             userLocation: userlocation,\n    //         });\n    //     } else {\n    //         //console.log(\"Not Available\");\n    //     }\n    // };\n\n    componentDidUpdate() {\n        //console.log(this.state);\n        const newContext = _.cloneDeep(this.state);\n        this.context.currentProject.projectInfo = newContext;\n    }\n\n    render() {\n        return (\n            <div className=\"project-info-container\">\n                <div className=\"card-container\">\n                    <Card>\n                        <Card.Header className=\"bg-dark text-white\">\n                            <h2>Meta Data</h2>\n                        </Card.Header>\n                    </Card>\n                </div>\n                <Form className=\"form-display\">\n                    <FormGroup className=\"short-form-entry\">\n                        <FormLabel>Project Name</FormLabel>\n                        <FormControl\n                            type=\"text\"\n                            value={this.state.projectName}\n                            onChange={(event) =>\n                                this.setState({\n                                    projectName: event.target.value,\n                                })\n                            }\n                        />\n                        <FormText className=\"text-muted\">\n                            A memorable name for your project.\n                        </FormText>\n                    </FormGroup>\n\n                    <FormGroup className=\"short-form-entry\">\n                        <FormLabel>Project ID</FormLabel>\n                        <FormControl\n                            type=\"text\"\n                            placeholder={this.state.projectID}\n                            readOnly\n                        />\n                        <FormText className=\"text-muted\">\n                            A universally unique identifier (uuid) for your\n                            project.\n                        </FormText>\n                    </FormGroup>\n\n                    <FormGroup className=\"short-form-entry\">\n                        <FormLabel>Country</FormLabel>\n                        <FormControl\n                            as=\"select\"\n                            value={this.state.country}\n                            onChange={(event) => {\n                                this.setState({ country: event.target.value });\n                            }}\n                        >\n                            {this.state.countryNames.map((country) => {\n                                return <option>{country}</option>;\n                            })}\n                        </FormControl>\n                    </FormGroup>\n\n                    <FormGroup className=\"short-form-entry\">\n                        <FormLabel>Major Region</FormLabel>\n                        <FormControl\n                            value={this.state.majorRegion}\n                            onChange={(event) =>\n                                this.setState({\n                                    majorRegion: event.target.value,\n                                })\n                            }\n                        ></FormControl>\n                        <FormText className=\"text-muted\">\n                            e.g. state/province\n                        </FormText>\n                    </FormGroup>\n\n                    <FormGroup className=\"short-form-entry\">\n                        <FormLabel>Minor Region</FormLabel>\n                        <FormControl\n                            value={this.state.minorRegion}\n                            onChange={(event) =>\n                                this.setState({\n                                    minorRegion: event.target.value,\n                                })\n                            }\n                        ></FormControl>\n                        <FormText className=\"text-muted\">e.g. county</FormText>\n                    </FormGroup>\n\n                    <FormGroup className=\"short-form-entry\">\n                        <FormLabel>Community Name</FormLabel>\n                        <FormControl\n                            value={this.state.communityName}\n                            onChange={(event) =>\n                                this.setState({\n                                    communityName: event.target.value,\n                                })\n                            }\n                        ></FormControl>\n                    </FormGroup>\n\n                    <FormGroup className=\"short-form-entry\">\n                        <FormLabel>Community Type</FormLabel>\n                        <FormControl\n                            value={this.state.communityType}\n                            onChange={(event) =>\n                                this.setState({\n                                    communityType: event.target.value,\n                                })\n                            }\n                        ></FormControl>\n                        <FormText className=\"text-muted\">\n                            e.g. village/sub-village\n                        </FormText>\n                    </FormGroup>\n\n                    <FormGroup className=\"short-form-entry\">\n                        <FormLabel>Date</FormLabel>\n                        <DatePicker\n                            selected={Date.parse(this.state.date)}\n                            onChange={(date) => this.setState({ date: date })}\n                        />\n                        <FormText className=\"text-muted\">\n                            The date the data-collection ended\n                        </FormText>\n                    </FormGroup>\n\n                    <FormGroup className=\"long-form-entry\">\n                        <FormLabel>Project Description</FormLabel>\n                        <FormControl\n                            as=\"textarea\"\n                            rows={4}\n                            value={this.state.description}\n                            onChange={(event) =>\n                                this.setState({\n                                    description: event.target.value,\n                                })\n                            }\n                        ></FormControl>\n                    </FormGroup>\n                </Form>\n\n                <div className=\"card-container\">\n                    <Card>\n                        <Card.Header className=\"bg-dark text-white\">\n                            <h2>Mapping</h2>\n                        </Card.Header>\n                        <Card.Body>\n                            The map below can be used to select your study\n                            region. We recommend that you set the approximate\n                            study location before going to the field. That way,\n                            the some information from the map can be cached for\n                            offline use. If there are any problems collecting\n                            geolocation offline, collect the rest of the data\n                            needed, save your progress, and fill in the mapping\n                            information when you once again have access to\n                            internet\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"map-container\">\n                    <MapPolygon />\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectInformation.contextType = AppContext;\n\nexport default ProjectInformation;\n","const countryList = [\n    { name: \"Afghanistan\", code: \"AF\" },\n    { name: \"Åland Islands\", code: \"AX\" },\n    { name: \"Albania\", code: \"AL\" },\n    { name: \"Algeria\", code: \"DZ\" },\n    { name: \"American Samoa\", code: \"AS\" },\n    { name: \"AndorrA\", code: \"AD\" },\n    { name: \"Angola\", code: \"AO\" },\n    { name: \"Anguilla\", code: \"AI\" },\n    { name: \"Antarctica\", code: \"AQ\" },\n    { name: \"Antigua and Barbuda\", code: \"AG\" },\n    { name: \"Argentina\", code: \"AR\" },\n    { name: \"Armenia\", code: \"AM\" },\n    { name: \"Aruba\", code: \"AW\" },\n    { name: \"Australia\", code: \"AU\" },\n    { name: \"Austria\", code: \"AT\" },\n    { name: \"Azerbaijan\", code: \"AZ\" },\n    { name: \"Bahamas\", code: \"BS\" },\n    { name: \"Bahrain\", code: \"BH\" },\n    { name: \"Bangladesh\", code: \"BD\" },\n    { name: \"Barbados\", code: \"BB\" },\n    { name: \"Belarus\", code: \"BY\" },\n    { name: \"Belgium\", code: \"BE\" },\n    { name: \"Belize\", code: \"BZ\" },\n    { name: \"Benin\", code: \"BJ\" },\n    { name: \"Bermuda\", code: \"BM\" },\n    { name: \"Bhutan\", code: \"BT\" },\n    { name: \"Bolivia\", code: \"BO\" },\n    { name: \"Bosnia and Herzegovina\", code: \"BA\" },\n    { name: \"Botswana\", code: \"BW\" },\n    { name: \"Bouvet Island\", code: \"BV\" },\n    { name: \"Brazil\", code: \"BR\" },\n    { name: \"British Indian Ocean Territory\", code: \"IO\" },\n    { name: \"Brunei Darussalam\", code: \"BN\" },\n    { name: \"Bulgaria\", code: \"BG\" },\n    { name: \"Burkina Faso\", code: \"BF\" },\n    { name: \"Burundi\", code: \"BI\" },\n    { name: \"Cambodia\", code: \"KH\" },\n    { name: \"Cameroon\", code: \"CM\" },\n    { name: \"Canada\", code: \"CA\" },\n    { name: \"Cape Verde\", code: \"CV\" },\n    { name: \"Cayman Islands\", code: \"KY\" },\n    { name: \"Central African Republic\", code: \"CF\" },\n    { name: \"Chad\", code: \"TD\" },\n    { name: \"Chile\", code: \"CL\" },\n    { name: \"China\", code: \"CN\" },\n    { name: \"Christmas Island\", code: \"CX\" },\n    { name: \"Cocos (Keeling) Islands\", code: \"CC\" },\n    { name: \"Colombia\", code: \"CO\" },\n    { name: \"Comoros\", code: \"KM\" },\n    { name: \"Congo\", code: \"CG\" },\n    { name: \"Congo, The Democratic Republic of the\", code: \"CD\" },\n    { name: \"Cook Islands\", code: \"CK\" },\n    { name: \"Costa Rica\", code: \"CR\" },\n    { name: \"Cote D'Ivoire\", code: \"CI\" },\n    { name: \"Croatia\", code: \"HR\" },\n    { name: \"Cuba\", code: \"CU\" },\n    { name: \"Cyprus\", code: \"CY\" },\n    { name: \"Czech Republic\", code: \"CZ\" },\n    { name: \"Denmark\", code: \"DK\" },\n    { name: \"Djibouti\", code: \"DJ\" },\n    { name: \"Dominica\", code: \"DM\" },\n    { name: \"Dominican Republic\", code: \"DO\" },\n    { name: \"Ecuador\", code: \"EC\" },\n    { name: \"Egypt\", code: \"EG\" },\n    { name: \"El Salvador\", code: \"SV\" },\n    { name: \"Equatorial Guinea\", code: \"GQ\" },\n    { name: \"Eritrea\", code: \"ER\" },\n    { name: \"Estonia\", code: \"EE\" },\n    { name: \"Ethiopia\", code: \"ET\" },\n    { name: \"Falkland Islands (Malvinas)\", code: \"FK\" },\n    { name: \"Faroe Islands\", code: \"FO\" },\n    { name: \"Fiji\", code: \"FJ\" },\n    { name: \"Finland\", code: \"FI\" },\n    { name: \"France\", code: \"FR\" },\n    { name: \"French Guiana\", code: \"GF\" },\n    { name: \"French Polynesia\", code: \"PF\" },\n    { name: \"French Southern Territories\", code: \"TF\" },\n    { name: \"Gabon\", code: \"GA\" },\n    { name: \"Gambia\", code: \"GM\" },\n    { name: \"Georgia\", code: \"GE\" },\n    { name: \"Germany\", code: \"DE\" },\n    { name: \"Ghana\", code: \"GH\" },\n    { name: \"Gibraltar\", code: \"GI\" },\n    { name: \"Greece\", code: \"GR\" },\n    { name: \"Greenland\", code: \"GL\" },\n    { name: \"Grenada\", code: \"GD\" },\n    { name: \"Guadeloupe\", code: \"GP\" },\n    { name: \"Guam\", code: \"GU\" },\n    { name: \"Guatemala\", code: \"GT\" },\n    { name: \"Guernsey\", code: \"GG\" },\n    { name: \"Guinea\", code: \"GN\" },\n    { name: \"Guinea-Bissau\", code: \"GW\" },\n    { name: \"Guyana\", code: \"GY\" },\n    { name: \"Haiti\", code: \"HT\" },\n    { name: \"Heard Island and Mcdonald Islands\", code: \"HM\" },\n    { name: \"Holy See (Vatican City State)\", code: \"VA\" },\n    { name: \"Honduras\", code: \"HN\" },\n    { name: \"Hong Kong\", code: \"HK\" },\n    { name: \"Hungary\", code: \"HU\" },\n    { name: \"Iceland\", code: \"IS\" },\n    { name: \"India\", code: \"IN\" },\n    { name: \"Indonesia\", code: \"ID\" },\n    { name: \"Iran, Islamic Republic Of\", code: \"IR\" },\n    { name: \"Iraq\", code: \"IQ\" },\n    { name: \"Ireland\", code: \"IE\" },\n    { name: \"Isle of Man\", code: \"IM\" },\n    { name: \"Israel\", code: \"IL\" },\n    { name: \"Italy\", code: \"IT\" },\n    { name: \"Jamaica\", code: \"JM\" },\n    { name: \"Japan\", code: \"JP\" },\n    { name: \"Jersey\", code: \"JE\" },\n    { name: \"Jordan\", code: \"JO\" },\n    { name: \"Kazakhstan\", code: \"KZ\" },\n    { name: \"Kenya\", code: \"KE\" },\n    { name: \"Kiribati\", code: \"KI\" },\n    { name: \"Korea, Democratic People's Republic of\", code: \"KP\" },\n    { name: \"Korea, Republic of\", code: \"KR\" },\n    { name: \"Kuwait\", code: \"KW\" },\n    { name: \"Kyrgyzstan\", code: \"KG\" },\n    { name: \"Lao People's Democratic Republic\", code: \"LA\" },\n    { name: \"Latvia\", code: \"LV\" },\n    { name: \"Lebanon\", code: \"LB\" },\n    { name: \"Lesotho\", code: \"LS\" },\n    { name: \"Liberia\", code: \"LR\" },\n    { name: \"Libyan Arab Jamahiriya\", code: \"LY\" },\n    { name: \"Liechtenstein\", code: \"LI\" },\n    { name: \"Lithuania\", code: \"LT\" },\n    { name: \"Luxembourg\", code: \"LU\" },\n    { name: \"Macao\", code: \"MO\" },\n    { name: \"Macedonia, The Former Yugoslav Republic of\", code: \"MK\" },\n    { name: \"Madagascar\", code: \"MG\" },\n    { name: \"Malawi\", code: \"MW\" },\n    { name: \"Malaysia\", code: \"MY\" },\n    { name: \"Maldives\", code: \"MV\" },\n    { name: \"Mali\", code: \"ML\" },\n    { name: \"Malta\", code: \"MT\" },\n    { name: \"Marshall Islands\", code: \"MH\" },\n    { name: \"Martinique\", code: \"MQ\" },\n    { name: \"Mauritania\", code: \"MR\" },\n    { name: \"Mauritius\", code: \"MU\" },\n    { name: \"Mayotte\", code: \"YT\" },\n    { name: \"Mexico\", code: \"MX\" },\n    { name: \"Micronesia, Federated States of\", code: \"FM\" },\n    { name: \"Moldova, Republic of\", code: \"MD\" },\n    { name: \"Monaco\", code: \"MC\" },\n    { name: \"Mongolia\", code: \"MN\" },\n    { name: \"Montserrat\", code: \"MS\" },\n    { name: \"Morocco\", code: \"MA\" },\n    { name: \"Mozambique\", code: \"MZ\" },\n    { name: \"Myanmar\", code: \"MM\" },\n    { name: \"Namibia\", code: \"NA\" },\n    { name: \"Nauru\", code: \"NR\" },\n    { name: \"Nepal\", code: \"NP\" },\n    { name: \"Netherlands\", code: \"NL\" },\n    { name: \"Netherlands Antilles\", code: \"AN\" },\n    { name: \"New Caledonia\", code: \"NC\" },\n    { name: \"New Zealand\", code: \"NZ\" },\n    { name: \"Nicaragua\", code: \"NI\" },\n    { name: \"Niger\", code: \"NE\" },\n    { name: \"Nigeria\", code: \"NG\" },\n    { name: \"Niue\", code: \"NU\" },\n    { name: \"Norfolk Island\", code: \"NF\" },\n    { name: \"Northern Mariana Islands\", code: \"MP\" },\n    { name: \"Norway\", code: \"NO\" },\n    { name: \"Oman\", code: \"OM\" },\n    { name: \"Pakistan\", code: \"PK\" },\n    { name: \"Palau\", code: \"PW\" },\n    { name: \"Palestinian Territory, Occupied\", code: \"PS\" },\n    { name: \"Panama\", code: \"PA\" },\n    { name: \"Papua New Guinea\", code: \"PG\" },\n    { name: \"Paraguay\", code: \"PY\" },\n    { name: \"Peru\", code: \"PE\" },\n    { name: \"Philippines\", code: \"PH\" },\n    { name: \"Pitcairn\", code: \"PN\" },\n    { name: \"Poland\", code: \"PL\" },\n    { name: \"Portugal\", code: \"PT\" },\n    { name: \"Puerto Rico\", code: \"PR\" },\n    { name: \"Qatar\", code: \"QA\" },\n    { name: \"Reunion\", code: \"RE\" },\n    { name: \"Romania\", code: \"RO\" },\n    { name: \"Russian Federation\", code: \"RU\" },\n    { name: \"RWANDA\", code: \"RW\" },\n    { name: \"Saint Helena\", code: \"SH\" },\n    { name: \"Saint Kitts and Nevis\", code: \"KN\" },\n    { name: \"Saint Lucia\", code: \"LC\" },\n    { name: \"Saint Pierre and Miquelon\", code: \"PM\" },\n    { name: \"Saint Vincent and the Grenadines\", code: \"VC\" },\n    { name: \"Samoa\", code: \"WS\" },\n    { name: \"San Marino\", code: \"SM\" },\n    { name: \"Sao Tome and Principe\", code: \"ST\" },\n    { name: \"Saudi Arabia\", code: \"SA\" },\n    { name: \"Senegal\", code: \"SN\" },\n    { name: \"Serbia and Montenegro\", code: \"CS\" },\n    { name: \"Seychelles\", code: \"SC\" },\n    { name: \"Sierra Leone\", code: \"SL\" },\n    { name: \"Singapore\", code: \"SG\" },\n    { name: \"Slovakia\", code: \"SK\" },\n    { name: \"Slovenia\", code: \"SI\" },\n    { name: \"Solomon Islands\", code: \"SB\" },\n    { name: \"Somalia\", code: \"SO\" },\n    { name: \"South Africa\", code: \"ZA\" },\n    { name: \"South Georgia and the South Sandwich Islands\", code: \"GS\" },\n    { name: \"Spain\", code: \"ES\" },\n    { name: \"Sri Lanka\", code: \"LK\" },\n    { name: \"Sudan\", code: \"SD\" },\n    { name: \"Suriname\", code: \"SR\" },\n    { name: \"Svalbard and Jan Mayen\", code: \"SJ\" },\n    { name: \"Swaziland\", code: \"SZ\" },\n    { name: \"Sweden\", code: \"SE\" },\n    { name: \"Switzerland\", code: \"CH\" },\n    { name: \"Syrian Arab Republic\", code: \"SY\" },\n    { name: \"Taiwan, Province of China\", code: \"TW\" },\n    { name: \"Tajikistan\", code: \"TJ\" },\n    { name: \"Tanzania, United Republic of\", code: \"TZ\" },\n    { name: \"Thailand\", code: \"TH\" },\n    { name: \"Timor-Leste\", code: \"TL\" },\n    { name: \"Togo\", code: \"TG\" },\n    { name: \"Tokelau\", code: \"TK\" },\n    { name: \"Tonga\", code: \"TO\" },\n    { name: \"Trinidad and Tobago\", code: \"TT\" },\n    { name: \"Tunisia\", code: \"TN\" },\n    { name: \"Turkey\", code: \"TR\" },\n    { name: \"Turkmenistan\", code: \"TM\" },\n    { name: \"Turks and Caicos Islands\", code: \"TC\" },\n    { name: \"Tuvalu\", code: \"TV\" },\n    { name: \"Uganda\", code: \"UG\" },\n    { name: \"Ukraine\", code: \"UA\" },\n    { name: \"United Arab Emirates\", code: \"AE\" },\n    { name: \"United Kingdom\", code: \"GB\" },\n    { name: \"United States\", code: \"US\" },\n    { name: \"United States Minor Outlying Islands\", code: \"UM\" },\n    { name: \"Uruguay\", code: \"UY\" },\n    { name: \"Uzbekistan\", code: \"UZ\" },\n    { name: \"Vanuatu\", code: \"VU\" },\n    { name: \"Venezuela\", code: \"VE\" },\n    { name: \"Viet Nam\", code: \"VN\" },\n    { name: \"Virgin Islands, British\", code: \"VG\" },\n    { name: \"Virgin Islands, U.S.\", code: \"VI\" },\n    { name: \"Wallis and Futuna\", code: \"WF\" },\n    { name: \"Western Sahara\", code: \"EH\" },\n    { name: \"Yemen\", code: \"YE\" },\n    { name: \"Zambia\", code: \"ZM\" },\n    { name: \"Zimbabwe\", code: \"ZW\" },\n];\n\nexport { countryList };\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nimport axios from \"axios\";\n\n// import { TiTick } from \"react-icons/ti\";\n// import { ImCross } from \"react-icons/im\";\n\nimport { Button, FormFile, Card } from \"react-bootstrap\";\n\nimport AppContext from \"../../AppContext\";\n\nimport \"./submit-data-component.css\";\n\nclass ManageData extends Component {\n    //static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     currentProject: {},\n        //     jsonFile: {},\n        //     previousProjects: [],\n        // };\n\n        this.fileOnload = this.fileOnload.bind(this);\n    }\n\n    componentDidMount() {\n        //this.initialiseState();\n        console.log(this.context);\n        //console.log(navigator.onLine);\n    }\n    componentDidUpdate() {\n        //const newContext = _.cloneDeep(this.state.currentProject);\n        //this.context = newContext;\n        //console.log(this.context);\n    }\n\n    checkAllFieldsComplete = () => {\n        if (this.context.currentProject === undefined) {\n            this.context.currentProject = {};\n        }\n\n        if (\n            this.context.currentProject.agroEcoData !== undefined &&\n            this.context.currentProject.contextScores !== undefined &&\n            this.context.currentProject.location !== undefined &&\n            this.context.currentProject.pairWiseScores !== undefined &&\n            this.context.currentProject.participatoryMatrixScores !==\n                undefined &&\n            this.context.currentProject.projectInfo !== undefined &&\n            this.context.currentProject.results !== undefined\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    submitData = () => {\n        const dataToSubmit = _.cloneDeep(this.context.currentProject);\n        // console.log(dataToSubmit);\n        axios({\n            method: \"post\",\n            //url: \"http://localhost:5000/api/projects/submit-data/\",\n            url: \"https://l-gorman.com/api/projects/submit-data/\",\n            data: dataToSubmit,\n            headers: {\n                accept: \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n        })\n            .then((response) => {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    // retrieveProjects = () => {\n    //     axios({\n    //         method: \"get\",\n    //         url: \"https://l-gorman.com/api/projects/get-projects/\",\n    //         headers: {\n    //             accept: \"application/json\",\n    //         },\n    //     })\n    //         .then((response) => {\n    //             this.setState({\n    //                 previousProjects: response.data,\n    //             });\n    //             console.log(response);\n    //         })\n    //         .catch(function (error) {\n    //             console.log(error);\n    //         });\n    // };\n\n    downLoadData = () => {\n        let dataToDownload = _.cloneDeep(this.context.currentProject);\n\n        return (\n            <a\n                type=\"button\"\n                href={`data:text/json;charset=utf-8,${encodeURIComponent(\n                    JSON.stringify(dataToDownload)\n                )}`}\n                download=\"filename.json\"\n            >\n                <Button className=\"bg-light text-dark\" variant=\"outline-dark \">\n                    Save Progress\n                </Button>\n            </a>\n        );\n    };\n\n    uploadData = () => {\n        return (\n            // Good tutorial on file upload\n            <div>\n                {/* <input type=\"file\" name=\"file\" onChange={this.fileUploader} />\n                <div> */}\n                <FormFile\n                    className=\"button-primary\"\n                    onChange={this.fileUploadButton}\n                />\n                {/* </div> */}\n            </div>\n        );\n    };\n\n    fileOnload = (event) => {\n        // The file's text will be printed here\n        // console.log(JSON.parse(event.target.result));\n        const jsonFile = JSON.parse(event.target.result);\n        this.context.currentProject = {};\n        this.context.currentProject = _.cloneDeep(jsonFile);\n\n        console.log(this.context);\n        // this.setState(\n        //     { currentProject: jsonFile.currentProject },\n        //     //() => (this.context.currentProject = jsonFile.currentProject)\n        //     () => {\n        //         this.setState(\n        //             {\n        //                 currentProject: jsonFile.cur,\n        //             },\n        //             () => {\n        //                 this.setContext();\n        //             }\n        //         );\n        //     }\n        // );\n    };\n\n    fileUploadButton = (event) => {\n        //console.log(event.target.files[0]);\n        const file = event.target.files[0];\n        const reader = new FileReader();\n\n        reader.onload = this.fileOnload;\n        reader.readAsText(event.target.files[0]);\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>Manage Data</h1>\n                <div className=\"cards-container\">\n                    <Card className=\"card-style \">\n                        <Card.Header className=\"bg-dark text-white\">\n                            Save Project Progress\n                        </Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n                                This application allows you to save your\n                                progress as a JSON file. At any point, you can\n                                upload this file into the application to\n                                continue collecting/editing your data\n                            </Card.Text>\n                            {this.downLoadData()}\n                        </Card.Body>\n                    </Card>\n                    <Card className=\"card-style\">\n                        <Card.Header className=\"bg-dark text-white\">\n                            Load Project\n                        </Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n                                Here you can load in data from a previously\n                                saved project. This data must be stored as a\n                                JSON file.\n                            </Card.Text>\n                            <footer>\n                                <div className=\"upload-button\">\n                                    {this.uploadData()}\n                                </div>\n                            </footer>\n                        </Card.Body>\n                    </Card>\n\n                    <Card className=\"card-style\">\n                        <Card.Header className=\"bg-dark text-white\">\n                            Submit Data\n                        </Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n                                Submit your data in order for it to be processed\n                                into csv format. Follow this &nbsp;\n                                <a\n                                    href=\"https://l-gorman.com/LegumeCHOICE/\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    link\n                                </a>\n                                &nbsp; to access publicly available legume\n                                CHOICE projects. To find data from your own\n                                project, go to \"IndividualProjects\" and search\n                                for the folder which matches your project ID.{\" \"}\n                                <br />\n                                <br /> You cannot submit data unless data has\n                                been entered, project information has been\n                                entered, and results have been viewed.\n                            </Card.Text>\n                            {this.checkAllFieldsComplete() ? (\n                                <Button\n                                    className=\"bg-light text-dark\"\n                                    variant=\"outline-dark \"\n                                    onClick={this.submitData}\n                                >\n                                    Submit\n                                </Button>\n                            ) : (\n                                <Button\n                                    className=\"bg-light text-dark\"\n                                    variant=\"outline-dark \"\n                                    onClick={this.submitData}\n                                    disabled={true}\n                                >\n                                    Project not yet complete\n                                </Button>\n                            )}\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        );\n    }\n}\nManageData.contextType = AppContext;\n\nexport default ManageData;\n","import React, { Component } from \"react\";\n\nimport { AiOutlineDatabase, AiFillHome, AiOutlineSend } from \"react-icons/ai\";\nimport { BsFolder } from \"react-icons/bs\";\nimport { IoIosInformationCircleOutline } from \"react-icons/io\";\nimport { RiUserSettingsLine } from \"react-icons/ri\";\nimport { VscAccount } from \"react-icons/vsc\";\nimport { FaLeaf, FaDatabase } from \"react-icons/fa\";\nimport { GoGraph, GoSettings } from \"react-icons/go\";\nimport Home from \"../home-component/home-component\";\nimport Admin from \"../admin-data-entry-component/admin-data-entry-component\";\nimport Login from \"../login-component/login-component\";\nimport DataEntry from \"../data-entry-component/data-entry-component\";\nimport Results from \"../results-component/results-component\";\nimport ViewContext from \"../view-context-component/view-context-component\";\nimport ProjectInformation from \"../project-information-component/project-information-component\";\nimport ManageData from \"../submit-data-component/submit-data-component\";\n//import Legumes from \"../legumes-component/legumes-component\";\n\n// Set the icon size for the imported icons\nconst iconSize = 30;\n\nconst sidebarlinkcName = \"sidebar-nav-link\";\n\nconst SidebarData = [\n    {\n        title: \"Information\",\n        routeKey: \"information-route\",\n        component: <Home />,\n        path: \"/info\",\n        icon: <IoIosInformationCircleOutline size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n    {\n        title: \"Project Information\",\n        routeKey: \"project-info-route\",\n        component: <ProjectInformation />,\n        path: \"/project-info\",\n\n        icon: <GoSettings size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n    {\n        title: \"Data Entry\",\n        routeKey: \"data-entry-route\",\n        component: <DataEntry />,\n        path: \"/data-entry\",\n\n        icon: <AiOutlineDatabase size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n\n    {\n        title: \"Results\",\n        routeKey: \"results-route\",\n        component: <Results />,\n        path: \"/results\",\n\n        icon: <GoGraph size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n\n    // {\n    //     title: \"Admin\",\n    //     routeKey: \"admin-route\",\n    //     component: <Admin />,\n    //     path: \"/admin\",\n    //     icon: <RiUserSettingsLine size={iconSize} />,\n    //     cName: sidebarlinkcName,\n    // },\n    // {\n    //     title: \"Login\",\n    //     routeKey: \"login-route\",\n    //     component: <Login />,\n    //     path: \"/login\",\n    //     icon: <VscAccount size={iconSize} />,\n    //     cName: sidebarlinkcName,\n    // },\n    {\n        title: \"Manage Data\",\n        routeKey: \"manage-data-route\",\n        component: <ManageData />,\n        path: \"/manage-data\",\n        icon: <BsFolder size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n\n    // {\n    //     title: \"View App Data\",\n    //     routeKey: \"app-data-route\",\n    //     component: <ViewContext />,\n    //     path: \"/app-data\",\n    //     icon: <FaDatabase size={iconSize} />,\n    //     cName: sidebarlinkcName,\n    // },\n    // {\n    //     title: \"Specify Location\",\n    //     routeKey: \"location\",\n    //     component: <MapPolygon />,\n    //     path: \"/location\",\n    //     icon: <FiMapPin size={iconSize} />,\n    //     cName: sidebarlinkcName,\n    // },\n];\n\nexport default SidebarData;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { AiOutlineMenu, AiOutlineClose } from \"react-icons/ai\";\nimport { BsCheck } from \"react-icons/bs\";\nimport { TiTick, TiTimes } from \"react-icons/ti\";\nimport \"./sidebar-component.css\";\nimport SidebarData from \"./sidebar-data\";\n\nimport _ from \"lodash\";\nimport AppContext from \"../../AppContext\";\n\nclass Sidebar extends React.Component {\n    //static contextType = AppContext;\n    constructor(props) {\n        super(props);\n\n        // Setting the initial state to closed\n\n        this.state = {\n            sideBarOpen: false,\n            project: \"Not Yet Specified\",\n            dataEntryComplete: false,\n            projectInformationComplete: false,\n            resultsComplete: false,\n        };\n    }\n\n    componentDidMount() {}\n\n    componentDidUpdate() {}\n\n    initialiseContext() {\n        let newProject = \"Not Yet Specified\";\n        console.log(this.context);\n        if (this.context.currentProject === undefined) {\n            this.context.currentProject = {};\n        }\n        if (this.context.currentProject.projectInfo !== undefined) {\n            newProject = _.cloneDeep(\n                this.context.currentProject.projectInfo.projectName\n            );\n        }\n\n        let projectInfoState = false;\n        if (this.context.currentProject.projectInfo !== undefined) {\n            projectInfoState = true;\n        }\n        let dataEntryState = false;\n        if (\n            this.context.currentProject.contextScores !== undefined &&\n            this.context.currentProject.agroEcoData !== undefined &&\n            this.context.currentProject.pairWiseScores !== undefined &&\n            this.context.currentProject.participatoryMatrixScores !== undefined\n        ) {\n            dataEntryState = true;\n        }\n        let resultsState = false;\n        if (this.context.currentProject.results !== undefined) {\n            resultsState = true;\n        }\n\n        this.setState({\n            project: newProject,\n            dataEntryComplete: dataEntryState,\n            projectInformationComplete: projectInfoState,\n            resultsComplete: resultsState,\n        });\n    }\n\n    // When this function is trigered, state of the side-bar is change, which triggers a change in the css\n    toggleSidebar = () => {\n        this.setState(\n            {\n                sideBarOpen: !this.state.sideBarOpen,\n            },\n            () => this.initialiseContext()\n        );\n    };\n\n    returnTopBarInformation = () => {\n        return (\n            <div className=\"top-bar-items\">\n                <p className=\"top-bar-text\">Project: {this.state.project}</p>\n                <p className=\"top-bar-text\">\n                    Data Entry:{\" \"}\n                    {this.state.dataEntryComplete ? (\n                        <BsCheck size={40} />\n                    ) : (\n                        <AiOutlineClose size={40} />\n                    )}\n                </p>\n                <p className=\"top-bar-text\">\n                    Project Information:{\" \"}\n                    {this.state.projectInformationComplete ? (\n                        <BsCheck size={40} />\n                    ) : (\n                        <AiOutlineClose size={40} />\n                    )}\n                </p>\n                <p className=\"top-bar-text\">\n                    Results:{\" \"}\n                    {this.state.resultsComplete ? (\n                        <BsCheck size={40} />\n                    ) : (\n                        <AiOutlineClose size={40} />\n                    )}\n                </p>\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <div className=\"container_row\">\n                <div className=\"top-bar\">\n                    <a onClick={this.toggleSidebar}>\n                        <AiOutlineMenu size={50} color=\"white\" />\n                    </a>\n                    {this.returnTopBarInformation()}\n                </div>\n\n                <div\n                    className={\n                        this.state.sideBarOpen\n                            ? \"sidebar-container active\"\n                            : \"sidebar-container\"\n                    }\n                >\n                    <div\n                        key=\"sidebar-header \"\n                        className=\"sidebar-header-container\"\n                    >\n                        <h2>LegumeCHOICE</h2>\n\n                        <a onClick={this.toggleSidebar}>\n                            <div className=\"close-menu-icon\">\n                                <IoIosArrowBack size={40} color=\"white\" />\n                            </div>\n                        </a>\n                    </div>\n\n                    <div className=\"link-container\">\n                        <ul>\n                            {SidebarData.map((item, index) => {\n                                return (\n                                    <Link\n                                        key={index + \"-link-item\"}\n                                        className={item.cName}\n                                        to={item.path}\n                                        onClick={this.toggleSidebar}\n                                    >\n                                        <div className=\"sidebar-list-item\">\n                                            <li\n                                                className=\"sidebar-list-item\"\n                                                key={index + \"-list-item\"}\n                                            >\n                                                <span className=\"side-bar-link-icon\">\n                                                    {item.icon}\n                                                </span>\n                                                <span className=\"side-bar-link-text\">\n                                                    {item.title}\n                                                </span>\n                                            </li>\n                                        </div>\n                                    </Link>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nSidebar.contextType = AppContext;\n\nexport default Sidebar;\n","import React from \"react\";\n\nimport {\n    //BrowserRouter as Router,\n    HashRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\n\nimport Sidebar from \"./components/sidebar-component/sidebar-component\";\n\n// In this location, we have all of the details of each of the individual components\nimport SidebarData from \"./components/sidebar-component/sidebar-data\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AppContext from \"./AppContext\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        //this.state = AppContext;\n    }\n\n    componentDidMount() {\n        //this.setState({ currentProject: {} });\n    }\n\n    render() {\n        {\n            /*basename={process.env.PUBLIC_URL + \"/\"}*/\n        }\n        return (\n            <Router>\n                <div>\n                    <AppContext.Provider value={{}}>\n                        <Sidebar />\n                        <div className=\"outer-page-container\">\n                            <div className=\"inner-page-container\">\n                                <Switch>\n                                    {/* Context provider specifies which components should have access to the context */}\n                                    {SidebarData.map((item) => {\n                                        // Return Each of the components and their specified routes\n                                        return (\n                                            <Route\n                                                exact\n                                                path={item.path}\n                                                key={item.routeKey}\n                                            >\n                                                {item.component}\n                                            </Route>\n                                        );\n                                    })}\n                                    <Redirect exact from=\"/\" to=\"/info\" />\n                                </Switch>\n                            </div>\n                        </div>\n                    </AppContext.Provider>\n                </div>\n            </Router>\n        );\n    }\n}\n\nApp.contextType = AppContext;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}