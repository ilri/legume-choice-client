{"version":3,"sources":["components/home-component/home-component-markdown.md","components/home-component/home-component.js","components/admin-data-entry-component/admin-data-entry-component.js","AppContext.js","components/login-component/login-component.js","components/data-entry-component/data-entry-data.js","components/agro-ecological-filter-component/agro-ecological-data.js","components/agro-ecological-filter-component/agro-ecological-filter.js","components/context-scores-component/context-scores-data.js","components/context-scores-component/context-scores-component.js","components/participatory-matrix-scoring-component/participatory-matrix-data.js","components/participatory-matrix-scoring-component/participatory-matrix-scoring.js","components/pairwise-ranking-component/pairwise-ranking-data.js","components/pairwise-ranking-component/pairwise-ranking-component.js","components/data-entry-component/data-entry-component.js","components/results-component/results-data.js","components/legumes-component/legume-information-clean.js","components/legumes-component/legume-data.js","components/results-component/results-component.js","components/view-context-component/view-context-component.js","components/sidebar-component/sidebar-data.js","components/sidebar-component/sidebar-component.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Home","props","state","file","markdownFile","markdown","axios","get","this","then","response","setState","data","children","Component","Admin","addUserlocal","event","preventDefault","prevUsers","usersLocal","newUser","formEntry","username","some","user","alert","email","handleChange","name","target","value","prevState","deleteUser","params","oldUsers","filter","subsetArrays","array","variable","map","item","saveChanges","usersToAdd","usersToDelete","usersOnline","localusers","includes","length","method","url","newUsers","headers","accept","console","log","catch","error","deleteUsers","userForm","className","Form","onSubmit","Group","controlId","Label","Control","type","onChange","Button","variant","index","onClick","e","id","_id","bind","AppContext","createContext","Login","context","authenticateUser","authenticated","projectID","password","undefined","newState","newContext","React","contextType","legfunc","label","typologies","participants","attributes","biofilters","minValue","maxValue","AgroEcoData","_","cloneDeep","AgroEco","tableHeader","renderDefaultValue","tableBody","biofilter","FormControl","bioFiltersArray","forEach","biofilterSubset","biofilterIndex","parseFloat","agroEcoData","Table","striped","bordered","hover","ContextScoreData","scores","attributesIndex","push","scoreType","attribute","score","participantIndex","typologyIndex","participant","typology","ContextScore","parseInt","scoresArray","changeIndividualScores","changeAverages","arr","query","element","average","averageAttribute","attributetoAverage","reduce","accumulator","currentValue","renderRowAverage","toFixed","contextRow","rowAttribute","rowTypology","rowParticipant","as","allRows","key","rowSpan","colSpan","contextScores","newSelections","JSON","parse","stringify","func","MatrixData","farmerAttributes","farmers","legumeFunctions","blankFarmer","number","gender","selections","total","summary","scoreTypes","scoresIndividual","legumefunction","legumeFunction","ParticipatoryMatrix","addFarmer","farmersArray","newfarmertoAdd","updateTotal","updateFarmerSummary","farmEntryFields","scoringInput","farmerNameInput","farmerDetailsSelectInput","farmer","updateFarmerName","defaultValue","updateFarmerScore","updateFarmerDetailesSelect","whichFarmer","farmerIndex","legumefuncs","whichValue","funct","funcIndex","newScore","selection","tableRows","calculateAttributeRank","individualScore","firstScore","secondScore","numberOfScores","numberOfOccurences","i","occurences","conversion","rank","updateTypologyScore","scoresByLegumeFunction","individualScores","mapThroughFarmers","summaryscore","summaryScoreIndex","totalScoreTemp","farmerSelection","selectionIndex","resultsTable","scoreTypeIndex","participatoryMatrixScores","scoreSum","relevantFarmers","farmerSelectionIndex","toLowerCase","PairwiseRankingData","male","pairwiseSelection","totals","female","averages","previousidentifiers","outerArrayIndex","function1","innerArrayIndex","function2","intermediateidentifier","sort","identifier","join","funct1","funct2","PairwiseRanking","updateSelections","selectedValue","selectionArr","selectionItem","pairfemalewiseSelection","upDateTotalScore","totalsArray","totalsItem","totalsIndex","updateAverage","totalsArrayMale","totalsArrayFemale","newAverages","newAverage","pairWiseTable","itemIndex","pairWiseResultsTable","pairWiseScores","DataEntry","renderComponents","components","component","functionFitForm","legfuncCopy","contextFitForm","attributesCopy","legumeResultsToAdd","functionFit","contextFit","agroEcoFit","overallFit","overallRank","legfunction","agroEcoCopy","agroecofiltter","agroEcoFilter","biofiltersCopy","biofiltersCleaned","resultsData","agroEcoFilters","agroEcoFitSummary","functionFitSummary","contextFitSummary","emptyScoresForLegume","legumes","formFilled","allLegumes","food","feed","income","fuel","land","labour","seed","water","markets","rainfall","min","max","temp","alt","soilpH","legumeTypes","sources","legume","legumesData","Results","initialiseResults","newLegumes","slice","newLegume","results","contextData","newContextAverages","newcontextscore","contextscore","pairWiseData","participatoryMatrixData","newFunctionAverages","newfunction","pairwisescoreaverages","pairwisescore","matrixscore","calculateLegumeScores","legumeContextScores","legumecontext","formcontext","scoreToReturn","legumeFunctionScores","formfunction","legumeAgroEcoScores","legumeMin","legumeMax","formvalue","newLegumeState","legumeContextScore","contextAttribute","functionAttribute","legumeAgroEco","agroEcoSummary","agroecoscoreAccumulator","agroecoscore","contextAccumulator","contextScore","functionAccumulator","functionScore","firstLegume","valuesEncountered","secondLegume","checkFormFilled","returnResultsForSummaryTable","renderLegumeResults","agroEcoItem","contextItem","functionItem","renderBody","ViewContext","iconSize","sidebarlinkcName","SidebarData","title","routeKey","path","icon","size","cName","Sidebar","toggleSidebar","sideBarOpen","color","to","App","Provider","exact","from","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3692b728.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home-component-markdown.0579c1b4.md\";","import React, { Component } from \"react\";\nimport \"./home-component.css\";\nimport axios from \"axios\";\nimport ReactMarkdown from \"react-markdown\";\nimport markdownFile from \"./home-component-markdown.md\";\n\nclass Home extends Component {\n    // Initialising state for the component\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            file: markdownFile,\n            markdown: \"\",\n        };\n    }\n\n    // Importing markdown when the file is loaded\n    componentDidMount() {\n        axios.get(this.state.file).then((response) => {\n            this.setState({\n                markdown: response.data,\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <ReactMarkdown children={this.state.markdown}></ReactMarkdown>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\n\nimport \"./admin-data-entry-component.css\";\n\nclass Admin extends Component {\n    /////////////////////////////////////////////////////////////////////////////////\n    // Initialising variables\n    /////////////////////////////////////////////////////////////////////////////////\n    constructor(props) {\n        super(props);\n        //console.log(\"Constructor\");\n        this.state = {\n            usersLocal: [],\n            usersOnline: [],\n\n            formEntry: {\n                username: \"\",\n                email: \"\",\n            },\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.addUserlocal = this.addUserlocal.bind(this);\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Loaded when the page loads. Fetches entries from the database\n    /////////////////////////////////////////////////////////////////////////////////\n    componentDidMount() {\n        axios({\n            method: \"get\",\n            url: \"https://l-gorman.com/api/users\",\n            headers: {\n                accept: \"application/json\",\n            },\n        })\n            .then((response) => {\n                this.setState({\n                    usersLocal: response.data,\n                    usersOnline: response.data,\n                });\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Function for adding user\n    /////////////////////////////////////////////////////////////////////////////////\n    addUserlocal = (event) => {\n        event.preventDefault();\n        //console.log(\"About to update state\");\n        const prevUsers = this.state.usersLocal;\n        const newUser = this.state.formEntry;\n\n        // Checking if the username exists already\n        if (newUser.username === \"\") {\n            alert(\"No username entered\");\n            return;\n        }\n        if (prevUsers.some((user) => user.username === newUser.username)) {\n            alert(\"Username already exists\");\n            return;\n        }\n\n        // Checking if the email exists already\n        if (prevUsers.some((user) => user.email === newUser.email)) {\n            alert(\"email already registered\");\n            return;\n        }\n\n        // Updating state\n        this.setState({\n            usersLocal: [...prevUsers, newUser],\n            formEntry: {\n                username: \"\",\n                email: \"\",\n            },\n        });\n    };\n\n    handleChange = (event) => {\n        event.preventDefault();\n        const name = [event.target.name];\n        const value = event.target.value;\n        this.setState((prevState) => ({\n            formEntry: {\n                ...prevState.formEntry,\n                [name]: value,\n            },\n        }));\n    };\n    /////////////////////////////////////////////////////////////////////////////////\n    // Function for deleting user\n    /////////////////////////////////////////////////////////////////////////////////\n    deleteUser = (event, params = {}) => {\n        event.preventDefault();\n\n        const oldUsers = this.state.usersLocal;\n        const newUser = oldUsers.filter(\n            (user) =>\n                user.email !== params.email || user.username !== params.username\n        );\n        //console.log(newUser);\n\n        this.setState((prevState) => ({\n            usersLocal: newUser,\n        }));\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Subset Arrays\n    /////////////////////////////////////////////////////////////////////////////////\n\n    subsetArrays = (array, variable) => {\n        return array.map((item) => {\n            return item[variable];\n        });\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Making Changes to Db\n    /////////////////////////////////////////////////////////////////////////////////\n    saveChanges = (event) => {\n        //event.preventDefault();\n\n        const usersLocal = this.state.usersLocal;\n        const usersOnline = this.state.usersOnline;\n\n        //console.log(this.subsetArrays(usersOnline, \"email\"));\n        let usersToAdd = [];\n        let usersToDelete = [];\n\n        usersToAdd = usersLocal.filter(\n            (localusers) =>\n                !this.subsetArrays(usersOnline, \"email\").includes(\n                    localusers.email\n                ) &&\n                !this.subsetArrays(usersOnline, \"username\").includes(\n                    localusers.username\n                )\n        );\n\n        usersToDelete = usersOnline.filter(\n            (localusers) =>\n                !this.subsetArrays(usersLocal, \"email\").includes(\n                    localusers.email\n                ) &&\n                !this.subsetArrays(usersLocal, \"username\").includes(\n                    localusers.username\n                )\n        );\n\n        //console.log(usersToDelete);\n\n        //console.log(usersToDelete);\n\n        if (usersToAdd.length > 0) {\n            axios({\n                method: \"post\",\n                url: \"https://l-gorman.com/api/users/insertmany/\",\n                data: { newUsers: usersToAdd },\n                headers: {\n                    accept: \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                },\n            })\n                .then((response) => {\n                    console.log(response);\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        }\n\n        if (usersToDelete.length > 0) {\n            axios({\n                method: \"post\",\n                url: \"https://l-gorman.com/api/users/deletemany/\",\n                data: { deleteUsers: usersToDelete },\n                headers: {\n                    accept: \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                },\n            })\n                .then((response) => {\n                    console.log(response);\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        }\n\n        this.setState(() => ({\n            usersOnline: usersLocal,\n        }));\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Checking if the component has updated\n    /////////////////////////////////////////////////////////////////////////////////\n    componentDidUpdate() {\n        console.log(this.state);\n    }\n\n    userForm = () => {\n        return (\n            <>\n                <div className=\"form-container\">\n                    <h2>New Users</h2>\n                    <Form onSubmit={this.addUserlocal}>\n                        <Form.Group controlId=\"basicusername\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control\n                                name=\"username\"\n                                type=\"text\"\n                                onChange={this.handleChange}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"basicemail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                name=\"email\"\n                                type=\"email\"\n                                onChange={this.handleChange}\n                            />\n                        </Form.Group>\n\n                        <Button\n                            className=\"delete-button\"\n                            variant=\"primary\"\n                            type=\"submit\"\n                        >\n                            Add User\n                        </Button>\n                    </Form>\n                </div>\n                <div className=\"form-container\">\n                    <h2>Users</h2>\n                    {this.state.usersLocal.map((user, index) => {\n                        return (\n                            <div\n                                className=\"user-container\"\n                                key={\"user \" + user.email + \" \" + user.username}\n                            >\n                                {index + 1}. {user.username} ({user.email})\n                                <div className=\"deleteButton\">\n                                    <Button\n                                        onClick={(e) =>\n                                            this.deleteUser(e, {\n                                                id: user._id,\n                                                username: user.username,\n                                                email: user.email,\n                                            })\n                                        }\n                                    >\n                                        Delete User\n                                    </Button>\n                                </div>\n                            </div>\n                        );\n                    })}\n                    <div className=\"user-container\">\n                        <Button\n                            onClick={this.saveChanges}\n                            className=\"deleteButton\"\n                        >\n                            Submit\n                        </Button>\n                    </div>\n                </div>\n            </>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>Admin component</h1>\n                <this.userForm />\n            </div>\n        );\n    }\n}\n\nexport default Admin;\n","import React, { createContext } from \"react\";\n\n// Skeleton of the app data\n/*\n    user: {},\n    agroEcoData: {},\n    contextScores: {},\n    pairWiseScores: {},\n    participatoryMatrixScores: {},\n    results: {},\n*/\n\n// Creating the app context to be used with the react contextapi\nconst AppContext = createContext();\n\nexport default AppContext;\n","import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nimport AppContext from \"../../AppContext\";\n\nimport \"./login-component.css\";\n\nclass Login extends React.Component {\n    // Initialising context\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            projectID: \"\",\n            password: \"\",\n            authenticated: false,\n        };\n    }\n\n    componentDidMount() {\n        if (this.context.user !== undefined) {\n            const newState = this.context.user;\n            this.setState(newState);\n        }\n    }\n    componentDidUpdate() {\n        const newContext = this.state;\n        this.context.user = newContext;\n        console.log(this.context);\n    }\n\n    handleChange = (event, props) => {\n        this.setState({\n            [props.variable]: event.target.value,\n        });\n\n        this.context.user = this.state;\n    };\n\n    authenticateUser = (event) => {\n        event.preventDefault();\n        this.setState({\n            authenticated: true,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"form-container\">\n                <h1>Project Information</h1>\n                <Form>\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        value={this.state.username}\n                        onChange={(event) =>\n                            this.handleChange(event, { variable: \"username\" })\n                        }\n                    />\n                    <Form.Label>Project ID</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        value={this.state.projectID}\n                        onChange={(event) =>\n                            this.handleChange(event, { variable: \"projectID\" })\n                        }\n                    />\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        value={this.state.password}\n                        onChange={(event) =>\n                            this.handleChange(event, { variable: \"password\" })\n                        }\n                    />\n\n                    <Button\n                        className=\"submitButton\"\n                        type=\"submit\"\n                        onClick={this.authenticateUser}\n                    >\n                        Authenticate\n                    </Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","export const legfunc = [\n    {\n        name: \"Food\",\n        label: \"food\",\n    },\n    {\n        name: \"Feed\",\n        label: \"feed\",\n    },\n    {\n        name: \"Income\",\n        label: \"income\",\n    },\n    {\n        name: \"Erosion Control\",\n        label: \"erosion-control\",\n    },\n    {\n        name: \"Fuel\",\n        label: \"fuel\",\n    },\n    {\n        name: \"Soil Fertility\",\n        label: \"soil-fertility\",\n    },\n];\n\nexport const typologies = [\n    {\n        name: \"Low\",\n        label: \"low\",\n    },\n    {\n        name: \"Medium\",\n        label: \"med\",\n    },\n    {\n        name: \"High\",\n        label: \"high\",\n    },\n];\n\nexport const participants = [\n    {\n        name: \"Farmer\",\n        label: \"farmer\",\n    },\n    {\n        name: \"Expert\",\n        label: \"expert\",\n    },\n];\n\nexport const attributes = [\n    {\n        name: \"Land\",\n        label: \"land\",\n    },\n    {\n        name: \"Labour\",\n        label: \"labour\",\n    },\n    {\n        name: \"Seed\",\n        label: \"seed\",\n    },\n    {\n        name: \"Inputs and services\",\n        label: \"inp-serv\",\n    },\n    {\n        name: \"Knowledge and skills\",\n        label: \"knowl-skill\",\n    },\n    {\n        name: \"Water\",\n        label: \"water\",\n    },\n    {\n        name: \"Markets\",\n        label: \"markets\",\n    },\n];\n\nexport const biofilters = [\n    {\n        name: \"Rainfall (mm/year)\",\n        label: \"rainfall\",\n        minValue: 280,\n        maxValue: 4290,\n        value: (280 + 4290) / 2,\n    },\n    {\n        name: \"Temperature (mean °C/month)\",\n        label: \"temp\",\n        minValue: 0,\n        maxValue: 45,\n        value: 45 / 2,\n    },\n\n    {\n        name: \"Altitude (average masl)\",\n        label: \"alt\",\n        minValue: 0,\n        maxValue: 3800,\n        value: 3800 / 2,\n    },\n\n    {\n        name: \"Soil pH (average)\",\n        label: \"soilpH\",\n        minValue: 4,\n        maxValue: 9,\n        value: (4 + 9) / 2,\n    },\n];\n","import { biofilters } from \"../data-entry-component/data-entry-data\";\nimport _ from \"lodash\";\n\nconst biofiltersCopy = _.cloneDeep(biofilters);\nconst AgroEcoData = {\n    biofilters: biofiltersCopy,\n};\n\nexport { AgroEcoData };\n","// Component to render the \"agro-ecological-filter\" for data entry\n// This component allows users to specify the context for their study\n\nimport React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport _ from \"lodash\";\nimport { AgroEcoData } from \"./agro-ecological-data\";\n\nimport \"./agro-ecological-filter.css\";\n\nimport AppContext from \"../../AppContext\";\n\nclass AgroEco extends React.Component {\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = _.cloneDeep(AgroEcoData);\n    }\n\n    componentDidMount() {\n        if (this.context.agroEcoData !== undefined) {\n            const newState = this.context.agroEcoData;\n            this.setState(newState);\n        } else {\n            const newContext = this.state;\n            this.context.agroEcoData = newContext;\n        }\n    }\n\n    componentDidUpdate() {\n        const newContext = this.state;\n        this.context.agroEcoData = newContext;\n        console.log(this.context.agroEcoData);\n    }\n    tableHeader = () => {\n        return (\n            <thead>\n                <tr>\n                    <th>Biofilters</th>\n                    <th>Site Values</th>\n                </tr>\n            </thead>\n        );\n    };\n\n    renderDefaultValue = (props) => {\n        return props.value;\n    };\n    tableBody = () => {\n        return (\n            <tbody>\n                {this.state.biofilters.map((biofilter, index) => {\n                    return (\n                        <tr key={\"agro-eco-table\" + biofilter.label}>\n                            <td>{biofilter.name}</td>\n                            <td>\n                                <FormControl\n                                    type=\"number\"\n                                    value={this.renderDefaultValue({\n                                        value: biofilter.value,\n                                    })}\n                                    onChange={(event) => {\n                                        this.handleChange(event, {\n                                            biofilter: biofilter,\n                                        });\n                                    }}\n                                />\n                            </td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        );\n    };\n\n    handleChange = (event, props) => {\n        const bioFiltersArray = this.state.biofilters;\n\n        // if (\n        //     event.target.value < biofilter.minValue ||\n        //     event.target.value > biofilter.maxValue\n        // ) {\n        //     alert(\"Outside of range\");\n        //     return;\n        // }\n\n        bioFiltersArray.forEach((biofilterSubset, biofilterIndex) => {\n            if (biofilterSubset.label === props.biofilter.label) {\n                bioFiltersArray[biofilterIndex].value = parseFloat(\n                    event.target.value\n                );\n            }\n        });\n\n        this.setState({\n            biofilters: bioFiltersArray,\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Agroecological Filter</h2>\n\n                <div className=\"table-container\">\n                    <Form>\n                        <Table striped bordered hover>\n                            {this.tableHeader()}\n\n                            {this.tableBody()}\n                        </Table>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AgroEco;\n","/* Creating all of the possible combinations for context scores \n Could be done in a better way with a series of map functions, or some sort of recursive for loop\nThis is the quickest/best way I could come up with*/\n\nimport {\n    typologies,\n    participants,\n    attributes,\n} from \"../data-entry-component/data-entry-data\";\n\nconst ContextScoreData = {\n    attributes: attributes,\n    participants: participants,\n    typologies: typologies,\n    scores: [],\n};\n\nfor (\n    let attributesIndex = 0;\n    attributesIndex < attributes.length;\n    attributesIndex++\n) {\n    // Giving room to add average scores for each attribute\n    ContextScoreData.scores.push({\n        scoreType: \"average\",\n        attribute: attributes[attributesIndex],\n        score: 0,\n    });\n\n    for (\n        let participantIndex = 0;\n        participantIndex < participants.length;\n        participantIndex++\n    ) {\n        for (\n            let typologyIndex = 0;\n            typologyIndex < typologies.length;\n            typologyIndex++\n        ) {\n            // Giving room to add individual scores for each entry\n            ContextScoreData.scores.push({\n                scoreType: \"individual\",\n                attribute: attributes[attributesIndex],\n                participant: participants[participantIndex],\n                typology: typologies[typologyIndex],\n                score: 0,\n            });\n        }\n    }\n}\n\nexport { ContextScoreData };\n","import React from \"react\";\nimport { ContextScoreData } from \"./context-scores-data\";\n\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport _ from \"lodash\";\n\nimport \"./context-scores-component.css\";\n\nimport AppContext from \"../../AppContext\";\n\nclass ContextScore extends React.Component {\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = _.cloneDeep(ContextScoreData);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.changeIndividualScores = this.changeIndividualScores.bind(this);\n        this.changeAverages = this.changeAverages.bind(this);\n        this.averageAttribute = this.averageAttribute.bind(this);\n        this.renderRowAverage = this.renderRowAverage.bind(this);\n        this.renderDefaultValue = this.renderDefaultValue.bind(this);\n        this.contextRow = this.contextRow.bind(this);\n        this.allRows = this.allRows.bind(this);\n        this.tableHeader = this.tableHeader.bind(this);\n    }\n\n    componentDidMount() {\n        //console.log(\"Component did mount!\");\n\n        if (this.context.contextScores !== undefined) {\n            const newState = this.context.contextScores;\n            this.setState(newState);\n            // console.log(\"Set state with old context\");\n        } else {\n            const newContext = this.state;\n            this.context.contextScores = newContext;\n            // console.log(\"Set context with new state\");\n        }\n    }\n\n    componentDidUpdate() {\n        const newContext = this.state;\n        this.context.contextScores = newContext;\n\n        //console.log(this.context);\n\n        console.log(this.state);\n    }\n\n    handleChange = (event, props) => {\n        props.score = parseInt(event.target.value); // Ensuring that the entered value is an integer\n        const scoresArray = this.state.scores;\n\n        this.changeIndividualScores(scoresArray, props);\n        this.changeAverages(scoresArray, props);\n\n        this.setState({\n            scores: scoresArray,\n        });\n    };\n\n    // Change individual scores in an array through filtering\n    changeIndividualScores = (arr, query) => {\n        arr.forEach((element, index) => {\n            if (\n                element.participant === query.participant &&\n                element.attribute === query.attribute &&\n                element.typology === query.typology\n            ) {\n                arr[index].score = query.score;\n            }\n        });\n    };\n\n    changeAverages = (arr) => {\n        arr.forEach((element, index) => {\n            if (element.scoreType === \"average\") {\n                let average = this.averageAttribute(arr, element.attribute);\n                arr[index].score = average;\n            }\n        });\n    };\n\n    // Update Averages after we see a score change\n    averageAttribute = (arr, attributetoAverage) => {\n        //axisToAverage.forEach((element, index) => {});\n        const scores = [];\n        arr.forEach((element, index) => {\n            if (\n                element.attribute === attributetoAverage &&\n                element.scoreType === \"individual\"\n            ) {\n                scores.push(arr[index].score);\n            }\n        });\n\n        const total = scores.reduce(\n            (accumulator, currentValue) => accumulator + currentValue,\n            0\n        );\n        const average = total / scores.length;\n        return average;\n    };\n\n    renderRowAverage = (props) => {\n        return (\n            <td>\n                {this.averageAttribute(\n                    this.state.scores,\n                    props.attribute\n                ).toFixed(2)}\n            </td>\n        );\n    };\n\n    // Ensuring that the correct values are preselected in the table\n    renderDefaultValue = (props) => {\n        {\n            const valueToReturn = this.state.scores.filter((element, index) => {\n                if (\n                    element.scoreType === \"individual\" &&\n                    element.attribute === props.attribute &&\n                    element.participant === props.participant &&\n                    element.typology === props.typology\n                ) {\n                    return true;\n                }\n            });\n\n            return valueToReturn[0].score;\n        }\n    };\n\n    // A function for generating a row in the input table\n    contextRow = (props) => {\n        const rowAttribute = props.attribute;\n        //console.log(\"---------------Row--------------------\");\n\n        return (\n            <tr>\n                {/* Mapping across the different attributes to return a form to enter score (0-4).\n                e.g \n                - Typology-low-> Farmer -> Land score\n                - Typology-high -> Expert -> Seed score*/}\n                <td>{rowAttribute.name}</td>\n                {this.state.typologies.map((rowTypology) => {\n                    return this.state.participants.map((rowParticipant) => {\n                        // console.log(\n                        //     \"||\" +\n                        //         rowTypology.name +\n                        //         \"||\" +\n                        //         rowParticipant.name +\n                        //         \"||\" +\n                        //         rowAttribute.name\n                        // );\n\n                        return (\n                            <td\n                                key={\n                                    \"table-entry-\" +\n                                    rowTypology.name +\n                                    \"-\" +\n                                    rowParticipant.name +\n                                    \"-\" +\n                                    rowAttribute.name\n                                }\n                            >\n                                <FormControl\n                                    as=\"select\"\n                                    key={props.key}\n                                    value={this.renderDefaultValue({\n                                        typology: rowTypology,\n                                        participant: rowParticipant,\n                                        attribute: rowAttribute,\n                                    })}\n                                    onChange={(event) =>\n                                        this.handleChange(\n                                            event,\n                                            (props = {\n                                                typology: rowTypology,\n                                                participant: rowParticipant,\n                                                attribute: rowAttribute,\n                                            })\n                                        )\n                                    }\n                                    key={\n                                        \"form-control-\" +\n                                        rowTypology.name +\n                                        \"-\" +\n                                        rowParticipant.name +\n                                        \"-\" +\n                                        rowAttribute.name\n                                    }\n                                >\n                                    {[0, 1, 2, 3, 4].map((score) => {\n                                        return (\n                                            <option\n                                                key={\n                                                    \"form-option-\" +\n                                                    rowTypology.name +\n                                                    \"-\" +\n                                                    rowParticipant.name +\n                                                    \"-\" +\n                                                    rowAttribute.name +\n                                                    \"-\" +\n                                                    score\n                                                }\n                                            >\n                                                {score}\n                                            </option>\n                                        );\n                                    })}\n                                </FormControl>\n                            </td>\n                        );\n                    });\n                })}\n                {this.renderRowAverage({ attribute: rowAttribute })}\n            </tr>\n        );\n    };\n\n    // Using the contextRow and map functions to generate all of the rows in the table\n    allRows = () => {\n        if (this.state !== null) {\n            // console.log(\"rendering all rows\");\n            return this.state.attributes.map((attribute) => {\n                return this.contextRow({\n                    attribute: attribute,\n                    key: \"context-row-\" + attribute.name,\n                });\n            });\n        } else {\n            return <h1>Null State</h1>;\n        }\n    };\n\n    // Creating the header for the table. This is a split header which accounts for typologies and participants\n    tableHeader = () => {\n        if (this.state !== null) {\n            // console.log(\"Header rendering\");\n            return (\n                <thead>\n                    {/* Adding The typology Headers */}\n                    <tr>\n                        <th rowSpan=\"2\"></th>\n                        {this.state.typologies.map((typology) => {\n                            return (\n                                <th\n                                    key={\"typology-header\" + typology.name}\n                                    colSpan=\"2\"\n                                >\n                                    Typology - {typology.name}\n                                </th>\n                            );\n                        })}\n                        {/* Adding The Average Score Headers */}\n\n                        <th key=\"average-header\" rowSpan=\"2\">\n                            Mean Score (0-4)\n                        </th>\n                    </tr>\n                    {/* Adding The Participant Headers */}\n                    <tr key=\"participant-header-row\">\n                        {this.state.typologies.map((typology) => {\n                            return this.state.participants.map(\n                                (participant) => {\n                                    return (\n                                        <th\n                                            key={\n                                                \"participant-header\" +\n                                                participant.name\n                                            }\n                                        >\n                                            {participant.name}\n                                        </th>\n                                    );\n                                }\n                            );\n                        })}\n                    </tr>\n                </thead>\n            );\n        } else {\n            return <h1>Null State</h1>;\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Context Scoring</h2>\n                <Form>\n                    <Table striped bordered hover>\n                        {this.tableHeader()}\n                        <tbody>{this.allRows()}</tbody>\n                    </Table>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default ContextScore;\n","import { typologies, legfunc } from \"../data-entry-component/data-entry-data\";\n\nconst newSelections = JSON.parse(JSON.stringify(legfunc));\nnewSelections.forEach((func, index) => {\n    if ([0, 1].includes(index)) {\n        func.score = 4;\n    }\n    if ([2, 3, 4, 5].includes(index)) {\n        func.score = 3;\n    }\n});\nconst newFarmer = {\n    // Setting initial values\n    number: 0,\n    name: \"Jane Bloggs\",\n    gender: \"Female\",\n    typology: \"Medium\",\n    selections: newSelections,\n    total: 0,\n};\n\nconst MatrixData = {\n    farmerAttributes: [\n        {\n            name: \"Number\",\n            label: \"number\",\n        },\n        {\n            name: \"Name\",\n            label: \"name\",\n        },\n        {\n            name: \"Gender\",\n            label: \"gender\",\n        },\n        {\n            name: \"Typology\",\n            label: \"typology\",\n        },\n        {\n            name: \"Matrix Selections\",\n            label: \"selections\",\n        },\n        {\n            name: \"Total\",\n            label: \"total\",\n        },\n    ],\n    farmers: [],\n    legumeFunctions: legfunc,\n    blankFarmer: newFarmer,\n    typology: typologies,\n    gender: [\n        {\n            name: \"Male\",\n            label: \"male\",\n        },\n        {\n            name: \"Female\",\n            label: \"female\",\n        },\n    ],\n    summary: {\n        scoreTypes: [],\n        scoresIndividual: [],\n    },\n};\n\nlegfunc.forEach((legumefunction) => {\n    MatrixData.summary.scoresIndividual.push({\n        legumeFunction: legumefunction,\n        scores: [\n            {\n                name: \"Total\",\n                label: \"total\",\n                score: 0,\n            },\n            {\n                name: \"Score (0-5)\",\n                label: \"score\",\n                score: 0,\n            },\n            {\n                name: \"Average Rank\",\n                label: \"rank\",\n                score: 0,\n            },\n        ],\n    });\n});\n\nlegfunc.forEach((legumefunction, index) => {\n    MatrixData.gender.map((gender) => {\n        MatrixData.summary.scoresIndividual[index].scores.push({\n            name: gender.name + \" (0-5)\",\n            label: gender.label,\n            type: \"gender\",\n            score: 0,\n        });\n    });\n    MatrixData.typology.map((typology) => {\n        MatrixData.summary.scoresIndividual[index].scores.push({\n            name: typology.name + \" (0-5)\",\n            label: typology.name,\n            type: \"typology\",\n            score: 0,\n        });\n    });\n});\n\nMatrixData.summary.scoreTypes = MatrixData.summary.scoresIndividual[0].scores;\n\nexport { MatrixData };\n","import React from \"react\";\nimport _ from \"lodash\";\n\nimport \"./participatory-matrix-scoring.css\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { MatrixData } from \"./participatory-matrix-data\";\n\nimport AppContext from \"../../AppContext\";\n\nclass ParticipatoryMatrix extends React.Component {\n    static contextType = AppContext;\n    constructor(props) {\n        super(props);\n        this.state = _.cloneDeep(MatrixData);\n\n        this.addFarmer = this.addFarmer.bind(this);\n        this.farmEntryFields = this.farmEntryFields.bind(this);\n        this.farmerNameInput = this.farmerNameInput.bind(this);\n        this.scoringInput = this.scoringInput.bind(this);\n        this.farmerDetailsSelectInput = this.farmerDetailsSelectInput.bind(\n            this\n        );\n        this.updateFarmerScore = this.updateFarmerScore.bind(this);\n        this.updateTotal = this.updateTotal.bind(this);\n        this.updateFarmerName = this.updateFarmerName.bind(this);\n        this.updateFarmerDetailesSelect = this.updateFarmerDetailesSelect.bind(\n            this\n        );\n        this.tableHeader = this.tableHeader.bind(this);\n        this.tableRows = this.tableRows.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.context.participatoryMatrixScores !== undefined) {\n            const newState = this.context.participatoryMatrixScores;\n            this.setState(newState);\n        } else {\n            const newContext = this.state;\n            this.context.participatoryMatrixScores = newContext;\n        }\n        //console.log(this.state);\n        //this.addFarmer();\n    }\n\n    componentDidUpdate() {\n        const newContext = this.state;\n        this.context.participatoryMatrixScores = newContext;\n\n        //console.log(this.state);\n    }\n\n    addFarmer = () => {\n        //This is so important to make sure that we are creating a clean copy\n        //Deep cloning\n        let farmersArray = _.cloneDeep(this.state.farmers);\n        let number = farmersArray.length + 1;\n\n        let newfarmertoAdd = _.cloneDeep(this.state.blankFarmer);\n        newfarmertoAdd.number = number;\n\n        farmersArray.push(newfarmertoAdd);\n\n        this.setState(\n            {\n                farmers: farmersArray,\n            },\n            () => {\n                this.updateTotal();\n                this.updateFarmerSummary();\n            }\n        );\n    };\n\n    farmEntryFields = (props) => {\n        //console.log(props);\n\n        if (props.attribute.label === \"selections\") {\n            return this.scoringInput(props);\n        } else {\n            if (props.attribute.label === \"name\") {\n                return this.farmerNameInput(props);\n            } else {\n                return this.farmerDetailsSelectInput(props);\n            }\n        }\n    };\n\n    farmerNameInput = (props) => {\n        return (\n            <td>\n                <FormControl\n                    value={props.farmer.name}\n                    type=\"text\"\n                    onChange={(event) => this.updateFarmerName(event, props)}\n                />\n            </td>\n        );\n    };\n\n    scoringInput = (props) => {\n        return (\n            <td>\n                <FormControl\n                    defaultValue={props.legumeFunctions.score}\n                    type=\"number\"\n                    onChange={(event) => this.updateFarmerScore(event, props)}\n                />\n            </td>\n        );\n    };\n\n    farmerDetailsSelectInput = (props) => {\n        return (\n            <td>\n                <FormControl\n                    as=\"select\"\n                    defaultValue={props.farmer[props.attribute.label]}\n                    onChange={(event) =>\n                        this.updateFarmerDetailesSelect(event, props)\n                    }\n                >\n                    {this.state[props.attribute.label].map((attribute) => {\n                        return (\n                            <option\n                                key={\n                                    \"form-option-\" +\n                                    props.attribute.label +\n                                    \"-\" +\n                                    props.farmer.number +\n                                    \"-\" +\n                                    attribute.label\n                                }\n                            >\n                                {attribute.name}\n                            </option>\n                        );\n                    })}\n                </FormControl>\n            </td>\n        );\n    };\n\n    updateFarmerScore = (event, props) => {\n        let farmersArray = [...this.state.farmers];\n\n        //console.log(farmersArray);\n        //console.log(props);\n        // Finding which farmer to subset\n        let whichFarmer = \"\";\n        farmersArray.forEach((farmer, farmerIndex) => {\n            if (farmer.number === props.farmer.number) {\n                whichFarmer = farmerIndex;\n            }\n        });\n\n        let legumefuncs = this.state.legumeFunctions;\n        let whichValue = \"\";\n        // Finding which value to update\n        legumefuncs.forEach((funct, funcIndex) => {\n            if (funct.label === props.legumeFunctions.label) {\n                whichValue = funcIndex;\n            }\n        });\n\n        let newScore = { ...farmersArray[whichFarmer].selections[whichValue] };\n        newScore.score = parseInt(event.target.value);\n        farmersArray[whichFarmer].selections[whichValue] = newScore;\n        this.setState({\n            farmers: farmersArray,\n        });\n\n        this.updateTotal();\n        this.updateFarmerSummary();\n    };\n\n    updateTotal = () => {\n        const farmers = this.state.farmers;\n\n        farmers.map((farmer) => {\n            farmer.total = 0;\n\n            farmer.selections.map((selection) => {\n                farmer.total += selection.score;\n            });\n        });\n\n        this.setState({\n            farmers: farmers,\n        });\n    };\n\n    updateFarmerName = (event, props) => {\n        let farmersArray = [...this.state.farmers];\n\n        farmersArray.forEach((farmer, farmerIndex) => {\n            if (farmer.number === props.farmer.number) {\n                farmersArray[farmerIndex].name = event.target.value;\n            }\n        });\n        this.setState({ farmers: farmersArray });\n    };\n\n    updateFarmerDetailesSelect = (event, props) => {\n        let farmersArray = [...this.state.farmers]; // making a shallow copy\n        farmersArray.forEach((farmer, farmerIndex) => {\n            if (farmer.number === props.farmer.number) {\n                farmersArray[farmerIndex][props.attribute.label] =\n                    event.target.value;\n            }\n        });\n        this.setState({ farmers: farmersArray });\n        this.updateFarmerSummary();\n    };\n\n    tableHeader = () => {\n        if (this.state !== null) {\n            return (\n                <thead>\n                    <tr>\n                        <th rowSpan=\"2\">Farmer Number</th>\n                        <th rowSpan=\"2\">Farmer Name</th>\n                        <th rowSpan=\"2\">Gender</th>\n                        <th rowSpan=\"2\">Typology</th>\n                        <th rowSpan=\"1\" colSpan=\"6\">\n                            Functions\n                        </th>\n                        <th rowSpan=\"2\">Total</th>\n                    </tr>\n                    <tr>\n                        {this.state.legumeFunctions.map((funct) => {\n                            return (\n                                <th\n                                    key={\n                                        \"participatory-matrix-head-\" +\n                                        funct.label\n                                    }\n                                >\n                                    {funct.name}\n                                </th>\n                            );\n                        })}\n                    </tr>\n                </thead>\n            );\n        } else {\n            return <h1>Null State</h1>;\n        }\n    };\n\n    tableRows = () => {\n        if (this.state !== null) {\n            return this.state.farmers.map((farmer) => {\n                return (\n                    <tr key={\"participatory-matrix-body-\" + farmer.number}>\n                        {this.state.farmerAttributes.map((attribute) => {\n                            // Returning a value for each of the potential selections\n                            if (attribute.label === \"selections\") {\n                                return farmer.selections.map((selection) => {\n                                    return this.farmEntryFields({\n                                        key:\n                                            \"participatory-matrix-body-\" +\n                                            farmer.number +\n                                            selection.label,\n                                        attribute: attribute,\n                                        farmer: farmer,\n                                        legumeFunctions: selection,\n                                        farmer: farmer,\n                                    });\n                                });\n\n                                // Return the farmers number for the row number\n                            } else if (attribute.label === \"number\") {\n                                return (\n                                    <td\n                                        key={\n                                            \"select-input\" +\n                                            farmer.number +\n                                            \"-\" +\n                                            attribute.label\n                                        }\n                                    >\n                                        {farmer.number}\n                                    </td>\n                                );\n                                // Return the total score for that particular farmer\n                            } else if (attribute.label === \"total\") {\n                                return (\n                                    <td\n                                        key={\n                                            \"select-input\" +\n                                            farmer.number +\n                                            \"-\" +\n                                            attribute.label\n                                        }\n                                    >\n                                        {farmer.total}\n                                    </td>\n                                );\n                            } else {\n                                return this.farmEntryFields({\n                                    key:\n                                        \"farmEntry-field-\" +\n                                        attribute.label +\n                                        \"-\" +\n                                        farmer.number,\n                                    attribute: attribute,\n                                    farmer: farmer,\n                                });\n                            }\n                        })}\n                    </tr>\n                );\n            });\n        } else {\n            return <h1>Null State</h1>;\n        }\n    };\n\n    calculateAttributeRank = () => {\n        const scoresIndividual = _.cloneDeep(\n            this.state.summary.scoresIndividual\n        );\n\n        // Initialise the ranks\n        scoresIndividual.forEach((individualScore) => {\n            // Setting rank to zero\n            individualScore.scores[2].score = 1;\n        });\n\n        // Actually ranking the scores (draws included)\n        scoresIndividual.forEach((firstScore) => {\n            scoresIndividual.forEach((secondScore) => {\n                if (firstScore.scores[1].score > secondScore.scores[1].score) {\n                    firstScore.scores[2].score = firstScore.scores[2].score;\n                }\n                if (firstScore.scores[1].score < secondScore.scores[1].score) {\n                    firstScore.scores[2].score += 1;\n                }\n            });\n        });\n\n        // Averaging the ranks based on number of ties\n        const numberOfScores = this.state.legumeFunctions.length;\n        const numberOfOccurences = [];\n        for (let i = 0; i < numberOfScores; i++) {\n            numberOfOccurences[i] = {\n                number: i + 1,\n                occurences: 0,\n                conversion: i + 1,\n            };\n        }\n\n        // Finding out how to convert to ranking average\n        scoresIndividual.forEach((firstScore) => {\n            numberOfOccurences.forEach((rank) => {\n                if (firstScore.scores[2].score == rank.number) {\n                    rank.occurences += 1;\n                    rank.conversion =\n                        (rank.occurences + 2 * rank.number - 1) / 2;\n                }\n            });\n        });\n\n        //applying ranking average conversion\n        scoresIndividual.forEach((firstScore) => {\n            numberOfOccurences.forEach((rank) => {\n                if (firstScore.scores[2].score == rank.number) {\n                    firstScore.scores[2].score = rank.conversion;\n                }\n            });\n        });\n\n        this.setState((prevState) => {\n            return {\n                ...prevState,\n                summary: {\n                    ...prevState.summary,\n                    scoresIndividual: scoresIndividual,\n                },\n            };\n        });\n    };\n\n    // Return a score from the farmer if they match the correct criteria\n    mapThroughFarmers(props) {\n        const farmers = _.cloneDeep(this.state.farmers);\n\n        let scoreSum = 0;\n        let relevantFarmers = 0;\n\n        farmers.map((farmer, farmerIndex) => {\n            farmer.selections.map((farmerSelection, farmerSelectionIndex) => {\n                // If the farmer has the correct gender\n                // If the farmer is selecting the correct attribute\n                // return Score\n                // else\n                // return 0\n\n                if (props.variable === \"typology\") {\n                    if (\n                        props.typology.toLowerCase() ===\n                            farmer.typology.toLowerCase() &&\n                        props.selection.label === farmerSelection.label\n                    ) {\n                        relevantFarmers += 1;\n                        scoreSum += parseFloat(\n                            (farmerSelection.score * 5) / 20\n                        );\n                    }\n                }\n                if (props.variable === \"gender\") {\n                    if (\n                        props.gender.toLowerCase() ===\n                            farmer.gender.toLowerCase() &&\n                        props.selection.label === farmerSelection.label\n                    ) {\n                        relevantFarmers += 1;\n                        scoreSum += parseFloat(\n                            (farmerSelection.score * 5) / 20\n                        );\n                    }\n                }\n            });\n        });\n\n        if (relevantFarmers > 0) {\n            return parseFloat(scoreSum / relevantFarmers).toFixed(2);\n        }\n\n        return parseFloat(scoreSum).toFixed(2);\n    }\n\n    // updateGenderScore = () => {\n    //     const summary = _.cloneDeep(this.state.summary.scoresIndividual);\n\n    //     summary.map((scoresByLegumeFunction) => {\n    //         scoresByLegumeFunction.scores.map((individualScores) => {\n    //             if (individualScores.type === \"gender\") {\n    //                 individualScores.score = this.mapThroughFarmers({\n    //                     variable: \"gender\",\n    //                     gender: individualScores.label,\n    //                     selection: scoresByLegumeFunction.legumeFunction,\n    //                 });\n    //             }\n    //         });\n    //     });\n\n    //     this.setState((prevState) => {\n    //         return {\n    //             ...prevState,\n    //             summary: {\n    //                 ...prevState.summary,\n    //                 scoresIndividual: summary,\n    //             },\n    //         };\n    //     });\n    // };\n\n    updateTypologyScore = () => {\n        const summary = _.cloneDeep(this.state.summary.scoresIndividual);\n\n        summary.map((scoresByLegumeFunction) => {\n            scoresByLegumeFunction.scores.map((individualScores) => {\n                if (individualScores.type === \"typology\") {\n                    individualScores.score = this.mapThroughFarmers({\n                        variable: \"typology\",\n                        typology: individualScores.label,\n                        selection: scoresByLegumeFunction.legumeFunction,\n                    });\n                }\n                if (individualScores.type === \"gender\") {\n                    individualScores.score = this.mapThroughFarmers({\n                        variable: \"gender\",\n                        gender: individualScores.label,\n                        selection: scoresByLegumeFunction.legumeFunction,\n                    });\n                }\n            });\n        });\n\n        this.setState(\n            (prevState) => {\n                return {\n                    ...prevState,\n                    summary: {\n                        ...prevState.summary,\n                        scoresIndividual: summary,\n                    },\n                };\n            },\n            () => {\n                this.calculateAttributeRank();\n            }\n        );\n    };\n\n    updateFarmerSummary = () => {\n        const summary = _.cloneDeep(this.state.summary.scoresIndividual);\n        const farmers = _.cloneDeep(this.state.farmers);\n        // Update total score per attribute\n        summary.forEach((summaryscore, summaryScoreIndex) => {\n            summary[summaryScoreIndex].scores[0].score = 0;\n            let totalScoreTemp = _.cloneDeep(\n                summary[summaryScoreIndex].scores[0].score\n            );\n            farmers.forEach((farmer) => {\n                farmer.selections.forEach((farmerSelection, selectionIndex) => {\n                    if (\n                        farmerSelection.label ==\n                        summaryscore.legumeFunction.label\n                    ) {\n                        // Setting total score\n\n                        totalScoreTemp +=\n                            farmerSelection.score / farmers.length;\n\n                        summary[summaryScoreIndex].scores[0].score = parseFloat(\n                            parseFloat(totalScoreTemp).toFixed(2)\n                        );\n                        // Setting 0-5 score\n                        summary[summaryScoreIndex].scores[1].score = parseFloat(\n                            parseFloat((totalScoreTemp * 5) / 20).toFixed(2)\n                        );\n                    }\n                });\n            });\n        });\n\n        this.setState(\n            (prevState) => {\n                return {\n                    ...prevState,\n                    summary: {\n                        ...prevState.summary,\n                        scoresIndividual: summary,\n                    },\n                };\n            },\n            () => {\n                //this.updateGenderScore();\n                this.updateTypologyScore();\n            }\n        );\n    };\n\n    resultsTable = () => {\n        return (\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th rowSpan=\"2\">Summary Type</th>\n                        <th\n                            rowSpan=\"1\"\n                            colSpan={this.state.legumeFunctions.length}\n                        >\n                            Function\n                        </th>\n                    </tr>\n\n                    <tr>\n                        {this.state.legumeFunctions.map((funct) => {\n                            return (\n                                <th\n                                    key={\n                                        \"participatory-matrix-head-\" +\n                                        funct.label\n                                    }\n                                >\n                                    {funct.name}\n                                </th>\n                            );\n                        })}\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {this.state.summary.scoreTypes.map(\n                        (type, scoreTypeIndex) => {\n                            return (\n                                <tr>\n                                    <td>{type.name}</td>\n                                    {this.state.summary.scoresIndividual.map(\n                                        (individualScore) => {\n                                            return (\n                                                <td>\n                                                    {\n                                                        individualScore.scores[\n                                                            scoreTypeIndex\n                                                        ].score\n                                                    }\n                                                </td>\n                                            );\n                                        }\n                                    )}\n                                </tr>\n                            );\n                        }\n                    )}\n                </tbody>\n            </Table>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Participatory Matrix Scoring</h2>\n                <p>\n                    Complete participatory matrix scoring exercise. Each\n                    individual has 20 beans which they can distribute across\n                    legume functions. Use the \"Add Farmer\" button to add as many\n                    farmers as you need for the exercises. These scores are\n                    averaged and automatically transcribed into Legume Option\n                    Scores.\n                </p>\n                <Form>\n                    <Table striped bordered hover>\n                        {this.tableHeader()}\n                        <tbody>{this.tableRows()}</tbody>\n                    </Table>\n                    <Button className=\"float-right\" onClick={this.addFarmer}>\n                        Add Farmer\n                    </Button>\n                </Form>\n\n                {this.resultsTable()}\n            </div>\n        );\n    }\n}\n\nexport default ParticipatoryMatrix;\n","import { legfunc } from \"../data-entry-component/data-entry-data\";\n\nlet PairwiseRankingData = {\n    legumeFunctions: legfunc,\n    male: {\n        pairwiseSelection: [],\n        totals: [],\n    },\n    female: {\n        pairwiseSelection: [],\n        totals: [],\n    },\n    averages: [],\n};\n\n// Creating all of the potential pairwise functions for each of the entries\nlet previousidentifiers = [];\nfor (\n    let outerArrayIndex = 0;\n    outerArrayIndex < PairwiseRankingData.legumeFunctions.length;\n    outerArrayIndex++\n) {\n    let function1 = PairwiseRankingData.legumeFunctions[outerArrayIndex];\n\n    PairwiseRankingData.male.totals.push({\n        attribute: function1,\n        value: 0,\n    });\n\n    PairwiseRankingData.female.totals.push({\n        attribute: function1,\n        value: 0,\n    });\n\n    PairwiseRankingData.averages.push({\n        attribute: function1,\n        value: 0,\n    });\n\n    for (\n        let innerArrayIndex = 0;\n        innerArrayIndex < PairwiseRankingData.legumeFunctions.length;\n        innerArrayIndex++\n    ) {\n        let function2 = PairwiseRankingData.legumeFunctions[innerArrayIndex];\n\n        // Checking if the pair is the same\n        if (function1 !== function2) {\n            let intermediateidentifier = [function1.label, function2.label];\n            intermediateidentifier.sort();\n            let identifier = intermediateidentifier.join(\"_\");\n\n            if (!previousidentifiers.includes(identifier)) {\n                PairwiseRankingData.male.pairwiseSelection.push({\n                    funct1: function1,\n                    funct2: function2,\n                    identifier: identifier,\n                    value: function1,\n                });\n\n                PairwiseRankingData.female.pairwiseSelection.push({\n                    funct1: function1,\n                    funct2: function2,\n                    identifier: identifier,\n                    value: function1,\n                });\n                previousidentifiers.push(identifier);\n            }\n        }\n    }\n}\nexport default PairwiseRankingData;\n","import React, { Component } from \"react\";\nimport PairwiseRankingData from \"./pairwise-ranking-data\";\n\nimport \"./pairwise-ranking-component.css\";\n\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport AppContext from \"../../AppContext\";\n\nclass PairwiseRanking extends Component {\n    static contextType = AppContext;\n    constructor(props) {\n        super(props);\n\n        this.state = PairwiseRankingData;\n    }\n\n    componentDidMount() {\n        //console.log(this.state);\n\n        if (this.context.pairWiseScores !== undefined) {\n            const newState = this.context.pairWiseScores;\n            this.setState(newState);\n        } else {\n            const newContext = this.state;\n            this.context.pairWiseScores = newContext;\n        }\n        this.upDateTotalScore(\"male\");\n        this.upDateTotalScore(\"female\");\n    }\n    componentDidUpdate() {\n        const newContext = this.state;\n        this.context.pairWiseScores = newContext;\n        console.log(this.state);\n    }\n\n    updateSelections = (event, props) => {\n        if (event.target.value == \"\") {\n            alert(\"Must not select empty value\");\n            return;\n        }\n        // Converting legume function name into legume function item\n        let selectedValue = \"\";\n\n        if (event.target.value === props.funct1.name) {\n            selectedValue = props.funct1;\n        }\n        if (event.target.value === props.funct2.name) {\n            selectedValue = props.funct2;\n        }\n\n        let selectionArr = this.state[props.gender].pairwiseSelection;\n        selectionArr.forEach((selectionItem, selectionIndex) => {\n            if (\n                selectionItem.funct1 === props.funct1 &&\n                selectionItem.funct2 === props.funct2\n            ) {\n                selectionArr[selectionIndex].value = selectedValue;\n                //console.log(selectionArr);\n            }\n        });\n\n        const gender = props.gender;\n        this.setState((prevState) => ({\n            [gender]: {\n                ...prevState[gender],\n                pairfemalewiseSelection: selectionArr,\n            },\n        }));\n\n        this.upDateTotalScore(gender);\n    };\n\n    upDateTotalScore = (gender) => {\n        const totalsArray = this.state[gender].totals;\n        totalsArray.forEach((totalsItem, totalsIndex) => {\n            totalsArray[totalsIndex].value = 0;\n            this.state[gender].pairwiseSelection.forEach((selectionItem) => {\n                if (selectionItem.value === totalsItem.attribute) {\n                    totalsArray[totalsIndex].value++;\n                }\n            });\n        });\n        this.setState((prevState) => ({\n            [gender]: {\n                ...prevState[gender],\n                totals: totalsArray,\n            },\n        }));\n\n        this.updateAverage();\n    };\n\n    updateAverage = () => {\n        const totalsArrayMale = this.state[\"male\"].totals;\n        const totalsArrayFemale = this.state[\"female\"].totals;\n\n        const newAverages = this.state.averages;\n\n        newAverages.map((average, index) => {\n            const newAverage =\n                (totalsArrayMale[index].value +\n                    totalsArrayFemale[index].value) /\n                2;\n            newAverages[index].value = newAverage;\n            this.setState({\n                averages: newAverages,\n            });\n        });\n    };\n\n    pairWiseTable = (props) => {\n        const tableGender = props.gender;\n        return (\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th>Pair</th>\n                        <th>Selection Female</th>\n                        <th>Selection Male</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state[props.gender].pairwiseSelection.map(\n                        (item, itemIndex) => {\n                            return (\n                                <tr\n                                    key={\n                                        \"pairwise-ranking-table-row\" +\n                                        item.funct1.name +\n                                        item.funct2.name\n                                    }\n                                >\n                                    <td\n                                        key={\n                                            \"pairwise-ranking-table-item-name\" +\n                                            item.funct1.name +\n                                            \"-\" +\n                                            item.funct2.name\n                                        }\n                                    >\n                                        {item.funct1.name +\n                                            \" vs \" +\n                                            item.funct2.name}\n                                    </td>\n                                    <td\n                                        key={\n                                            \"pairwise-ranking-table-item-form\" +\n                                            item.funct1.name +\n                                            \"-\" +\n                                            item.funct2.name +\n                                            \"-female\"\n                                        }\n                                    >\n                                        <FormControl\n                                            value={\n                                                this.state[\"female\"]\n                                                    .pairwiseSelection[\n                                                    itemIndex\n                                                ].value.name\n                                            }\n                                            key={\n                                                \"pairwise-ranking-table-form\" +\n                                                item.funct1.name +\n                                                \"-\" +\n                                                item.funct2.name +\n                                                \"-female\"\n                                            }\n                                            as=\"select\"\n                                            onChange={(\n                                                event,\n\n                                                props = {\n                                                    funct1: item.funct1,\n                                                    funct2: item.funct2,\n                                                    gender: \"female\",\n                                                }\n                                            ) =>\n                                                this.updateSelections(\n                                                    event,\n                                                    props\n                                                )\n                                            }\n                                        >\n                                            <option>{item.funct1.name}</option>\n                                            <option>{item.funct2.name}</option>\n                                        </FormControl>\n                                    </td>\n                                    <td\n                                        key={\n                                            \"pairwise-ranking-table-item-form\" +\n                                            item.funct1.name +\n                                            \"-\" +\n                                            item.funct2.name +\n                                            \"-male\"\n                                        }\n                                    >\n                                        <FormControl\n                                            as=\"select\"\n                                            value={\n                                                this.state[\"male\"]\n                                                    .pairwiseSelection[\n                                                    itemIndex\n                                                ].value.name\n                                            }\n                                            key={\n                                                \"pairwise-ranking-table-form\" +\n                                                item.funct1.name +\n                                                \"-\" +\n                                                item.funct2.name +\n                                                \"-male\"\n                                            }\n                                            onChange={(\n                                                event,\n\n                                                props = {\n                                                    funct1: item.funct1,\n                                                    funct2: item.funct2,\n                                                    gender: \"male\",\n                                                }\n                                            ) =>\n                                                this.updateSelections(\n                                                    event,\n                                                    props\n                                                )\n                                            }\n                                        >\n                                            <option>{item.funct1.name}</option>\n                                            <option>{item.funct2.name}</option>\n                                        </FormControl>\n                                    </td>\n                                </tr>\n                            );\n                        }\n                    )}\n                </tbody>\n            </Table>\n        );\n    };\n\n    pairWiseResultsTable = (props) => {\n        return (\n            <Table striped bordered hover className=\"table-style\">\n                <thead>\n                    <tr>\n                        <th>Attribute</th>\n                        <th>Count Female</th>\n                        <th>Count Male</th>\n                        <th>Average Count</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state.legumeFunctions.map((item, index) => {\n                        return (\n                            <tr key={\"pairwise-results-table-row-\" + item.name}>\n                                <td\n                                    key={\n                                        \"pairwise-results-table-row-item-\" +\n                                        item.name\n                                    }\n                                >\n                                    {item.name}\n                                </td>\n                                <td\n                                    key={\n                                        \"pairwise-results-table-row-item-female-\" +\n                                        item.name\n                                    }\n                                >\n                                    {this.state.female.totals[index].value}\n                                </td>\n                                <td\n                                    key={\n                                        \"pairwise-results-table-row-item-male-\" +\n                                        item.name\n                                    }\n                                >\n                                    {this.state.male.totals[index].value}\n                                </td>\n\n                                <td\n                                    key={\n                                        \"pairwise-results-table-row-item-average-\" +\n                                        item.name\n                                    }\n                                >\n                                    {this.state.averages[index].value}\n                                </td>\n                            </tr>\n                        );\n                    })}\n                    {/*this.state[props.gender].totals.map((item) => {\n                        return (\n                            <tr>\n                                <td>{item.attribute.name}</td>\n                                <td>{item.value}</td>\n                            </tr>\n                        );\n                    })*/}\n                </tbody>\n            </Table>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Pairwise Component Ranking</h2>\n                <p>\n                    Select the most important attribute out of the following\n                    pairs\n                </p>\n                <div className=\"table-container\">\n                    <Form className=\"table-container\">\n                        {this.pairWiseTable({ gender: \"female\" })}\n                    </Form>\n                    {this.pairWiseResultsTable({\n                        gender: \"female\",\n                        className: \"results-table-pairwise\",\n                    })}\n                </div>\n\n                <div className=\"table-container\"></div>\n            </div>\n        );\n    }\n}\nexport default PairwiseRanking;\n","import React from \"react\";\n\nimport \"./data-entry-component.css\";\n\nimport AgroEco from \"../agro-ecological-filter-component/agro-ecological-filter\";\nimport ContextScore from \"../context-scores-component/context-scores-component\";\nimport ParticipatoryMatrix from \"../participatory-matrix-scoring-component/participatory-matrix-scoring\";\nimport PairwiseRanking from \"../pairwise-ranking-component/pairwise-ranking-component\";\n\n// import Results from \"../results-component/results-component\";\n\nclass DataEntry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            components: [\n                <ContextScore key=\"contextScore\" />,\n                <PairwiseRanking key=\"pairwise\" />,\n                <ParticipatoryMatrix key=\"matrix\" />,\n                <AgroEco key=\"agroeco\" />,\n                //<Results key=\"results\" />,\n            ],\n        };\n    }\n\n    renderComponents = () => {};\n    render() {\n        return (\n            <div>\n                <h1>Data Entry</h1>\n                <div className=\"data-entry-container\">\n                    {this.state.components.map((component) => {\n                        return component;\n                    })}\n                    ;\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DataEntry;\n","import {\n    legfunc,\n    attributes,\n    biofilters,\n} from \"../data-entry-component/data-entry-data\";\nimport _ from \"lodash\";\n\n// data on all of the legumes initially\n\n// go through the legume functions, and average matrix score and pairwise ranking score\nconst functionFitForm = [];\nlet legfuncCopy = _.cloneDeep(legfunc);\nlegfuncCopy.forEach((legumefunction) => {\n    functionFitForm.push({\n        legumeFunction: legumefunction,\n        score: 0,\n    });\n});\n\n// simply pass through the context scores\nconst contextFitForm = [];\nlet attributesCopy = _.cloneDeep(attributes);\nattributesCopy.forEach((attribute) => {\n    contextFitForm.push({\n        attribute: attribute,\n        score: 0,\n    });\n});\n\n// Adding all of the attributes to the initial legumes\n// For each component we have to add an averageScore and an overall rank\n// For the final summary, we are only presenting the ranks\nlet legumeResultsToAdd = {\n    functionFit: [],\n    contextFit: [],\n    agroEcoFit: [],\n};\n\n// Adding legume function scores to each legume\nattributesCopy.map((attribute) => {\n    legumeResultsToAdd.contextFit.push({\n        attribute: attribute,\n        score: 0,\n    });\n});\nlegumeResultsToAdd.contextFit.push({\n    overallFit: 0,\n});\nlegumeResultsToAdd.contextFit.push({\n    overallRank: 1,\n});\n\n// Adding context scores to each legume\nlegfuncCopy.map((legfunction) => {\n    legumeResultsToAdd.functionFit.push({\n        legumeFunction: legfunction,\n        score: 0,\n    });\n});\nlegumeResultsToAdd.functionFit.push({\n    overallFit: 0,\n});\nlegumeResultsToAdd.functionFit.push({\n    overallRank: 1,\n});\n\n// Adding agroEco scores to each legume\nconst agroEcoCopy = _.cloneDeep(biofilters);\n\nagroEcoCopy.map((agroecofiltter) => {\n    legumeResultsToAdd.agroEcoFit.push({\n        agroEcoFilter: agroecofiltter,\n        score: 0,\n    });\n});\nlegumeResultsToAdd.agroEcoFit.push({\n    overallFit: 0,\n});\nlegumeResultsToAdd.agroEcoFit.push({\n    overallRank: 1,\n});\n\nconst agroEcoFilters = [];\n\nconst biofiltersCopy = _.cloneDeep(biofilters);\nconst biofiltersCleaned = [];\nbiofiltersCopy.map((biofilter) => {\n    biofiltersCleaned.push({\n        name: biofilter.name,\n        label: biofilter.label,\n    });\n});\n\n// Compiling all of the results data together\nconst resultsData = {\n    legumeFunctions: legfuncCopy,\n    attributes: attributes,\n    agroEcoFilters: biofiltersCleaned,\n    agroEcoFitSummary: agroEcoCopy,\n\n    functionFitSummary: functionFitForm,\n    contextFitSummary: contextFitForm,\n    emptyScoresForLegume: legumeResultsToAdd,\n    legumes: [],\n    formFilled: false,\n};\n\nexport { resultsData };\n","export const allLegumes = [\n    {\n        name: \"Pigeon pea (Cajanus cajan)\",\n        type: \"Grain legume perennial\",\n        food: 4,\n        feed: 2,\n        income: 3,\n        \"erosion-control\": 3,\n        fuel: 2,\n        \"soil-fertility\": 3,\n        land: 1,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 530.0, max: 4030.0 }],\n        temp: [{ min: 16.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 4.5, max: 8.0 }],\n    },\n    {\n        name:\n            \"Climbing beans (Phaseolus vulgaris), local types available in W Ethiopia, harvested several (4-5) years before reseeding)\",\n        type: \"Grain legume perennial\",\n        food: 4,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 1,\n        labour: 1,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 3,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 3000.0 }],\n        temp: [{ min: 6.0, max: 29.0 }],\n        alt: [{ min: 500.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name: \"Climbing beans (Phaseolus vulgaris) annual type\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 1,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 3,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 3000.0 }],\n        temp: [{ min: 6.0, max: 29.0 }],\n        alt: [{ min: 500.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name: \"Bush bean (Phaseolus vulgaris)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 1,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 1,\n        \"soil-fertility\": 1,\n        land: 2,\n        labour: 3,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 3,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 3000.0 }],\n        temp: [{ min: 6.0, max: 29.0 }],\n        alt: [{ min: 500.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name: \"Groundnuts (Arachis hypogaea L.)\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 3,\n        land: 4,\n        labour: 4,\n        seed: 1,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 2,\n        markets: 1,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 310.0, max: 3000.0 }],\n        temp: [{ min: 10.0, max: 45.0 }],\n        alt: [{ min: 0.0, max: 1600.0 }],\n        soilpH: [{ min: 4.0, max: 8.0 }],\n    },\n    {\n        name: \"Soybean grain type (Glycine max L.)\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 2,\n        land: 3,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 2,\n        markets: 4,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 700.0, max: 2000.0 }],\n        temp: [{ min: 10.0, max: 30.0 }],\n        alt: [{ min: 0.0, max: 1400.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name: \"Soybean/dual purpose grain plus fodder (Glycine max L.)\",\n        type: \"Grain legume seasonal\",\n        food: 2,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 3,\n        fuel: 1,\n        \"soil-fertility\": 4,\n        land: 3,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 2,\n        markets: 4,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 700.0, max: 2000.0 }],\n        temp: [{ min: 10.0, max: 30.0 }],\n        alt: [{ min: 0.0, max: 1400.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name: \"Faba bean (Vicia faba L.) \",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 300.0, max: 2090.0 }],\n        temp: [{ min: 6.0, max: 28.0 }],\n        alt: [{ min: 1800.0, max: 3200.0 }],\n        soilpH: [{ min: 4.5, max: 8.3 }],\n    },\n    {\n        name: \"Cowpea \\u2013 grain type (Vigna unguiculata)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 1,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 400.0, max: 2000.0 }],\n        temp: [{ min: 13.0, max: 28.0 }],\n        alt: [{ min: 0.0, max: 1500.0 }],\n        soilpH: [{ min: 4.3, max: 7.9 }],\n    },\n    {\n        name: \"Cowpea \\u2013 forage type (Vigna unguiculata)\",\n        type: \"Grain legume seasonal\",\n        food: 2,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 2,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 3,\n        seed: 3,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 400.0, max: 2000.0 }],\n        temp: [{ min: 13.0, max: 28.0 }],\n        alt: [{ min: 0.0, max: 1500.0 }],\n        soilpH: [{ min: 4.3, max: 7.9 }],\n    },\n    {\n        name: \"Bambara nut (Voandzou subterraneous)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 0,\n        income: 0,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 1,\n        labour: 1,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name:\n            \"Chickpea (Cicer arietinum L.) \\u2013 desi type (for food)- following the main crop\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 3,\n        seed: 1,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 1500.0 }],\n        temp: [{ min: 7.0, max: 28.0 }],\n        alt: [{ min: 1170.0, max: 1900.0 }],\n        soilpH: [{ min: 5.0, max: 8.3 }],\n    },\n    {\n        name:\n            \"Chickpea (Cicer arietinum L.) \\u2013 kabuli type (for export)-main crop\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 3,\n        labour: 3,\n        seed: 3,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 1500.0 }],\n        temp: [{ min: 7.0, max: 28.0 }],\n        alt: [{ min: 1170.0, max: 1900.0 }],\n        soilpH: [{ min: 5.0, max: 8.3 }],\n    },\n    {\n        name: \"Green grams/Mung bean (Vigna radiata)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 1,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 1,\n        land: 2,\n        labour: 3,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 1,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Lentils (Lens culinaris Medik.)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 3,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 280.0, max: 2430.0 }],\n        temp: [{ min: 6.0, max: 27.0 }],\n        alt: [{ min: 1000.0, max: 3800.0 }],\n        soilpH: [{ min: 4.5, max: 8.2 }],\n    },\n    {\n        name: \"Lupins \\u2013 Sweet lupin (new), traditional (Et)\",\n        type: \"Grain legume seasonal\",\n        food: 2,\n        feed: 1,\n        income: 3,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 4,\n        land: 1,\n        labour: 1,\n        seed: 2,\n        \"inp-serv\": 0,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 350.0, max: 1660.0 }],\n        temp: [{ min: 6.0, max: 26.0 }],\n        alt: [{ min: 1600.0, max: 3000.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name:\n            \"Field Pea (Pisum sativum L), adapted to high rainfall environment\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 3,\n        income: 4,\n        \"erosion-control\": 2,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 3,\n        labour: 2,\n        seed: 2,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 3,\n        markets: 1,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name:\n            \"Field pea (Pisum absynicum var. sativum)-adapted to low rainfall environment\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 3,\n        income: 3,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 2,\n        seed: 3,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Grass pea \\u2013 (Lathyrus spp)\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 1,\n        income: 3,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 320.0, max: 1360.0 }],\n        temp: [{ min: 5.0, max: 27.0 }],\n        alt: [{ min: 800.0, max: 3000.0 }],\n        soilpH: [{ min: 4.5, max: 8.3 }],\n    },\n    {\n        name: \"Cluster bean (Cyamopsis tetragonoloba L.)\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 1,\n        income: 3,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 380.0, max: 2410.0 }],\n        temp: [{ min: 12.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 1000.0 }],\n        soilpH: [{ min: 5.3, max: 8.3 }],\n    },\n    {\n        name: \"Dolichos lablab (Lablab purpureus)- for grain\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 4,\n        income: 3,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 2500.0 }],\n        temp: [{ min: 15.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2100.0 }],\n        soilpH: [{ min: 4.5, max: 7.8 }],\n    },\n    {\n        name: \"French beans (Phaseolus vulgaris)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 0,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 1,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 4,\n        \"knowl-skill\": 3,\n        water: 4,\n        markets: 4,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Desmodium silverleaf (Desmodium uncinatum)\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 3,\n        labour: 1,\n        seed: 3,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 750.0, max: 2400.0 }],\n        temp: [{ min: 3.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2500.0 }],\n        soilpH: [{ min: 6.5, max: 7.5 }],\n    },\n    {\n        name: \"Clover (Trifolium)\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 1,\n        \"erosion-control\": 2,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 1,\n        labour: 3,\n        seed: 3,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 3,\n        water: 3,\n        markets: 0,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Alfalfa/lucerne (Medicago sativa)\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 3,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 500.0, max: 2700.0 }],\n        temp: [{ min: 4.0, max: 27.0 }],\n        alt: [{ min: 300.0, max: 3000.0 }],\n        soilpH: [{ min: 5.5, max: 8.8 }],\n    },\n    {\n        name: \"Stylosanthes guianensis - semi-erect -forage type\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 500.0, max: 2000.0 }],\n        temp: [{ min: 15.0, max: 27.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 4.0, max: 7.7 }],\n    },\n    {\n        name: \"Stylosanthes hamata - bush/branching type-forage type\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 1700.0 }],\n        temp: [{ min: 22.0, max: 30.0 }],\n        alt: [{ min: 0.0, max: 500.0 }],\n        soilpH: [{ min: 4.0, max: 6.0 }],\n    },\n    {\n        name: \"Stylosanthes scabra -erect - forage type\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 500.0, max: 1700.0 }],\n        temp: [{ min: 20.0, max: 30.0 }],\n        alt: [{ min: 0.0, max: 600.0 }],\n        soilpH: [{ min: 4.0, max: 7.0 }],\n    },\n    {\n        name: \"Hairy Vetch (Vicia villosa )\",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 3,\n        water: 3,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 310.0, max: 1660.0 }],\n        temp: [{ min: 4.0, max: 21.0 }],\n        alt: [{ min: 1800.0, max: 3000.0 }],\n        soilpH: [{ min: 4.9, max: 8.2 }],\n    },\n    {\n        name: \"Vicia dasycarpa\",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 3,\n        water: 3,\n        markets: 2,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Velvet bean (Mucuna pruriens) \",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 0,\n        feed: 1,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 4,\n        land: 3,\n        labour: 2,\n        seed: 3,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 4,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 650.0, max: 3000.0 }],\n        temp: [{ min: 15.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2100.0 }],\n        soilpH: [{ min: 4.5, max: 7.7 }],\n    },\n    {\n        name: \"Lablab- forage type (Lablab purpureus)\",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 3,\n        feed: 4,\n        income: 3,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 2500.0 }],\n        temp: [{ min: 15.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2100.0 }],\n        soilpH: [{ min: 4.5, max: 7.8 }],\n    },\n    {\n        name: \"Crotolaria juncea\",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 0,\n        feed: 1,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 490.0, max: 4290.0 }],\n        temp: [{ min: 8.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2500.0 }],\n        soilpH: [{ min: 4.5, max: 7.5 }],\n    },\n    {\n        name: \"Calliandra calothyrus\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 4,\n        fuel: 3,\n        \"soil-fertility\": 3,\n        land: 1,\n        labour: 1,\n        seed: 3,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 1200.0, max: 4290.0 }],\n        temp: [{ min: 10.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 4.5, max: 7.5 }],\n    },\n    {\n        name: \"Gliricidia sepium\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 3,\n        income: 1,\n        \"erosion-control\": 4,\n        fuel: 4,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 2,\n        seed: 3,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 4,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 800.0, max: 4000.0 }],\n        temp: [{ min: 15.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 4.3, max: 8.0 }],\n    },\n    {\n        name: \"Leucaena leucocephala\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 4,\n        fuel: 4,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 500.0, max: 4100.0 }],\n        temp: [{ min: 15.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 1350.0 }],\n        soilpH: [{ min: 4.6, max: 8.7 }],\n    },\n    {\n        name: \"Leucaena trichandra\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 900.0, max: 3500.0 }],\n        temp: [{ min: 10.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 8.7 }],\n    },\n    {\n        name: \"Leucaena diversifolia\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 500.0, max: 4000.0 }],\n        temp: [{ min: 3.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 8.7 }],\n    },\n    {\n        name: \"Tree lucerne (Chamaecytisus palmensis)\",\n        type: \"Tree legumes \\u2013 coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 300.0, max: 1600.0 }],\n        temp: [{ min: 3.0, max: 28.0 }],\n        alt: [{ min: 1000.0, max: 2500.0 }],\n        soilpH: [{ min: 5.0, max: 8.7 }],\n    },\n    {\n        name: \"Sesbania sesban\",\n        type: \"Tree legumes \\u2013 non coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 4,\n        fuel: 3,\n        \"soil-fertility\": 3,\n        land: 1,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 500.0, max: 2500.0 }],\n        temp: [{ min: 15.0, max: 30.0 }],\n        alt: [{ min: 0.0, max: 2300.0 }],\n        soilpH: [{ min: 5.0, max: 7.5 }],\n    },\n    {\n        name: \"Sesbania grandiflora\",\n        type: \"Tree legumes \\u2013 non coppicing\",\n        food: 0,\n        feed: 3,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 3,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 700.0, max: 3000.0 }],\n        temp: [{ min: 22.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 1000.0 }],\n        soilpH: [{ min: 4.5, max: 8.7 }],\n    },\n    {\n        name: \"Tephrosia (Tephrosia vogelii)\",\n        type: \"Tree legumes \\u2013 non coppicing\",\n        food: 0,\n        feed: 0,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 870.0, max: 2670.0 }],\n        temp: [{ min: 13.0, max: 29.0 }],\n        alt: [{ min: 0.0, max: 2100.0 }],\n        soilpH: [{ min: 4.5, max: 6.5 }],\n    },\n    {\n        name: \"Faidherbia albidia\",\n        type: \"Tree legumes \\u2013 non coppicing\",\n        food: 0,\n        feed: 3,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 3,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Acacia angustissima\",\n        type: \"Tree legumes \\u2013 non coppicing\",\n        food: 0,\n        feed: 2,\n        income: 3,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 800.0, max: 3000.0 }],\n        temp: [{ min: 10.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 8.7 }],\n    },\n];\n","import { allLegumes } from \"./legume-information-clean\";\n\nconst legumeTypes = [];\nconst sources = [];\nallLegumes.map((legume) => {\n    if (!legumeTypes.includes(legume.type)) {\n        legumeTypes.push(legume.type);\n    }\n    if (\n        !sources.includes(legume[\"agroecology-source\"]) &&\n        legume[\"agroecology-source\"] !== null\n    ) {\n        sources.push(legume[\"agroecology-source\"]);\n    }\n});\n\nconst legumesData = {\n    allLegumes: allLegumes,\n    legumeTypes: legumeTypes,\n    sources: sources,\n};\n\nexport { legumesData };\n","import React, { Component } from \"react\";\n\nimport { Table } from \"react-bootstrap\";\n\nimport _ from \"lodash\";\nimport \"./results-component.css\";\n\nimport { resultsData } from \"./results-data\";\nimport AppContext from \"../../AppContext\";\n\nimport { legumesData } from \"../legumes-component/legume-data\";\n\nclass Results extends Component {\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = resultsData;\n\n        this.initialiseResults = this.initialiseResults.bind(this);\n        this.legumeContextScores = this.legumeContextScores.bind(this);\n        this.legumeFunctionScores = this.legumeFunctionScores.bind(this);\n        this.legumeAgroEcoScores = this.legumeAgroEcoScores.bind(this);\n        this.calculateLegumeScores = this.calculateLegumeScores.bind(this);\n        this.checkFormFilled = this.checkFormFilled.bind(this);\n    }\n\n    // Adding empty results attribute to fill for each of the legumes\n    // Loading the results from the form and getting the correct averages\n\n    initialiseResults = () => {\n        // Adding empty results to each legume\n        const newLegumes = _.cloneDeep(legumesData.allLegumes.slice(0, 10));\n        newLegumes.map((newLegume) => {\n            newLegume.results = _.cloneDeep(this.state.emptyScoresForLegume);\n        });\n\n        // Adding form Results\n\n        // Not much editing for agroeco\n        const agroEcoData = _.cloneDeep(this.context.agroEcoData);\n\n        //Extract average scores for context\n        const contextData = _.cloneDeep(this.context.contextScores.scores);\n        const newContextAverages = _.cloneDeep(this.state.contextFitSummary);\n\n        newContextAverages.map((newcontextscore) => {\n            contextData.map((contextscore) => {\n                if (\n                    contextscore.scoreType === \"average\" &&\n                    newcontextscore.attribute.label ===\n                        contextscore.attribute.label\n                ) {\n                    newcontextscore.score = 4 - contextscore.score;\n                }\n            });\n        });\n\n        // For the functional summary, need to average results from the pairwise selections and\n        // from the participatory score matching\n\n        const pairWiseData = _.cloneDeep(this.context.pairWiseScores.averages);\n        const participatoryMatrixData = _.cloneDeep(\n            this.context.participatoryMatrixScores.summary.scoresIndividual\n        );\n\n        const newFunctionAverages = _.cloneDeep(this.state.functionFitSummary);\n\n        newFunctionAverages.map((newfunction) => {\n            pairWiseData.map((pairwisescoreaverages) => {\n                if (\n                    pairwisescoreaverages.attribute.label ===\n                    newfunction.legumeFunction.label\n                ) {\n                    newfunction.pairwisescore = pairwisescoreaverages.value;\n                }\n            });\n        });\n\n        newFunctionAverages.map((newfunction) => {\n            participatoryMatrixData.map((matrixscore) => {\n                if (\n                    matrixscore.legumeFunction.label ===\n                    newfunction.legumeFunction.label\n                ) {\n                    newfunction.matrixscore = matrixscore.scores[1].score;\n                }\n            });\n        });\n\n        newFunctionAverages.map((newfunction) => {\n            newfunction.score = parseFloat(\n                (\n                    newfunction.pairwisescore / 2 +\n                    newfunction.matrixscore / 2\n                ).toFixed(2)\n            );\n        });\n\n        // Set initial state and then calculate initial results for legumes\n        this.setState(\n            {\n                legumes: newLegumes,\n                agroEcoFitSummary: agroEcoData.biofilters,\n                contextFitSummary: newContextAverages,\n                functionFitSummary: newFunctionAverages,\n            },\n            () => {\n                this.calculateLegumeScores();\n            }\n        );\n    };\n\n    legumeContextScores = (props) => {\n        // Context Scores\n        // console.log(\"Legume Context: \" + props.legumecontext);\n        // console.log(\"Form Context: \" + props.formcontext);\n\n        let legumecontext = parseFloat(props.legumecontext);\n        let formcontext = parseFloat(props.formcontext);\n        // Condition 1\n        if (\n            legumecontext - formcontext > -0.5 &&\n            legumecontext - formcontext <= 0\n        ) {\n            let scoreToReturn = 4 + (legumecontext - formcontext) / 2;\n            if (scoreToReturn > 0) {\n                return scoreToReturn;\n            }\n        }\n\n        // Condition 2\n        if (\n            legumecontext - formcontext < 0.5 &&\n            legumecontext - formcontext >= 0\n        ) {\n            let scoreToReturn = 4 - (legumecontext - formcontext) / 2;\n            if (scoreToReturn > 0) {\n                return scoreToReturn;\n            }\n        }\n\n        // Condition 3\n        if (legumecontext > formcontext) {\n            let scoreToReturn = 4 - (legumecontext - formcontext) * 2;\n            if (scoreToReturn > 0) {\n                return scoreToReturn;\n            }\n        }\n\n        // Condition 4\n        if (formcontext > legumecontext) {\n            return 4;\n        }\n\n        return 0;\n    };\n\n    legumeFunctionScores = (props) => {\n        // Calculating the averages for each of the legumes\n        // Function Scores\n\n        let formfunction = props.formfunction;\n        let legumefunction = props.legumefunction;\n        if (formfunction === 0) {\n            return 0;\n        }\n        if (legumefunction < formfunction) {\n            return (legumefunction * formfunction) / 8;\n        }\n        return (legumefunction * formfunction) / 4;\n    };\n\n    legumeAgroEcoScores = (props) => {\n        //console.log(props.legumeMin);\n        //console.log(props.legumeMax);\n        //console.log(props.formvalue);\n\n        let legumeMin = props.legumeMin;\n        let legumeMax = props.legumeMax;\n        let formvalue = props.formvalue;\n\n        if (formvalue >= legumeMin && formvalue <= legumeMax) {\n            return 1;\n        } else {\n            return 0;\n        }\n    };\n\n    calculateLegumeScores = () => {\n        const newLegumeState = _.cloneDeep(this.state.legumes);\n\n        newLegumeState.map((legume) => {\n            // Set context scores\n            // map through individual legumes\n            legume.results.contextFit.map((legumeContextScore) => {\n                // Map through the contextFit summaries\n                this.state.contextFitSummary.map((contextAttribute) => {\n                    if (legumeContextScore.attribute !== undefined) {\n                        // Match the attribute in the legume to the attribute in the context fit sumary\n                        if (\n                            contextAttribute.attribute.label ===\n                            legumeContextScore.attribute.label\n                        ) {\n                            // Assign the context score\n                            // console.log(legumeContextScore);\n                            // console.log(contextAttribute);\n                            // console.log(\n                            //     \"Legume Attribute: \" +\n                            //         contextAttribute.attribute.label\n                            // );\n                            //console.log(legume);\n\n                            legumeContextScore.score = this.legumeContextScores(\n                                // Props to send to the function\n                                {\n                                    legumecontext:\n                                        legume[\n                                            contextAttribute.attribute.label\n                                        ],\n                                    formcontext: contextAttribute.score,\n                                }\n                            );\n                            // console.log(legumeContextScore.score);\n                        }\n                    }\n                });\n            });\n\n            // Set function scores\n            legume.results.functionFit.map((legumeFunction) => {\n                this.state.functionFitSummary.map((functionAttribute) => {\n                    if (\n                        functionAttribute.legumeFunction !== undefined &&\n                        legumeFunction.legumeFunction !== undefined\n                    ) {\n                        if (\n                            functionAttribute.legumeFunction.label ===\n                            legumeFunction.legumeFunction.label\n                        ) {\n                            legumeFunction.score = this.legumeFunctionScores({\n                                formfunction: functionAttribute.score,\n                                legumefunction:\n                                    legume[\n                                        functionAttribute.legumeFunction.label\n                                    ],\n                            });\n                        }\n                    }\n                });\n            });\n\n            // set agroeco scores\n            legume.results.agroEcoFit.map((legumeAgroEco) => {\n                this.state.agroEcoFitSummary.map((agroEcoSummary) => {\n                    if (legumeAgroEco.agroEcoFilter !== undefined) {\n                        if (\n                            legumeAgroEco.agroEcoFilter.label ===\n                            agroEcoSummary.label\n                        ) {\n                            legumeAgroEco.score = this.legumeAgroEcoScores({\n                                legumeMin: legume[agroEcoSummary.label][0].min,\n                                legumeMax: legume[agroEcoSummary.label][0].max,\n                                formvalue: agroEcoSummary.value,\n                            });\n                            // console.log(legumeAgroEco);\n                            // console.log(agroEcoSummary);\n                            // console.log(legume[agroEcoSummary.label][0].min);\n                            // console.log(legume[agroEcoSummary.label][0].max);\n                        }\n                    }\n                });\n            });\n        });\n\n        // Update overall scores\n        newLegumeState.map((legume) => {\n            // Sum agroEco Scores\n            let agroecoscoreAccumulator = 0;\n            legume.results.agroEcoFit.forEach((agroecoscore) => {\n                if (agroecoscore.agroEcoFilter !== undefined) {\n                    agroecoscoreAccumulator += agroecoscore.score;\n                }\n            });\n            legume.results.agroEcoFit.forEach((agroecoscore) => {\n                if (agroecoscore.overallFit !== undefined) {\n                    agroecoscore.overallFit = agroecoscoreAccumulator;\n                }\n            });\n\n            // Sum context Scores\n            let contextAccumulator = 0;\n            legume.results.contextFit.forEach((contextScore) => {\n                if (contextScore.attribute !== undefined) {\n                    contextAccumulator += contextScore.score;\n                }\n            });\n            legume.results.contextFit.forEach((contextScore) => {\n                if (contextScore.overallFit !== undefined) {\n                    contextScore.overallFit = contextAccumulator;\n                }\n            });\n            // Sum function scores\n            let functionAccumulator = 0;\n            legume.results.functionFit.forEach((functionScore) => {\n                if (functionScore.legumeFunction !== undefined) {\n                    functionAccumulator += functionScore.score;\n                }\n            });\n            legume.results.functionFit.forEach((functionScore) => {\n                if (functionScore.overallFit !== undefined) {\n                    functionScore.overallFit = functionAccumulator;\n                }\n            });\n        });\n\n        // Set ranking the scores (draws included)\n        newLegumeState.forEach((firstLegume) => {\n            // Overall rank is the fifth item in the array\n            firstLegume.results.agroEcoFit[5].overallRank = 1;\n            let valuesEncountered = [];\n            newLegumeState.forEach((secondLegume) => {\n                //-------------------------------------------------------------------------------------------------\n                // AgroEco Rank\n                if (\n                    // Overall rank is the fifth item in the array\n\n                    firstLegume.results.agroEcoFit[4].overallFit <\n                        secondLegume.results.agroEcoFit[4].overallFit &&\n                    // Making sure the value has not been encountered before.\n                    // If it has, there is no need to push the rank further down the list\n                    !valuesEncountered.includes(\n                        secondLegume.results.agroEcoFit[4].overallFit\n                    )\n                ) {\n                    //\n                    valuesEncountered.push(\n                        secondLegume.results.agroEcoFit[4].overallFit\n                    );\n                    firstLegume.results.agroEcoFit[5].overallRank += 1;\n                }\n                //-------------------------------------------------------------------------------------------------\n                // Context Rank\n                if (\n                    // Overall rank is the fifth item in the array\n\n                    firstLegume.results.contextFit[7].overallFit <\n                        secondLegume.results.contextFit[7].overallFit &&\n                    // Making sure the value has not been encountered before.\n                    // If it has, there is no need to push the rank further down the list\n                    !valuesEncountered.includes(\n                        secondLegume.results.contextFit[7].overallFit\n                    )\n                ) {\n                    //\n                    valuesEncountered.push(\n                        secondLegume.results.contextFit[7].overallFit\n                    );\n                    firstLegume.results.contextFit[8].overallRank += 1;\n                }\n                // Function Rank\n                //-------------------------------------------------------------------------------------------------\n                if (\n                    // Overall rank is the fifth item in the array\n\n                    firstLegume.results.functionFit[6].overallFit <\n                        secondLegume.results.functionFit[6].overallFit &&\n                    // Making sure the value has not been encountered before.\n                    // If it has, there is no need to push the rank further down the list\n                    !valuesEncountered.includes(\n                        secondLegume.results.functionFit[6].overallFit\n                    )\n                ) {\n                    //\n                    valuesEncountered.push(\n                        secondLegume.results.functionFit[6].overallFit\n                    );\n                    firstLegume.results.functionFit[7].overallRank += 1;\n                }\n            });\n        });\n\n        this.setState({\n            legumes: newLegumeState,\n        });\n    };\n\n    checkFormFilled = () => {\n        if (\n            this.context.agroEcoData !== undefined &&\n            this.context.contextScores !== undefined &&\n            this.context.pairWiseScores !== undefined &&\n            this.context.participatoryMatrixScores !== undefined\n        ) {\n            this.setState(\n                {\n                    formFilled: true,\n                },\n                () => {\n                    this.initialiseResults();\n                }\n            );\n        }\n    };\n\n    componentDidMount() {\n        if (this.context.results !== undefined) {\n            const newState = this.context.results;\n            this.setState(newState);\n        } else {\n            const newContext = this.state;\n            this.context.results = newContext;\n        }\n        //console.log(this.state);\n\n        this.checkFormFilled();\n    }\n    componentDidUpdate() {\n        const newContext = this.state;\n        this.context.results = newContext;\n        console.log(this.state);\n    }\n\n    returnResultsForSummaryTable = (props) => {\n        if (props.item.score !== undefined) {\n            return <td>{parseFloat(props.item.score).toFixed(2)}</td>;\n        }\n        if (props.item.overallFit !== undefined) {\n            return <td>{parseFloat(props.item.overallFit).toFixed(2)}</td>;\n        }\n        if (props.item.overallRank !== undefined) {\n            return <td>{parseInt(props.item.overallRank)}</td>;\n        }\n    };\n\n    renderLegumeResults = () => {\n        return (\n            <div>\n                <h1>AgroEco Fit</h1>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Legume Name</th>\n                            {this.state.agroEcoFilters.map((agroEcoFilter) => {\n                                return <th>{agroEcoFilter.label}</th>;\n                            })}\n                            <th>total score</th>\n                            <th>overall rank</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.legumes.map((legume) => {\n                            return (\n                                <tr>\n                                    <td>{legume.name}</td>\n                                    {legume.results.agroEcoFit.map(\n                                        (agroEcoItem) => {\n                                            return this.returnResultsForSummaryTable(\n                                                {\n                                                    item: agroEcoItem,\n                                                }\n                                            );\n                                        }\n                                    )}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n                <h1>Context Fit</h1>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Legume Name</th>\n                            {this.state.attributes.map((attribute) => {\n                                return <th>{attribute.label}</th>;\n                            })}\n                            <th>total score</th>\n                            <th>overall rank</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.legumes.map((legume) => {\n                            return (\n                                <tr>\n                                    <td>{legume.name}</td>\n                                    {legume.results.contextFit.map(\n                                        (contextItem) => {\n                                            return this.returnResultsForSummaryTable(\n                                                {\n                                                    item: contextItem,\n                                                }\n                                            );\n                                        }\n                                    )}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n                <h1>Functional Fit</h1>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Legume Name</th>\n                            {this.state.legumeFunctions.map(\n                                (legumeFunction) => {\n                                    return <th>{legumeFunction.label}</th>;\n                                }\n                            )}\n                            <th>total score</th>\n                            <th>overall rank</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.legumes.map((legume) => {\n                            return (\n                                <tr>\n                                    <td>{legume.name}</td>\n                                    {legume.results.functionFit.map(\n                                        (functionItem) => {\n                                            return this.returnResultsForSummaryTable(\n                                                {\n                                                    item: functionItem,\n                                                }\n                                            );\n                                        }\n                                    )}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    };\n\n    renderBody = () => {\n        if (this.state.formFilled === false) {\n            return <h1>No data entered yet. Please fill in data-entry form</h1>;\n        }\n        if (this.state.formFilled === true) {\n            return this.renderLegumeResults();\n        }\n    };\n\n    render() {\n        return <div>{this.renderBody()}</div>;\n    }\n}\n\nexport default Results;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nimport AppContext from \"../../AppContext\";\n\nclass ViewContext extends Component {\n    static contextType = AppContext;\n\n    render() {\n        return (\n            <div>\n                <h1>App Context</h1>\n                <pre>{JSON.stringify(this.context, null, 2)}</pre>\n            </div>\n        );\n    }\n}\n\nexport default ViewContext;\n","import React, { Component } from \"react\";\n\nimport { AiOutlineDatabase, AiFillHome } from \"react-icons/ai\";\nimport { RiUserSettingsLine } from \"react-icons/ri\";\nimport { VscAccount } from \"react-icons/vsc\";\nimport { FaLeaf, FaDatabase } from \"react-icons/fa\";\nimport { GoGraph } from \"react-icons/go\";\n\nimport Home from \"../home-component/home-component\";\nimport Admin from \"../admin-data-entry-component/admin-data-entry-component\";\nimport Login from \"../login-component/login-component\";\nimport DataEntry from \"../data-entry-component/data-entry-component\";\n\nimport Results from \"../results-component/results-component\";\nimport ViewContext from \"../view-context-component/view-context-component\";\n\n//import Legumes from \"../legumes-component/legumes-component\";\n\n// Set the icon size for the imported icons\nconst iconSize = 30;\n\nconst sidebarlinkcName = \"sidebar-nav-link\";\n\nconst SidebarData = [\n    {\n        title: \"Home\",\n        routeKey: \"home-route\",\n        component: <Home />,\n        path: \"/home\",\n        icon: <AiFillHome size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n    {\n        title: \"Data Entry\",\n        routeKey: \"data-entry-route\",\n        component: <DataEntry />,\n        path: \"/data-entry\",\n\n        icon: <AiOutlineDatabase size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n\n    {\n        title: \"Results\",\n        routeKey: \"results-route\",\n        component: <Results />,\n        path: \"/results\",\n\n        icon: <GoGraph size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n\n    {\n        title: \"Admin\",\n        routeKey: \"admin-route\",\n        component: <Admin />,\n        path: \"/admin\",\n        icon: <RiUserSettingsLine size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n    {\n        title: \"Login\",\n        routeKey: \"login-route\",\n        component: <Login />,\n        path: \"/login\",\n        icon: <VscAccount size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n    {\n        title: \"View App Data\",\n        routeKey: \"app-data-route\",\n        component: <ViewContext />,\n        path: \"/app-data\",\n        icon: <FaDatabase size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n];\n\nexport default SidebarData;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { AiOutlineMenu } from \"react-icons/ai\";\nimport \"./sidebar-component.css\";\nimport SidebarData from \"./sidebar-data\";\n\nclass Sidebar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // Setting the initial state to closed\n\n        this.state = {\n            sideBarOpen: false,\n        };\n    }\n\n    // When this function is trigered, state of the side-bar is change, which triggers a change in the css\n    toggleSidebar = () => {\n        this.setState({\n            sideBarOpen: !this.state.sideBarOpen,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"container_row\">\n                <div className=\"menu-button\">\n                    <a onClick={this.toggleSidebar}>\n                        <AiOutlineMenu size={50} color=\"black\" />\n                    </a>\n                </div>\n\n                <div\n                    className={\n                        this.state.sideBarOpen\n                            ? \"sidebar-container active\"\n                            : \"sidebar-container\"\n                    }\n                >\n                    <div\n                        key=\"sidebar-header \"\n                        className=\"sidebar-header-container\"\n                    >\n                        <h2>LegumeCHOICE</h2>\n\n                        <a onClick={this.toggleSidebar}>\n                            <div className=\"close-menu-icon\">\n                                <IoIosArrowBack size={40} color=\"white\" />\n                            </div>\n                        </a>\n                    </div>\n\n                    <div className=\"link-container\">\n                        <ul>\n                            {SidebarData.map((item, index) => {\n                                return (\n                                    <Link\n                                        key={index + \"-link-item\"}\n                                        className={item.cName}\n                                        to={item.path}\n                                        onClick={this.toggleSidebar}\n                                    >\n                                        <div className=\"sidebar-list-item\">\n                                            <li\n                                                className=\"sidebar-list-item\"\n                                                key={index + \"-list-item\"}\n                                            >\n                                                <span className=\"side-bar-link-icon\">\n                                                    {item.icon}\n                                                </span>\n                                                <span className=\"side-bar-link-text\">\n                                                    {item.title}\n                                                </span>\n                                            </li>\n                                        </div>\n                                    </Link>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;\n","import React from \"react\";\n\nimport {\n    //BrowserRouter as Router,\n    HashRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\n\nimport Sidebar from \"./components/sidebar-component/sidebar-component\";\n\n// In this location, we have all of the details of each of the individual components\nimport SidebarData from \"./components/sidebar-component/sidebar-data\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AppContext from \"./AppContext\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        {\n            /*basename={process.env.PUBLIC_URL + \"/\"}*/\n        }\n        return (\n            <Router>\n                <div>\n                    <Sidebar />\n                    <div className=\"outer-page-container\">\n                        <div className=\"inner-page-container\">\n                            <Switch>\n                                {/* Context provider specifies which components should have access to the context */}\n                                <AppContext.Provider value={{}}>\n                                    {SidebarData.map((item) => {\n                                        // Return Each of the components and their specified routes\n                                        return (\n                                            <Route\n                                                exact\n                                                path={item.path}\n                                                key={item.routeKey}\n                                            >\n                                                {item.component}\n                                            </Route>\n                                        );\n                                    })}\n                                    <Redirect exact from=\"/\" to=\"/home\" />\n                                </AppContext.Provider>\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}