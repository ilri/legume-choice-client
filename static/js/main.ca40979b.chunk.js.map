{"version":3,"sources":["components/home-component/home-component-markdown.md","components/home-component/home-component.js","components/admin-data-entry-component/admin-data-entry-component.js","AppContext.js","components/login-component/login-component.js","components/agro-ecological-filter-component/agro-ecological-data.js","components/agro-ecological-filter-component/agro-ecological-filter.js","components/context-scores-component/context-scores-data.js","components/data-entry-component/data-entry-data.js","components/context-scores-component/context-scores-component.js","components/participatory-matrix-scoring-component/participatory-matrix-data.js","components/pairwise-ranking-component/pairwise-ranking-data.js","components/participatory-matrix-scoring-component/participatory-matrix-scoring.js","components/pairwise-ranking-component/pairwise-ranking-component.js","components/results-component/results-component.js","components/data-entry-component/data-entry-component.js","components/legumes-component/legume-all-initial.js","components/legumes-component/legume-data.js","components/legumes-component/legumes-component.js","components/sidebar-component/sidebar-data.js","components/sidebar-component/sidebar-component.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Home","props","state","file","markdownFile","markdown","axios","get","this","then","response","setState","data","children","Component","Admin","addUserlocal","event","preventDefault","prevUsers","usersLocal","newUser","formEntry","username","some","user","alert","email","handleChange","name","target","value","prevState","deleteUser","params","oldUsers","filter","subsetArrays","array","variable","map","item","saveChanges","usersToAdd","usersToDelete","usersOnline","localusers","includes","length","method","url","newUsers","headers","accept","console","log","catch","error","deleteUsers","bind","className","Form","onSubmit","Group","controlId","Label","Control","type","onChange","Button","variant","index","onClick","e","id","_id","AppContext","createContext","Login","context","authenticateUser","authenticated","projectID","password","undefined","newState","newContext","React","contextType","agroEcoData","biofilters","label","minValue","maxValue","AgroEco","tableHeader","tableBody","biofilter","defaultValue","bioFiltersArray","forEach","biofilterSubset","biofilterIndex","parseInt","Table","striped","bordered","hover","typologies","participants","attributes","legfunc","ContextScores","scores","attributesIndex","push","scoreType","attribute","participantIndex","typologyIndex","participant","typology","ContextScore","scoresArray","changeIndividualScores","changeAverages","arr","query","element","average","averageAttribute","attributetoAverage","reduce","accumulator","currentValue","renderRowAverage","toFixed","contextRow","as","score","allRows","rowSpan","colSpan","newSelections","func","matrixdata","farmerAttributes","farmers","legumeFunctions","blankFarmer","number","gender","selections","total","ParticipatoryMatrix","addFarmer","farmersArray","JSON","parse","stringify","newfarmertoAdd","farmEntryFields","scoringInput","farmerNameInput","farmerDetailsSelectInput","updateFarmerName","updateFarmerScore","updateFarmerDetailesSelect","selected","disabled","whichFarmer","farmer","farmerIndex","legumefuncs","whichValue","funct","funcIndex","newScore","updateTotal","selection","tableRows","PairwiseRankingData","male","pairwiseSelection","totals","female","previousidentifiers","outerArrayIndex","function1","innerArrayIndex","function2","intermediateidentifier","sort","identifier","join","funct1","funct2","PairwiseRanking","updateSelections","selectedValue","selectionArr","selectionItem","selectionIndex","pairfemalewiseSelection","upDateTotalScore","totalsArray","totalsItem","totalsIndex","pairWiseTable","pairWiseResultsTable","Results","DataEntry","allLegumes","food","feed","income","fuel","land","labour","seed","water","markets","source","legumeTypes","sources","legume","legumesData","Legumes","sidebarlinkcName","SidebarData","title","routeKey","component","path","icon","size","cName","Sidebar","toggleSidebar","sideBarOpen","legumeCHOICEState","color","to","App","changeState","basename","process","Provider","exact","from","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ca40979b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home-component-markdown.0579c1b4.md\";","import React, { Component } from \"react\";\nimport \"./home-component.css\";\nimport axios from \"axios\";\nimport ReactMarkdown from \"react-markdown\";\nimport markdownFile from \"./home-component-markdown.md\";\n\nclass Home extends Component {\n    // Initialising state for the component\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            file: markdownFile,\n            markdown: \"\",\n        };\n    }\n\n    // Importing markdown when the file is loaded\n    componentDidMount() {\n        axios.get(this.state.file).then((response) => {\n            this.setState({\n                markdown: response.data,\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <ReactMarkdown children={this.state.markdown}></ReactMarkdown>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\n\nimport \"./admin-data-entry-component.css\";\n\nclass Admin extends Component {\n    /////////////////////////////////////////////////////////////////////////////////\n    // Initialising variables\n    /////////////////////////////////////////////////////////////////////////////////\n    constructor(props) {\n        super(props);\n        //console.log(\"Constructor\");\n        this.state = {\n            usersLocal: [],\n            usersOnline: [],\n\n            formEntry: {\n                username: \"\",\n                email: \"\",\n            },\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.addUserlocal = this.addUserlocal.bind(this);\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Loaded when the page loads. Fetches entries from the database\n    /////////////////////////////////////////////////////////////////////////////////\n    componentDidMount() {\n        axios({\n            method: \"get\",\n            url: \"https://l-gorman.com/api/users\",\n            headers: {\n                accept: \"application/json\",\n            },\n        })\n            .then((response) => {\n                this.setState({\n                    usersLocal: response.data,\n                    usersOnline: response.data,\n                });\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Function for adding user\n    /////////////////////////////////////////////////////////////////////////////////\n    addUserlocal = (event) => {\n        event.preventDefault();\n        //console.log(\"About to update state\");\n        const prevUsers = this.state.usersLocal;\n        const newUser = this.state.formEntry;\n\n        // Checking if the username exists already\n        if (newUser.username === \"\") {\n            alert(\"No username entered\");\n            return;\n        }\n        if (prevUsers.some((user) => user.username === newUser.username)) {\n            alert(\"Username already exists\");\n            return;\n        }\n\n        // Checking if the email exists already\n        if (prevUsers.some((user) => user.email === newUser.email)) {\n            alert(\"email already registered\");\n            return;\n        }\n\n        // Updating state\n        this.setState({\n            usersLocal: [...prevUsers, newUser],\n            formEntry: {\n                username: \"\",\n                email: \"\",\n            },\n        });\n    };\n\n    handleChange = (event) => {\n        event.preventDefault();\n        const name = [event.target.name];\n        const value = event.target.value;\n        this.setState((prevState) => ({\n            formEntry: {\n                ...prevState.formEntry,\n                [name]: value,\n            },\n        }));\n    };\n    /////////////////////////////////////////////////////////////////////////////////\n    // Function for deleting user\n    /////////////////////////////////////////////////////////////////////////////////\n    deleteUser = (event, params = {}) => {\n        event.preventDefault();\n\n        const oldUsers = this.state.usersLocal;\n        const newUser = oldUsers.filter(\n            (user) =>\n                user.email !== params.email || user.username !== params.username\n        );\n        //console.log(newUser);\n\n        this.setState((prevState) => ({\n            usersLocal: newUser,\n        }));\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Subset Arrays\n    /////////////////////////////////////////////////////////////////////////////////\n\n    subsetArrays = (array, variable) => {\n        return array.map((item) => {\n            return item[variable];\n        });\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Making Changes to Db\n    /////////////////////////////////////////////////////////////////////////////////\n    saveChanges = (event) => {\n        //event.preventDefault();\n\n        const usersLocal = this.state.usersLocal;\n        const usersOnline = this.state.usersOnline;\n\n        //console.log(this.subsetArrays(usersOnline, \"email\"));\n        let usersToAdd = [];\n        let usersToDelete = [];\n\n        usersToAdd = usersLocal.filter(\n            (localusers) =>\n                !this.subsetArrays(usersOnline, \"email\").includes(\n                    localusers.email\n                ) &&\n                !this.subsetArrays(usersOnline, \"username\").includes(\n                    localusers.username\n                )\n        );\n\n        usersToDelete = usersOnline.filter(\n            (localusers) =>\n                !this.subsetArrays(usersLocal, \"email\").includes(\n                    localusers.email\n                ) &&\n                !this.subsetArrays(usersLocal, \"username\").includes(\n                    localusers.username\n                )\n        );\n\n        //console.log(usersToDelete);\n\n        //console.log(usersToDelete);\n\n        if (usersToAdd.length > 0) {\n            axios({\n                method: \"post\",\n                url: \"https://l-gorman.com/api/users/insertmany/\",\n                data: { newUsers: usersToAdd },\n                headers: {\n                    accept: \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                },\n            })\n                .then((response) => {\n                    console.log(response);\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        }\n\n        if (usersToDelete.length > 0) {\n            axios({\n                method: \"post\",\n                url: \"https://l-gorman.com/api/users/deletemany/\",\n                data: { deleteUsers: usersToDelete },\n                headers: {\n                    accept: \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                },\n            })\n                .then((response) => {\n                    console.log(response);\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        }\n\n        this.setState(() => ({\n            usersOnline: usersLocal,\n        }));\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Checking if the component has updated\n    /////////////////////////////////////////////////////////////////////////////////\n    componentDidUpdate() {\n        console.log(this.state);\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Login component</h1>\n                <div className=\"form-container\">\n                    <h2>New Users</h2>\n                    <Form onSubmit={this.addUserlocal}>\n                        <Form.Group controlId=\"basicusername\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control\n                                name=\"username\"\n                                type=\"text\"\n                                onChange={this.handleChange}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"basicemail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                name=\"email\"\n                                type=\"email\"\n                                onChange={this.handleChange}\n                            />\n                        </Form.Group>\n\n                        <Button\n                            className=\"delete-button\"\n                            variant=\"primary\"\n                            type=\"submit\"\n                        >\n                            Add User\n                        </Button>\n                    </Form>\n                </div>\n                <div className=\"form-container\">\n                    <h2>Users</h2>\n                    {this.state.usersLocal.map((user, index) => {\n                        return (\n                            <div\n                                className=\"user-container\"\n                                key={\"user \" + user.email + \" \" + user.username}\n                            >\n                                {index + 1}. {user.username} ({user.email})\n                                <div className=\"deleteButton\">\n                                    <Button\n                                        onClick={(e) =>\n                                            this.deleteUser(e, {\n                                                id: user._id,\n                                                username: user.username,\n                                                email: user.email,\n                                            })\n                                        }\n                                    >\n                                        Delete User\n                                    </Button>\n                                </div>\n                            </div>\n                        );\n                    })}\n                    <div className=\"user-container\">\n                        <Button\n                            onClick={this.saveChanges}\n                            className=\"deleteButton\"\n                        >\n                            Submit\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Admin;\n","import React, { createContext } from \"react\";\n\n// Skeleton of the app data\n/*\n    user: {},\n    agroEcoData: {},\n    contextScores: {},\n    pairWiseScores: {},\n    participatoryMatrixScores: {},\n    resultes: {},\n*/\n\n// Creating the app context to be used with the react contextapi\nconst AppContext = createContext();\n\nexport default AppContext;\n","import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nimport AppContext from \"../../AppContext\";\n\nimport \"./login-component.css\";\n\nclass Login extends React.Component {\n    // Initialising context\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            projectID: \"\",\n            password: \"\",\n            authenticated: false,\n        };\n    }\n\n    componentDidMount() {\n        if (this.context.user !== undefined) {\n            const newState = this.context.user;\n            this.setState(newState);\n            console.log(\"using old state\");\n        }\n    }\n    componentDidUpdate() {\n        const newContext = this.state;\n        this.context.user = newContext;\n        console.log(this.context);\n    }\n\n    handleChange = (event, props) => {\n        this.setState({\n            [props.variable]: event.target.value,\n        });\n\n        this.context.user = this.state;\n    };\n\n    authenticateUser = (event) => {\n        event.preventDefault();\n        this.setState({\n            authenticated: true,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"form-container\">\n                <h1>Project Information</h1>\n                <Form>\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        value={this.state.username}\n                        onChange={(event) =>\n                            this.handleChange(event, { variable: \"username\" })\n                        }\n                    />\n                    <Form.Label>Project ID</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        value={this.state.projectID}\n                        onChange={(event) =>\n                            this.handleChange(event, { variable: \"projectID\" })\n                        }\n                    />\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        value={this.state.password}\n                        onChange={(event) =>\n                            this.handleChange(event, { variable: \"password\" })\n                        }\n                    />\n\n                    <Button\n                        className=\"submitButton\"\n                        type=\"submit\"\n                        onClick={this.authenticateUser}\n                    >\n                        Authenticate\n                    </Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","const agroEcoData = {\n    biofilters: [\n        {\n            name: \"Rainfall (mm/year)\",\n            label: \"rainfall\",\n            minValue: 280,\n            maxValue: 4290,\n            value: (280 + 4290) / 2,\n        },\n        {\n            name: \"Temperature (mean °C/month)\",\n            label: \"temp\",\n            minValue: 0,\n            maxValue: 45,\n            value: 45 / 2,\n        },\n\n        {\n            name: \"Altitude (average masl)\",\n            label: \"alt\",\n            minValue: 0,\n            maxValue: 3800,\n            value: 3800 / 2,\n        },\n\n        {\n            name: \"Soil pH (average)\",\n            label: \"soilpH\",\n            minValue: 4,\n            maxValue: 9,\n            value: (4 + 9) / 2,\n        },\n    ],\n};\n\nexport default agroEcoData;\n","import React, { useState, Component } from \"react\";\nimport { Table, Form } from \"react-bootstrap\";\n\nimport agroEcoData from \"./agro-ecological-data\";\n\nimport \"./agro-ecological-filter.css\";\n\nimport AppContext from \"../../AppContext\";\n\nclass AgroEco extends Component {\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = agroEcoData;\n    }\n\n    componentDidMount() {\n        if (this.context.agroEcoData !== undefined) {\n            const newState = this.context.agroEcoData;\n            this.setState(newState);\n        }\n\n        console.log(this.state);\n    }\n\n    componentDidUpdate() {\n        const newContext = this.state;\n\n        this.context.agroEcoData = newContext;\n        console.log(this.context);\n    }\n    tableHeader = () => {\n        return (\n            <thead>\n                <tr>\n                    <th>Biofilters</th>\n                    <th>Site Values</th>\n                </tr>\n            </thead>\n        );\n    };\n\n    tableBody = () => {\n        return (\n            <tbody>\n                {this.state.biofilters.map((biofilter) => {\n                    return (\n                        <tr key={\"agro-eco-table\" + biofilter.label}>\n                            <td>{biofilter.name}</td>\n                            <td>\n                                <Form.Control\n                                    type=\"number\"\n                                    defaultValue={biofilter.value}\n                                    onClick={(event) => {\n                                        this.handleChange(event, biofilter);\n                                    }}\n                                />\n                            </td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        );\n    };\n\n    handleChange = (event, biofilter) => {\n        const bioFiltersArray = this.state.biofilters;\n\n        if (\n            event.target.value < biofilter.minValue ||\n            event.target.value > biofilter.maxValue\n        ) {\n            alert(\"Outside of range\");\n            return;\n        }\n\n        bioFiltersArray.forEach((biofilterSubset, biofilterIndex) => {\n            if (biofilterSubset === biofilter) {\n                bioFiltersArray[biofilterIndex].value = parseInt(\n                    event.target.value\n                );\n            }\n        });\n\n        this.setState({\n            biofilters: bioFiltersArray,\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Agroecological Filter</h2>\n\n                <div className=\"table-container\">\n                    <Table\n                        striped\n                        bordered\n                        hover\n                        className=\"agro-eco-table-style\"\n                    >\n                        <this.tableHeader />\n\n                        <this.tableBody />\n                    </Table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AgroEco;\n","/* Creating all of the possible combinations for context scores \n Could be done in a better way with a series of map functions, or some sort of recursive for loop\nThis is the quickest/best way I could come up with*/\n\nimport {\n    typologies,\n    participants,\n    attributes,\n} from \"../data-entry-component/data-entry-data\";\n\nlet ContextScores = {\n    attributes: attributes,\n    participants: participants,\n    typologies: typologies,\n    scores: [],\n};\n\nfor (\n    let attributesIndex = 0;\n    attributesIndex < attributes.length;\n    attributesIndex++\n) {\n    // Giving room to add average scores for each attribute\n    ContextScores.scores.push({\n        scoreType: \"average\",\n        attribute: attributes[attributesIndex],\n        value: 0,\n    });\n\n    for (\n        let participantIndex = 0;\n        participantIndex < participants.length;\n        participantIndex++\n    ) {\n        for (\n            let typologyIndex = 0;\n            typologyIndex < typologies.length;\n            typologyIndex++\n        ) {\n            // Giving room to add individual scores for each entry\n            ContextScores.scores.push({\n                scoreType: \"individual\",\n                attribute: attributes[attributesIndex],\n                participant: participants[participantIndex],\n                typology: typologies[typologyIndex],\n                value: 0,\n            });\n        }\n    }\n}\nexport default ContextScores;\nexport { typologies, attributes };\n","const legfunc = [\n    {\n        name: \"Food\",\n        label: \"food\",\n    },\n    {\n        name: \"Feed\",\n        label: \"feed\",\n    },\n    {\n        name: \"Income\",\n        label: \"income\",\n    },\n    {\n        name: \"Erosion Control\",\n        label: \"erosion-control\",\n    },\n    {\n        name: \"Fuel\",\n        label: \"fuel\",\n    },\n    {\n        name: \"Soil Fertility\",\n        label: \"soil-fertility\",\n    },\n];\n\nconst typologies = [\n    {\n        name: \"Low\",\n        label: \"low\",\n    },\n    {\n        name: \"Medium\",\n        label: \"med\",\n    },\n    {\n        name: \"High\",\n        label: \"high\",\n    },\n];\n\nconst participants = [\n    {\n        name: \"Farmer\",\n        label: \"farmer\",\n    },\n    {\n        name: \"Expert\",\n        label: \"expert\",\n    },\n];\n\nconst attributes = [\n    {\n        name: \"Land\",\n        label: \"land\",\n    },\n    {\n        name: \"Labour\",\n        label: \"labour\",\n    },\n    {\n        name: \"Seed\",\n        label: \"seed\",\n    },\n    {\n        name: \"Inputs and services\",\n        label: \"inp-serv\",\n    },\n    {\n        name: \"Knowledge and skills\",\n        label: \"knowl-skill\",\n    },\n    {\n        name: \"Water\",\n        label: \"water\",\n    },\n    {\n        name: \"Markets\",\n        label: \"markets\",\n    },\n];\n\nexport default legfunc;\nexport { attributes, participants, typologies };\n","import React, { Component } from \"react\";\nimport ContextScores from \"./context-scores-data\";\nimport { Table, Form, Button } from \"react-bootstrap\";\n\nimport \"./context-scores-component.css\";\n\nclass ContextScore extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = ContextScores;\n    }\n\n    componentDidMount() {\n        //console.log(this.state);\n    }\n\n    componentDidUpdate() {\n        //console.log(this.state);\n    }\n\n    handleChange = (event, props) => {\n        props.value = parseInt(event.target.value); // Ensuring that the entered value is an integer\n        const scoresArray = this.state.scores;\n\n        this.changeIndividualScores(scoresArray, props);\n        this.changeAverages(scoresArray, props);\n\n        this.setState({\n            scores: scoresArray,\n        });\n    };\n\n    // Change individual scores in an array through filtering\n    changeIndividualScores = (arr, query) => {\n        arr.forEach((element, index) => {\n            if (\n                element.participant === query.participant &&\n                element.attribute === query.attribute &&\n                element.typology === query.typology\n            ) {\n                arr[index].value = query.value;\n            }\n        });\n    };\n\n    changeAverages = (arr) => {\n        arr.forEach((element, index) => {\n            if (element.scoreType === \"average\") {\n                let average = this.averageAttribute(arr, element.attribute);\n                arr[index].value = average;\n            }\n        });\n    };\n\n    // Update Averages after we see a score change\n    averageAttribute = (arr, attributetoAverage) => {\n        //axisToAverage.forEach((element, index) => {});\n        const scores = [];\n        arr.forEach((element, index) => {\n            if (\n                element.attribute === attributetoAverage &&\n                element.scoreType === \"individual\"\n            ) {\n                scores.push(arr[index].value);\n            }\n        });\n\n        const total = scores.reduce(\n            (accumulator, currentValue) => accumulator + currentValue,\n            0\n        );\n        const average = total / scores.length;\n        return average;\n    };\n\n    renderRowAverage = (props) => {\n        return (\n            <td>\n                {this.averageAttribute(\n                    this.state.scores,\n                    props.attribute\n                ).toFixed(2)}\n            </td>\n        );\n    };\n\n    // A function for generating a row in the input table\n    contextRow = (props) => {\n        return (\n            <tr key={\"row-\" + props.attribute.name}>\n                <td key={\"row-name-\" + props.attribute.name}>\n                    {props.attribute.name}\n                </td>\n                {this.state.typologies.map((typology) => {\n                    return this.state.participants.map((participant) => {\n                        //return <td>{typology.name + participant.name}</td>;\n                        return (\n                            <td\n                                key={\n                                    \"table-entry-\" +\n                                    typology.name +\n                                    \"-\" +\n                                    participant.name +\n                                    \"-\" +\n                                    props.attribute.name\n                                }\n                            >\n                                <Form.Control\n                                    as=\"select\"\n                                    onChange={(event) =>\n                                        this.handleChange(\n                                            event,\n                                            (props = {\n                                                typology: typology,\n                                                participant: participant,\n                                                attribute: props.attribute,\n                                            })\n                                        )\n                                    }\n                                    key={\n                                        \"form-control-\" +\n                                        typology.name +\n                                        \"-\" +\n                                        participant.name +\n                                        \"-\" +\n                                        props.attribute.name\n                                    }\n                                >\n                                    {[0, 1, 2, 3, 4].map((score) => {\n                                        return (\n                                            <option\n                                                key={\n                                                    \"form-option-\" +\n                                                    typology.name +\n                                                    \"-\" +\n                                                    participant.name +\n                                                    \"-\" +\n                                                    props.attribute.name +\n                                                    \"-\" +\n                                                    score\n                                                }\n                                            >\n                                                {score}\n                                            </option>\n                                        );\n                                    })}\n                                </Form.Control>\n                            </td>\n                        );\n                    });\n                })}\n                <this.renderRowAverage attribute={props.attribute} />\n            </tr>\n        );\n    };\n\n    // Using the contextRow and map functions to generate all of the rows in the table\n    allRows = () => {\n        return this.state.attributes.map((attribute) => {\n            return (\n                <this.contextRow\n                    attribute={attribute}\n                    key={\"context-row-\" + attribute.name}\n                />\n            );\n        });\n    };\n\n    // Creating the header for the table. This is a split header which accounts for typologies and participants\n    tableHeader = () => {\n        return (\n            <thead key=\"table-header\">\n                {/* Adding The typology Headers */}\n                <tr key=\"typology-header-row\">\n                    <th key=\"blank-column-head\" rowSpan=\"2\"></th>\n                    {this.state.typologies.map((typology) => {\n                        return (\n                            <th\n                                key={\"typology-header\" + typology.name}\n                                colSpan=\"2\"\n                            >\n                                Typology - {typology.name}\n                            </th>\n                        );\n                    })}\n                    {/* Adding The Average Score Headers */}\n\n                    <th key=\"average-header\" rowSpan=\"2\">\n                        Mean Score (0-4)\n                    </th>\n                </tr>\n                {/* Adding The Participant Headers */}\n                <tr key=\"participant-header-row\">\n                    {this.state.typologies.map((typology) => {\n                        return this.state.participants.map((participant) => {\n                            return (\n                                <th\n                                    key={\n                                        \"participant-header\" + participant.name\n                                    }\n                                >\n                                    {participant.name}\n                                </th>\n                            );\n                        });\n                    })}\n                </tr>\n            </thead>\n        );\n    };\n\n    render() {\n        return (\n            <div key=\"context-score-div\">\n                <h2>Context Scoring</h2>\n                <Table striped bordered hover key=\"table\">\n                    <this.tableHeader key=\"all-table-headers\" />\n                    <tbody key=\"table-body\">\n                        <this.allRows key=\"all-rows\" />\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default ContextScore;\n","import legfunc, { typologies } from \"../data-entry-component/data-entry-data\";\n\nconst newSelections = legfunc;\nnewSelections.map((func) => {\n    func.score = 0;\n});\nconst newFarmer = {\n    number: 0,\n    name: \"\",\n    gender: \"\",\n    typology: \"\",\n    selections: newSelections,\n    total: 0,\n};\n\nconst matrixdata = {\n    farmerAttributes: [\n        {\n            name: \"Number\",\n            label: \"number\",\n        },\n        {\n            name: \"Name\",\n            label: \"name\",\n        },\n        {\n            name: \"Gender\",\n            label: \"gender\",\n        },\n        {\n            name: \"Typology\",\n            label: \"typology\",\n        },\n        {\n            name: \"Matrix Selections\",\n            label: \"selections\",\n        },\n        {\n            name: \"Total\",\n            label: \"total\",\n        },\n    ],\n    farmers: [],\n    legumeFunctions: legfunc,\n    blankFarmer: newFarmer,\n    typology: typologies,\n    gender: [\n        {\n            name: \"Male\",\n            label: \"male\",\n        },\n        {\n            name: \"Female\",\n            label: \"female\",\n        },\n    ],\n};\n\nexport default matrixdata;\n","import legfunc from \"../data-entry-component/data-entry-data\";\n\nlet PairwiseRankingData = {\n    legumeFunctions: legfunc,\n    male: {\n        pairwiseSelection: [],\n        totals: [],\n    },\n    female: {\n        pairwiseSelection: [],\n        totals: [],\n    },\n    pairwiseSelection: [],\n    totals: [],\n};\n\n// Creating all of the potential pairwise functions for each of the entries\nlet previousidentifiers = [];\nfor (\n    let outerArrayIndex = 0;\n    outerArrayIndex < PairwiseRankingData.legumeFunctions.length;\n    outerArrayIndex++\n) {\n    let function1 = PairwiseRankingData.legumeFunctions[outerArrayIndex];\n    PairwiseRankingData.totals.push({\n        attribute: function1,\n        value: 0,\n    });\n\n    PairwiseRankingData.male.totals.push({\n        attribute: function1,\n        value: 0,\n    });\n\n    PairwiseRankingData.female.totals.push({\n        attribute: function1,\n        value: 0,\n    });\n    for (\n        let innerArrayIndex = 0;\n        innerArrayIndex < PairwiseRankingData.legumeFunctions.length;\n        innerArrayIndex++\n    ) {\n        let function2 = PairwiseRankingData.legumeFunctions[innerArrayIndex];\n\n        // Checking if the pair is the same\n        if (function1 !== function2) {\n            let intermediateidentifier = [function1.label, function2.label];\n            intermediateidentifier.sort();\n            let identifier = intermediateidentifier.join(\"_\");\n\n            if (!previousidentifiers.includes(identifier)) {\n                PairwiseRankingData.pairwiseSelection.push({\n                    funct1: function1,\n                    funct2: function2,\n                    identifier: identifier,\n                    value: \"\",\n                });\n\n                PairwiseRankingData.male.pairwiseSelection.push({\n                    funct1: function1,\n                    funct2: function2,\n                    identifier: identifier,\n                    value: \"\",\n                });\n\n                PairwiseRankingData.female.pairwiseSelection.push({\n                    funct1: function1,\n                    funct2: function2,\n                    identifier: identifier,\n                    value: \"\",\n                });\n                previousidentifiers.push(identifier);\n            }\n        }\n    }\n}\nconsole.log(PairwiseRankingData);\nexport default PairwiseRankingData;\n\n// Returning all of the potential combinations using a nested map function. Remember that flatmap returns an unnested list\n/*PairwiseRankingData.pairwiseScores.individual.push(\n    legumeFunctions.flatMap((item, i, arr) => {\n        return arr.flatMap((subitem) => {\n            if (item != subitem) {\n                return {\n                    item1: item,\n                    item2: subitem,\n                    value: {},\n                };\n            } else {\n                return [];\n            }\n        });\n    })\n);*/\n","import React, { Component } from \"react\";\n\nimport \"./participatory-matrix-scoring.css\";\nimport { Table, Button, Form } from \"react-bootstrap\";\n\nimport matrixdata from \"./participatory-matrix-data\";\n\nclass ParticipatoryMatrix extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = matrixdata;\n    }\n\n    componentDidMount() {\n        console.log(this.state);\n        //this.addFarmer();\n    }\n\n    componentDidUpdate() {\n        console.log(this.state.farmers);\n    }\n\n    addFarmer = () => {\n        //This is so important to make sure that we are creating a clean copy\n        //Deep cloning\n        let farmersArray = JSON.parse(JSON.stringify(this.state.farmers));\n        let number = farmersArray.length + 1;\n\n        let newfarmertoAdd = JSON.parse(JSON.stringify(this.state.blankFarmer));\n        newfarmertoAdd.number = number;\n\n        farmersArray.push(newfarmertoAdd);\n\n        this.setState({\n            farmers: farmersArray,\n        });\n    };\n\n    farmEntryFields = (props) => {\n        //console.log(props);\n\n        if (props.attribute.label === \"selections\") {\n            return this.scoringInput(props);\n        } else {\n            if (props.attribute.label === \"name\") {\n                return this.farmerNameInput(props);\n            } else {\n                return this.farmerDetailsSelectInput(props);\n            }\n        }\n    };\n\n    farmerNameInput = (props) => {\n        //console.log(\"name input props-------------------\");\n\n        return (\n            <td>\n                <Form.Control\n                    type=\"text\"\n                    onChange={(event) => this.updateFarmerName(event, props)}\n                />\n            </td>\n        );\n    };\n\n    scoringInput = (props) => {\n        return (\n            <td key={props.attribute.name}>\n                <Form.Control\n                    type=\"number\"\n                    onChange={(event) => this.updateFarmerScore(event, props)}\n                />\n            </td>\n        );\n    };\n\n    farmerDetailsSelectInput = (props) => {\n        return (\n            <td>\n                <Form.Control\n                    as=\"select\"\n                    onChange={(event) =>\n                        this.updateFarmerDetailesSelect(event, props)\n                    }\n                >\n                    <option value=\"\" selected disabled>\n                        Please select\n                    </option>\n\n                    {this.state[props.attribute.label].map((attribute) => {\n                        return <option>{attribute.name}</option>;\n                    })}\n                </Form.Control>\n            </td>\n        );\n    };\n\n    updateFarmerScore = (event, props) => {\n        let farmersArray = [...this.state.farmers];\n\n        //console.log(farmersArray);\n        //console.log(props);\n        // Finding which farmer to subset\n        let whichFarmer = \"\";\n        farmersArray.forEach((farmer, farmerIndex) => {\n            if (farmer.number === props.farmer.number) {\n                whichFarmer = farmerIndex;\n            }\n        });\n\n        let legumefuncs = this.state.legumeFunctions;\n        let whichValue = \"\";\n        // Finding which value to update\n        legumefuncs.forEach((funct, funcIndex) => {\n            if (funct.label === props.legumeFunctions.label) {\n                whichValue = funcIndex;\n            }\n        });\n\n        let newScore = { ...farmersArray[whichFarmer].selections[whichValue] };\n        newScore.score = parseInt(event.target.value);\n        farmersArray[whichFarmer].selections[whichValue] = newScore;\n        this.setState({\n            farmers: farmersArray,\n        });\n\n        this.updateTotal();\n    };\n\n    updateTotal = () => {\n        const farmers = this.state.farmers;\n\n        farmers.map((farmer) => {\n            farmer.total = 0;\n\n            farmer.selections.map((selection) => {\n                farmer.total += selection.score;\n            });\n        });\n\n        this.setState({\n            farmers: farmers,\n        });\n    };\n\n    updateFarmerName = (event, props) => {\n        let farmersArray = [...this.state.farmers];\n\n        farmersArray.forEach((farmer, farmerIndex) => {\n            if (farmer.number === props.farmer.number) {\n                farmersArray[farmerIndex].name = event.target.value;\n            }\n        });\n        this.setState({ farmers: farmersArray });\n    };\n\n    updateFarmerDetailesSelect = (event, props) => {\n        let farmersArray = [...this.state.farmers];\n        farmersArray.forEach((farmer, farmerIndex) => {\n            if (farmer.number === props.farmer.number) {\n                farmersArray[farmerIndex][props.attribute.label] =\n                    event.target.value;\n            }\n        });\n        this.setState({ farmers: farmersArray });\n    };\n\n    tableHeader = () => {\n        return (\n            <thead key=\"participatory-matrix-table-head\">\n                <tr key=\"participatory-matrix-table-head-row\">\n                    <th key=\"participatory-matrix-head-number\" rowSpan=\"2\">\n                        Farmer Number\n                    </th>\n                    <th key=\"participatory-matrix-head-farmer-name\" rowSpan=\"2\">\n                        Farmer Name\n                    </th>\n                    <th key=\"participatory-matrix-head-gender\" rowSpan=\"2\">\n                        Gender\n                    </th>\n                    <th key=\"participatory-matrix-head-typology\" rowSpan=\"2\">\n                        Typology\n                    </th>\n                    <th\n                        key=\"participatory-matrix-head-functions\"\n                        rowSpan=\"1\"\n                        colSpan=\"6\"\n                    >\n                        Functions\n                    </th>\n                    <th rowSpan=\"2\" key=\"participatory-matrix-head-total\">\n                        Total\n                    </th>\n                </tr>\n                <tr>\n                    {this.state.legumeFunctions.map((funct) => {\n                        return (\n                            <th\n                                key={\"participatory-matrix-head-\" + funct.label}\n                            >\n                                {funct.name}\n                            </th>\n                        );\n                    })}\n                </tr>\n            </thead>\n        );\n    };\n\n    tableRows = () => {\n        return this.state.farmers.map((farmer) => {\n            return (\n                <tr key={\"participatory-matrix-body-\" + farmer.number}>\n                    {this.state.farmerAttributes.map((attribute) => {\n                        if (attribute.label === \"selections\") {\n                            return farmer.selections.map((selection) => {\n                                return (\n                                    <this.farmEntryFields\n                                        key={\n                                            \"participatory-matrix-body-\" +\n                                            farmer.number +\n                                            selection.label\n                                        }\n                                        attribute={attribute}\n                                        legumeFunctions={selection}\n                                        farmer={farmer}\n                                    />\n                                );\n                            });\n                        } else if (attribute.label === \"number\") {\n                            return <td>{farmer.number}</td>;\n                        } else if (attribute.label === \"total\") {\n                            return <td>{farmer.total}</td>;\n                        } else {\n                            return (\n                                <this.farmEntryFields\n                                    attribute={attribute}\n                                    farmer={farmer}\n                                />\n                            );\n                        }\n                    })}\n                </tr>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Participatory Matrix Scoring</h2>\n                <p>\n                    Complete participatory matrix scoring exercise. Each\n                    individual has 20 beans which they can distribute across\n                    legume functions. Use the \"Add Farmer\" button to add as many\n                    farmers as you need for the exercises. These scores are\n                    averaged and automatically transcribed into Legume Option\n                    Scores.\n                </p>\n                <Table key=\"participatory-matrix-table\" striped bordered hover>\n                    <this.tableHeader />\n                    <tbody key=\"participatory-matrix-table-body\">\n                        <this.tableRows />\n                    </tbody>\n                </Table>\n                <Button\n                    key=\"participatory-matrix-add-farmer-button\"\n                    className=\"float-right\"\n                    onClick={this.addFarmer}\n                >\n                    Add Farmer\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default ParticipatoryMatrix;\n","import React, { Component } from \"react\";\nimport PairwiseRankingData from \"./pairwise-ranking-data\";\n\nimport \"./pairwise-ranking-component.css\";\n\nimport { Table, Form } from \"react-bootstrap\";\n\nclass PairwiseRanking extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = PairwiseRankingData;\n    }\n\n    componentDidMount() {\n        //console.log(this.state);\n    }\n    componentDidUpdate() {\n        //console.log(this.state);\n    }\n\n    updateSelections = (event, props) => {\n        if (event.target.value == \"\") {\n            alert(\"Must not select empty value\");\n            return;\n        }\n        // Converting legume function name into legume function item\n        let selectedValue = \"\";\n\n        if (event.target.value === props.funct1.name) {\n            selectedValue = props.funct1;\n        }\n        if (event.target.value === props.funct2.name) {\n            selectedValue = props.funct2;\n        }\n\n        let selectionArr = this.state[props.gender].pairwiseSelection;\n        selectionArr.forEach((selectionItem, selectionIndex) => {\n            if (\n                selectionItem.funct1 === props.funct1 &&\n                selectionItem.funct2 === props.funct2\n            ) {\n                selectionArr[selectionIndex].value = selectedValue;\n                //console.log(selectionArr);\n            }\n        });\n\n        const gender = props.gender;\n        this.setState((prevState) => ({\n            [gender]: {\n                ...prevState[gender],\n                pairfemalewiseSelection: selectionArr,\n            },\n        }));\n\n        this.upDateTotalScore(gender);\n    };\n\n    upDateTotalScore = (gender) => {\n        const totalsArray = this.state[gender].totals;\n        totalsArray.forEach((totalsItem, totalsIndex) => {\n            totalsArray[totalsIndex].value = 0;\n            this.state[gender].pairwiseSelection.forEach((selectionItem) => {\n                if (selectionItem.value === totalsItem.attribute) {\n                    totalsArray[totalsIndex].value++;\n                }\n            });\n        });\n        this.setState((prevState) => ({\n            [gender]: {\n                ...prevState[gender],\n                totals: totalsArray,\n            },\n        }));\n    };\n\n    pairWiseTable = (props) => {\n        const tableGender = props.gender;\n        return (\n            <Table\n                key=\"pairwise-ranking-table\"\n                className=\"table-style\"\n                striped\n                bordered\n                hover\n            >\n                <thead key=\"pairwise-ranking-table-header\">\n                    <tr key=\"pairwise-rankning-table-header-row\">\n                        <th key=\"pairwise-ranking-table-header-pair\">Pair</th>\n                        <th key=\"pairwise-ranking-table-header-female\">\n                            Selection Female\n                        </th>\n                        <th key=\"pairwise-ranking-table-header-male\">\n                            Selection Male\n                        </th>\n                    </tr>\n                </thead>\n                <tbody key=\"pairwise-ranking-table-body\">\n                    {this.state[props.gender].pairwiseSelection.map((item) => {\n                        return (\n                            <tr\n                                key={\n                                    \"pairwise-ranking-table-row\" +\n                                    item.funct1.name +\n                                    item.funct2.name\n                                }\n                            >\n                                <td\n                                    key={\n                                        \"pairwise-ranking-table-item-name\" +\n                                        item.funct1.name +\n                                        \"-\" +\n                                        item.funct2.name\n                                    }\n                                >\n                                    {item.funct1.name +\n                                        \" vs \" +\n                                        item.funct2.name}\n                                </td>\n                                <td\n                                    key={\n                                        \"pairwise-ranking-table-item-form\" +\n                                        item.funct1.name +\n                                        \"-\" +\n                                        item.funct2.name +\n                                        \"-female\"\n                                    }\n                                >\n                                    <Form.Control\n                                        key={\n                                            \"pairwise-ranking-table-form\" +\n                                            item.funct1.name +\n                                            \"-\" +\n                                            item.funct2.name +\n                                            \"-female\"\n                                        }\n                                        as=\"select\"\n                                        onChange={(\n                                            event,\n\n                                            props = {\n                                                funct1: item.funct1,\n                                                funct2: item.funct2,\n                                                gender: \"female\",\n                                            }\n                                        ) =>\n                                            this.updateSelections(event, props)\n                                        }\n                                    >\n                                        <option>{item.funct1.name}</option>\n                                        <option>{item.funct2.name}</option>\n                                    </Form.Control>\n                                </td>\n                                <td\n                                    key={\n                                        \"pairwise-ranking-table-item-form\" +\n                                        item.funct1.name +\n                                        \"-\" +\n                                        item.funct2.name +\n                                        \"-male\"\n                                    }\n                                >\n                                    <Form.Control\n                                        as=\"select\"\n                                        key={\n                                            \"pairwise-ranking-table-form\" +\n                                            item.funct1.name +\n                                            \"-\" +\n                                            item.funct2.name +\n                                            \"-male\"\n                                        }\n                                        onChange={(\n                                            event,\n\n                                            props = {\n                                                funct1: item.funct1,\n                                                funct2: item.funct2,\n                                                gender: \"male\",\n                                            }\n                                        ) =>\n                                            this.updateSelections(event, props)\n                                        }\n                                    >\n                                        <option>{item.funct1.name}</option>\n                                        <option>{item.funct2.name}</option>\n                                    </Form.Control>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </Table>\n        );\n    };\n\n    pairWiseResultsTable = (props) => {\n        return (\n            <Table\n                key=\"pairwise-results-table\"\n                striped\n                bordered\n                hover\n                className=\"table-style\"\n            >\n                <thead key=\"pairwise-results-table-header\">\n                    <tr key=\"pairwise-results-table-header-row\">\n                        <th key=\"pairwise-results-table-header-attribute\">\n                            Attribute\n                        </th>\n                        <th key=\"pairwise-results-table-header-female\">\n                            Count Female\n                        </th>\n                        <th key=\"pairwise-results-table-header-male\">\n                            Count Male\n                        </th>\n                    </tr>\n                </thead>\n                <tbody key=\"pairwise-results-table-body\">\n                    {this.state.legumeFunctions.map((item, index) => {\n                        return (\n                            <tr key={\"pairwise-results-table-row-\" + item.name}>\n                                <td\n                                    key={\n                                        \"pairwise-results-table-row-item-\" +\n                                        item.name\n                                    }\n                                >\n                                    {item.name}\n                                </td>\n                                <td\n                                    key={\n                                        \"pairwise-results-table-row-item-female-\" +\n                                        item.name\n                                    }\n                                >\n                                    {this.state.female.totals[index].value}\n                                </td>\n                                <td\n                                    key={\n                                        \"pairwise-results-table-row-item-male-\" +\n                                        item.name\n                                    }\n                                >\n                                    {this.state.male.totals[index].value}\n                                </td>\n                            </tr>\n                        );\n                    })}\n                    {/*this.state[props.gender].totals.map((item) => {\n                        return (\n                            <tr>\n                                <td>{item.attribute.name}</td>\n                                <td>{item.value}</td>\n                            </tr>\n                        );\n                    })*/}\n                </tbody>\n            </Table>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Pairwise Component Ranking</h2>\n                <p>\n                    Select the most important attribute out of the following\n                    pairs\n                </p>\n                <div className=\"table-container\">\n                    <this.pairWiseTable key=\"pairwise-table\" gender=\"female\" />\n                    <this.pairWiseResultsTable\n                        key=\"pairwise-results-table\"\n                        gender=\"female\"\n                        className=\"results-table-pairwise\"\n                    />\n                </div>\n\n                <div className=\"table-container\"></div>\n            </div>\n        );\n    }\n}\nexport default PairwiseRanking;\n","import React, { Component } from \"react\";\n\nimport \"./results-component.css\";\n\nclass Results extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Results</h1>\n            </div>\n        );\n    }\n}\n\nexport default Results;\n","import React from \"react\";\n\nimport \"./data-entry-component.css\";\n\nimport AgroEco from \"../agro-ecological-filter-component/agro-ecological-filter\";\nimport ContextScore from \"../context-scores-component/context-scores-component\";\nimport ParticipatoryMatrix from \"../participatory-matrix-scoring-component/participatory-matrix-scoring\";\nimport PairwiseRanking from \"../pairwise-ranking-component/pairwise-ranking-component\";\n\nimport Results from \"../results-component/results-component\";\n\nclass DataEntry extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>Data Entry</h1>\n                <div className=\"data-entry-container\">\n                    <ContextScore />\n                    <PairwiseRanking />\n                    <ParticipatoryMatrix />\n                    <AgroEco />\n                    <Results />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DataEntry;\n","const allLegumes = [\n    {\n        name: \"Pigeon pea (Cajanus cajan)\",\n        type: \"Grain legume perennial\",\n        food: 4,\n        feed: 2,\n        income: 3,\n        \"erosion-control\": 3,\n        fuel: 2,\n        \"soil-fertility\": 3,\n        land: 1,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"rainfall-min\": 530.0,\n        \"rainfall-max\": 4030.0,\n        \"temp-min\": 16.0,\n        \"temp-max\": 35.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 2000.0,\n        \"soilpH-min\": 4.5,\n        \"soilpH-max\": 8.0,\n        source: \"Lexsys\",\n    },\n    {\n        name:\n            \"Climbing beans (Phaseolus vulgaris), local types available in W Ethiopia, harvested several (4-5) years before reseeding)\",\n        type: \"Grain legume perennial\",\n        food: 4,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 1,\n        labour: 1,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 3,\n        markets: 2,\n        \"rainfall-min\": 600.0,\n        \"rainfall-max\": 3000.0,\n        \"temp-min\": 6.0,\n        \"temp-max\": 29.0,\n        \"alt-min\": 500.0,\n        \"alt-max\": 2000.0,\n        \"soilpH-min\": 5.0,\n        \"soilpH-max\": 7.0,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Climbing beans (Phaseolus vulgaris) annual type\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 1,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 3,\n        markets: 2,\n        \"rainfall-min\": 600.0,\n        \"rainfall-max\": 3000.0,\n        \"temp-min\": 6.0,\n        \"temp-max\": 29.0,\n        \"alt-min\": 500.0,\n        \"alt-max\": 2000.0,\n        \"soilpH-min\": 5.0,\n        \"soilpH-max\": 7.0,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Bush bean (Phaseolus vulgaris)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 1,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 1,\n        \"soil-fertility\": 1,\n        land: 2,\n        labour: 3,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 3,\n        water: 2,\n        markets: 2,\n        \"rainfall-min\": 600.0,\n        \"rainfall-max\": 3000.0,\n        \"temp-min\": 6.0,\n        \"temp-max\": 29.0,\n        \"alt-min\": 500.0,\n        \"alt-max\": 2000.0,\n        \"soilpH-min\": 5.0,\n        \"soilpH-max\": 7.0,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Groundnuts (Arachis hypogaea L.)\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 3,\n        land: 4,\n        labour: 4,\n        seed: 1,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 2,\n        markets: 1,\n        \"rainfall-min\": 310.0,\n        \"rainfall-max\": 3000.0,\n        \"temp-min\": 10.0,\n        \"temp-max\": 45.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 1600.0,\n        \"soilpH-min\": 4.0,\n        \"soilpH-max\": 8.0,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Soybean grain type (Glycine max L.)\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 2,\n        land: 3,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 2,\n        markets: 4,\n        \"rainfall-min\": 700.0,\n        \"rainfall-max\": 2000.0,\n        \"temp-min\": 10.0,\n        \"temp-max\": 30.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 1400.0,\n        \"soilpH-min\": 5.0,\n        \"soilpH-max\": 7.0,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Soybean/dual purpose grain plus fodder (Glycine max L.)\",\n        type: \"Grain legume seasonal\",\n        food: 2,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 3,\n        fuel: 1,\n        \"soil-fertility\": 4,\n        land: 3,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 2,\n        markets: 4,\n        \"rainfall-min\": 700.0,\n        \"rainfall-max\": 2000.0,\n        \"temp-min\": 10.0,\n        \"temp-max\": 30.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 1400.0,\n        \"soilpH-min\": 5.0,\n        \"soilpH-max\": 7.0,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Faba bean (Vicia faba L.) \",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"rainfall-min\": 300.0,\n        \"rainfall-max\": 2090.0,\n        \"temp-min\": 6.0,\n        \"temp-max\": 28.0,\n        \"alt-min\": 1800.0,\n        \"alt-max\": 3200.0,\n        \"soilpH-min\": 4.5,\n        \"soilpH-max\": 8.3,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Cowpea - grain type (Vigna unguiculata)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 1,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"rainfall-min\": 400.0,\n        \"rainfall-max\": 2000.0,\n        \"temp-min\": 13.0,\n        \"temp-max\": 28.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 1500.0,\n        \"soilpH-min\": 4.3,\n        \"soilpH-max\": 7.9,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Cowpea - forage type (Vigna unguiculata)\",\n        type: \"Grain legume seasonal\",\n        food: 2,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 2,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 3,\n        seed: 3,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"rainfall-min\": 400.0,\n        \"rainfall-max\": 2000.0,\n        \"temp-min\": 13.0,\n        \"temp-max\": 28.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 1500.0,\n        \"soilpH-min\": 4.3,\n        \"soilpH-max\": 7.9,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Bambara nut (Voandzou subterraneous)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 0,\n        income: 0,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 1,\n        labour: 1,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 2,\n        \"rainfall-min\": null,\n        \"rainfall-max\": null,\n        \"temp-min\": null,\n        \"temp-max\": null,\n        \"alt-min\": null,\n        \"alt-max\": null,\n        \"soilpH-min\": null,\n        \"soilpH-max\": null,\n        source: null,\n    },\n    {\n        name:\n            \"Chickpea (Cicer arietinum L.) - desi type (for food)- following the main crop\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 3,\n        seed: 1,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"rainfall-min\": 600.0,\n        \"rainfall-max\": 1500.0,\n        \"temp-min\": 7.0,\n        \"temp-max\": 28.0,\n        \"alt-min\": 1170.0,\n        \"alt-max\": 1900.0,\n        \"soilpH-min\": 5.0,\n        \"soilpH-max\": 8.3,\n        source: \"Lexsys\",\n    },\n    {\n        name:\n            \"Chickpea (Cicer arietinum L.) - kabuli type (for export)-main crop\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 3,\n        labour: 3,\n        seed: 3,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 1,\n        markets: 3,\n        \"rainfall-min\": 600.0,\n        \"rainfall-max\": 1500.0,\n        \"temp-min\": 7.0,\n        \"temp-max\": 28.0,\n        \"alt-min\": 1170.0,\n        \"alt-max\": 1900.0,\n        \"soilpH-min\": 5.0,\n        \"soilpH-max\": 8.3,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Green grams/Mung bean (Vigna radiata)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 1,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 1,\n        land: 2,\n        labour: 3,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 1,\n        water: 2,\n        markets: 3,\n        \"rainfall-min\": null,\n        \"rainfall-max\": null,\n        \"temp-min\": null,\n        \"temp-max\": null,\n        \"alt-min\": null,\n        \"alt-max\": null,\n        \"soilpH-min\": null,\n        \"soilpH-max\": null,\n        source: null,\n    },\n    {\n        name: \"Lentils (Lens culinaris Medik.)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 3,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"rainfall-min\": 280.0,\n        \"rainfall-max\": 2430.0,\n        \"temp-min\": 6.0,\n        \"temp-max\": 27.0,\n        \"alt-min\": 1000.0,\n        \"alt-max\": 3800.0,\n        \"soilpH-min\": 4.5,\n        \"soilpH-max\": 8.2,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Lupins - Sweet lupin (new), traditional (Et)\",\n        type: \"Grain legume seasonal\",\n        food: 2,\n        feed: 1,\n        income: 3,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 4,\n        land: 1,\n        labour: 1,\n        seed: 2,\n        \"inp-serv\": 0,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 3,\n        \"rainfall-min\": 350.0,\n        \"rainfall-max\": 1660.0,\n        \"temp-min\": 6.0,\n        \"temp-max\": 26.0,\n        \"alt-min\": 1600.0,\n        \"alt-max\": 3000.0,\n        \"soilpH-min\": 5.0,\n        \"soilpH-max\": 7.0,\n        source: \"Lexsys\",\n    },\n    {\n        name:\n            \"Field Pea (Pisum sativum L), adapted to high rainfall environment\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 3,\n        income: 4,\n        \"erosion-control\": 2,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 3,\n        labour: 2,\n        seed: 2,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 3,\n        markets: 1,\n        \"rainfall-min\": null,\n        \"rainfall-max\": null,\n        \"temp-min\": null,\n        \"temp-max\": null,\n        \"alt-min\": null,\n        \"alt-max\": null,\n        \"soilpH-min\": null,\n        \"soilpH-max\": null,\n        source: null,\n    },\n    {\n        name:\n            \"Field pea (Pisum absynicum var. sativum)-adapted to low rainfall environment\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 3,\n        income: 3,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 2,\n        seed: 3,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"rainfall-min\": null,\n        \"rainfall-max\": null,\n        \"temp-min\": null,\n        \"temp-max\": null,\n        \"alt-min\": null,\n        \"alt-max\": null,\n        \"soilpH-min\": null,\n        \"soilpH-max\": null,\n        source: null,\n    },\n    {\n        name: \"Grass pea - (Lathyrus spp)\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 1,\n        income: 3,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 2,\n        \"rainfall-min\": 320.0,\n        \"rainfall-max\": 1360.0,\n        \"temp-min\": 5.0,\n        \"temp-max\": 27.0,\n        \"alt-min\": 800.0,\n        \"alt-max\": 3000.0,\n        \"soilpH-min\": 4.5,\n        \"soilpH-max\": 8.3,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Cluster bean (Cyamopsis tetragonoloba L.)\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 1,\n        income: 3,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"rainfall-min\": 380.0,\n        \"rainfall-max\": 2410.0,\n        \"temp-min\": 12.0,\n        \"temp-max\": 35.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 1000.0,\n        \"soilpH-min\": 5.3,\n        \"soilpH-max\": 8.3,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Dolichos lablab (Lablab purpureus)- for grain\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 4,\n        income: 3,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"rainfall-min\": 600.0,\n        \"rainfall-max\": 2500.0,\n        \"temp-min\": 15.0,\n        \"temp-max\": 35.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 2100.0,\n        \"soilpH-min\": 4.5,\n        \"soilpH-max\": 7.8,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"French beans (Phaseolus vulgaris)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 0,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 1,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 4,\n        \"knowl-skill\": 3,\n        water: 4,\n        markets: 4,\n        \"rainfall-min\": null,\n        \"rainfall-max\": null,\n        \"temp-min\": null,\n        \"temp-max\": null,\n        \"alt-min\": null,\n        \"alt-max\": null,\n        \"soilpH-min\": null,\n        \"soilpH-max\": null,\n        source: null,\n    },\n    {\n        name: \"Desmodium silverleaf (Desmodium uncinatum)\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 3,\n        labour: 1,\n        seed: 3,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"rainfall-min\": 750.0,\n        \"rainfall-max\": 2400.0,\n        \"temp-min\": 3.0,\n        \"temp-max\": 35.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 2500.0,\n        \"soilpH-min\": 6.5,\n        \"soilpH-max\": 7.5,\n        source: \"SoFT\",\n    },\n    {\n        name: \"Clover (Trifolium)\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 1,\n        \"erosion-control\": 2,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 1,\n        labour: 3,\n        seed: 3,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 3,\n        water: 3,\n        markets: 0,\n        \"rainfall-min\": null,\n        \"rainfall-max\": null,\n        \"temp-min\": null,\n        \"temp-max\": null,\n        \"alt-min\": null,\n        \"alt-max\": null,\n        \"soilpH-min\": null,\n        \"soilpH-max\": null,\n        source: null,\n    },\n    {\n        name: \"Alfalfa/lucerne (Medicago sativa)\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 3,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"rainfall-min\": 500.0,\n        \"rainfall-max\": 2700.0,\n        \"temp-min\": 4.0,\n        \"temp-max\": 27.0,\n        \"alt-min\": 300.0,\n        \"alt-max\": 3000.0,\n        \"soilpH-min\": 5.5,\n        \"soilpH-max\": 8.8,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Stylosanthes guianensis - semi-erect -forage type\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"rainfall-min\": 500.0,\n        \"rainfall-max\": 2000.0,\n        \"temp-min\": 15.0,\n        \"temp-max\": 27.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 2000.0,\n        \"soilpH-min\": 4.0,\n        \"soilpH-max\": 7.7,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Stylosanthes hamata - bush/branching type-forage type\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"rainfall-min\": 600.0,\n        \"rainfall-max\": 1700.0,\n        \"temp-min\": 22.0,\n        \"temp-max\": 30.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 500.0,\n        \"soilpH-min\": 4.0,\n        \"soilpH-max\": 6.0,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Stylosanthes scabra -erect - forage type\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"rainfall-min\": 500.0,\n        \"rainfall-max\": 1700.0,\n        \"temp-min\": 20.0,\n        \"temp-max\": 30.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 600.0,\n        \"soilpH-min\": 4.0,\n        \"soilpH-max\": 7.0,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Hairy Vetch (Vicia villosa )\",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 3,\n        water: 3,\n        markets: 2,\n        \"rainfall-min\": 310.0,\n        \"rainfall-max\": 1660.0,\n        \"temp-min\": 4.0,\n        \"temp-max\": 21.0,\n        \"alt-min\": 1800.0,\n        \"alt-max\": 3000.0,\n        \"soilpH-min\": 4.9,\n        \"soilpH-max\": 8.2,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Vicia dasycarpa\",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 3,\n        water: 3,\n        markets: 2,\n        \"rainfall-min\": null,\n        \"rainfall-max\": null,\n        \"temp-min\": null,\n        \"temp-max\": null,\n        \"alt-min\": null,\n        \"alt-max\": null,\n        \"soilpH-min\": null,\n        \"soilpH-max\": null,\n        source: null,\n    },\n    {\n        name: \"Velvet bean (Mucuna pruriens) \",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 0,\n        feed: 1,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 4,\n        land: 3,\n        labour: 2,\n        seed: 3,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 4,\n        \"rainfall-min\": 650.0,\n        \"rainfall-max\": 3000.0,\n        \"temp-min\": 15.0,\n        \"temp-max\": 35.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 2100.0,\n        \"soilpH-min\": 4.5,\n        \"soilpH-max\": 7.7,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Lablab- forage type (Lablab purpureus)\",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 3,\n        feed: 4,\n        income: 3,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"rainfall-min\": 600.0,\n        \"rainfall-max\": 2500.0,\n        \"temp-min\": 15.0,\n        \"temp-max\": 35.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 2100.0,\n        \"soilpH-min\": 4.5,\n        \"soilpH-max\": 7.8,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Crotolaria juncea\",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 0,\n        feed: 1,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"rainfall-min\": 490.0,\n        \"rainfall-max\": 4290.0,\n        \"temp-min\": 8.0,\n        \"temp-max\": 35.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 2500.0,\n        \"soilpH-min\": 4.5,\n        \"soilpH-max\": 7.5,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Calliandra calothyrus\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 4,\n        fuel: 3,\n        \"soil-fertility\": 3,\n        land: 1,\n        labour: 1,\n        seed: 3,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"rainfall-min\": 1200.0,\n        \"rainfall-max\": 4290.0,\n        \"temp-min\": 10.0,\n        \"temp-max\": 35.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 2000.0,\n        \"soilpH-min\": 4.5,\n        \"soilpH-max\": 7.5,\n        source: \"SoFT\",\n    },\n    {\n        name: \"Gliricidia sepium\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 3,\n        income: 1,\n        \"erosion-control\": 4,\n        fuel: 4,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 2,\n        seed: 3,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 4,\n        \"rainfall-min\": 800.0,\n        \"rainfall-max\": 4000.0,\n        \"temp-min\": 15.0,\n        \"temp-max\": 35.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 2000.0,\n        \"soilpH-min\": 4.3,\n        \"soilpH-max\": 8.0,\n        source: \"SoFT\",\n    },\n    {\n        name: \"Leucaena leucocephala\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 4,\n        fuel: 4,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"rainfall-min\": 500.0,\n        \"rainfall-max\": 4100.0,\n        \"temp-min\": 15.0,\n        \"temp-max\": 35.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 1350.0,\n        \"soilpH-min\": 4.6,\n        \"soilpH-max\": 8.7,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Leucaena trichandra\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"rainfall-min\": 900.0,\n        \"rainfall-max\": 3500.0,\n        \"temp-min\": 10.0,\n        \"temp-max\": 35.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 2000.0,\n        \"soilpH-min\": 5.0,\n        \"soilpH-max\": 8.7,\n        source: \"SoFT\",\n    },\n    {\n        name: \"Leucaena diversifolia\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"rainfall-min\": 500.0,\n        \"rainfall-max\": 4000.0,\n        \"temp-min\": 3.0,\n        \"temp-max\": 35.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 2000.0,\n        \"soilpH-min\": 5.0,\n        \"soilpH-max\": 8.7,\n        source: \"SoFT\",\n    },\n    {\n        name: \"Tree lucerne (Chamaecytisus palmensis)\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"rainfall-min\": 300.0,\n        \"rainfall-max\": 1600.0,\n        \"temp-min\": 3.0,\n        \"temp-max\": 28.0,\n        \"alt-min\": 1000.0,\n        \"alt-max\": 2500.0,\n        \"soilpH-min\": 5.0,\n        \"soilpH-max\": 8.7,\n        source: \"SoFT\",\n    },\n    {\n        name: \"Sesbania sesban\",\n        type: \"Tree legumes - non coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 4,\n        fuel: 3,\n        \"soil-fertility\": 3,\n        land: 1,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"rainfall-min\": 500.0,\n        \"rainfall-max\": 2500.0,\n        \"temp-min\": 15.0,\n        \"temp-max\": 30.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 2300.0,\n        \"soilpH-min\": 5.0,\n        \"soilpH-max\": 7.5,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Sesbania grandiflora\",\n        type: \"Tree legumes - non coppicing\",\n        food: 0,\n        feed: 3,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 3,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"rainfall-min\": 700.0,\n        \"rainfall-max\": 3000.0,\n        \"temp-min\": 22.0,\n        \"temp-max\": 35.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 1000.0,\n        \"soilpH-min\": 4.5,\n        \"soilpH-max\": 8.7,\n        source: \"SoFT\",\n    },\n    {\n        name: \"Tephrosia (Tephrosia vogelii)\",\n        type: \"Tree legumes - non coppicing\",\n        food: 0,\n        feed: 0,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 2,\n        \"rainfall-min\": 870.0,\n        \"rainfall-max\": 2670.0,\n        \"temp-min\": 13.0,\n        \"temp-max\": 29.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 2100.0,\n        \"soilpH-min\": 4.5,\n        \"soilpH-max\": 6.5,\n        source: \"Lexsys\",\n    },\n    {\n        name: \"Faidherbia albidia\",\n        type: \"Tree legumes - non coppicing\",\n        food: 0,\n        feed: 3,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 3,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"rainfall-min\": null,\n        \"rainfall-max\": null,\n        \"temp-min\": null,\n        \"temp-max\": null,\n        \"alt-min\": null,\n        \"alt-max\": null,\n        \"soilpH-min\": null,\n        \"soilpH-max\": null,\n        source: null,\n    },\n    {\n        name: \"Acacia angustissima\",\n        type: \"Tree legumes - non coppicing\",\n        food: 0,\n        feed: 2,\n        income: 3,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"rainfall-min\": 800.0,\n        \"rainfall-max\": 3000.0,\n        \"temp-min\": 10.0,\n        \"temp-max\": 35.0,\n        \"alt-min\": 0.0,\n        \"alt-max\": 2000.0,\n        \"soilpH-min\": 5.0,\n        \"soilpH-max\": 8.7,\n        source: \"SoFT\",\n    },\n];\n\nexport default allLegumes;\n","import allLegumes from \"./legume-all-initial\";\n\nconst legumeTypes = [];\nconst sources = [];\nallLegumes.map((legume) => {\n    if (!legumeTypes.includes(legume.type)) {\n        legumeTypes.push(legume.type);\n    }\n    if (!sources.includes(legume.source) && legume.source !== null) {\n        sources.push(legume.source);\n    }\n});\n\nconst legumesData = {\n    allLegumes: allLegumes,\n    legumeTypes: legumeTypes,\n    sources: sources,\n};\n\nexport default legumesData;\n","import React, { Component } from \"react\";\nimport legumesData from \"./legume-data\";\nclass Legumes extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = legumesData;\n    }\n\n    componentDidMount() {\n        console.log(this.state);\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Legumes</h1>\n            </div>\n        );\n    }\n}\n\nexport default Legumes;\n","import React, { Component } from \"react\";\n\nimport { AiOutlineDatabase, AiFillHome } from \"react-icons/ai\";\nimport { RiUserSettingsLine } from \"react-icons/ri\";\nimport { VscAccount } from \"react-icons/vsc\";\nimport { GoGraph } from \"react-icons/go\";\nimport { FaLeaf } from \"react-icons/fa\";\n\nimport Home from \"../home-component/home-component\";\nimport Admin from \"../admin-data-entry-component/admin-data-entry-component\";\nimport Login from \"../login-component/login-component\";\nimport DataEntry from \"../data-entry-component/data-entry-component\";\n//import Results from \"../results-component/results-component\";\nimport Legumes from \"../legumes-component/legumes-component\";\n\n// Set the icon size for the imported icons\nconst iconSize = 30;\n\nconst sidebarlinkcName = \"sidebar-nav-link\";\n\nconst SidebarData = [\n    {\n        title: \"Home\",\n        routeKey: \"home-route\",\n        component: <Home />,\n        path: \"/home\",\n        icon: <AiFillHome size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n    {\n        title: \"Data Entry\",\n        routeKey: \"data-entry-route\",\n        component: <DataEntry />,\n        path: \"/data-entry\",\n\n        icon: <AiOutlineDatabase size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n    /*{\n        title: \"Results\",\n        routeKey: \"results-route\",\n        component: <Results />,\n        path: \"/results\",\n\n        icon: <GoGraph size={iconSize} />,\n        cName: sidebarlinkcName,\n    },*/\n    {\n        title: \"Legumes\",\n        routeKey: \"legumes-route\",\n        component: <Legumes />,\n        path: \"/legumes\",\n\n        icon: <FaLeaf size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n    {\n        title: \"Admin\",\n        routeKey: \"admin-route\",\n        component: <Admin />,\n        path: \"/admin\",\n        icon: <RiUserSettingsLine size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n    {\n        title: \"Login\",\n        routeKey: \"login-route\",\n        component: <Login />,\n        path: \"/login\",\n        icon: <VscAccount size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n];\n\nexport default SidebarData;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { AiOutlineMenu } from \"react-icons/ai\";\nimport \"./sidebar-component.css\";\nimport SidebarData from \"./sidebar-data\";\n\nclass Sidebar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // Setting the initial state to closed\n\n        this.state = {\n            sideBarOpen: false,\n            legumeCHOICEState: props.props,\n        };\n\n        console.log(this.state.legumeCHOICEState);\n    }\n\n    // When this function is trigered, state of the side-bar is change, which triggers a change in the css\n    toggleSidebar = () => {\n        this.setState({\n            sideBarOpen: !this.state.sideBarOpen,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"container_row\">\n                <div className=\"menu-button\">\n                    <a onClick={this.toggleSidebar}>\n                        <AiOutlineMenu size={50} color=\"black\" />\n                    </a>\n                </div>\n\n                <div\n                    className={\n                        this.state.sideBarOpen\n                            ? \"sidebar-container active\"\n                            : \"sidebar-container\"\n                    }\n                >\n                    <div\n                        key=\"sidebar-header \"\n                        className=\"sidebar-header-container\"\n                    >\n                        <h2>LegumeCHOICE</h2>\n\n                        <a onClick={this.toggleSidebar}>\n                            <div className=\"close-menu-icon\">\n                                <IoIosArrowBack size={40} color=\"white\" />\n                            </div>\n                        </a>\n                    </div>\n\n                    <div className=\"link-container\">\n                        <ul>\n                            {SidebarData.map((item, index) => {\n                                return (\n                                    <Link\n                                        key={index + \"-link-item\"}\n                                        className={item.cName}\n                                        to={item.path}\n                                        onClick={this.toggleSidebar}\n                                    >\n                                        <div className=\"sidebar-list-item\">\n                                            <li\n                                                className=\"sidebar-list-item\"\n                                                key={index + \"-list-item\"}\n                                            >\n                                                <span className=\"side-bar-link-icon\">\n                                                    {item.icon}\n                                                </span>\n                                                <span className=\"side-bar-link-text\">\n                                                    {item.title}\n                                                </span>\n                                            </li>\n                                        </div>\n                                    </Link>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;\n","import React, { useState, createContext } from \"react\";\n\nimport {\n    //BrowserRouter as Router,\n    HashRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\n\nimport Sidebar from \"./components/sidebar-component/sidebar-component\";\n\n// In this location, we have all of the details of each of the individual components\nimport SidebarData from \"./components/sidebar-component/sidebar-data\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AppContext from \"./AppContext\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    changeState = () => {};\n\n    render() {\n        return (\n            <Router basename={process.env.PUBLIC_URL}>\n                <div>\n                    <Sidebar />\n                    <div className=\"outer-page-container\">\n                        <div className=\"inner-page-container\">\n                            <Switch>\n                                <AppContext.Provider value={{}}>\n                                    {SidebarData.map((item) => {\n                                        // A function to return each of the components\n                                        // Each component, and all of its\n                                        return (\n                                            <Route\n                                                exact\n                                                path={item.path}\n                                                key={item.routeKey}\n                                            >\n                                                {item.component}\n                                            </Route>\n                                        );\n                                    })}\n                                    <Redirect exact from=\"/\" to=\"/home\" />\n                                </AppContext.Provider>\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}