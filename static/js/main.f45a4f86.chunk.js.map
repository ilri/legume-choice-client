{"version":3,"sources":["components/home-component/home-component-markdown.md","components/home-component/home-component.js","components/admin-data-entry-component/admin-data-entry-component.js","AppContext.js","components/login-component/login-component.js","components/data-entry-component/data-entry-data.js","components/agro-ecological-filter-component/agro-ecological-data.js","components/agro-ecological-filter-component/agro-ecological-filter.js","components/context-scores-component/context-scores-data.js","components/context-scores-component/context-scores-component.js","components/participatory-matrix-scoring-component/participatory-matrix-data.js","components/participatory-matrix-scoring-component/participatory-matrix-scoring.js","components/pairwise-ranking-component/pairwise-ranking-data.js","components/pairwise-ranking-component/pairwise-ranking-component.js","components/data-entry-component/data-entry-component.js","components/results-component/results-data.js","components/legumes-component/legume-information-clean.js","components/legumes-component/legume-data.js","components/results-component/results-component.js","components/view-context-component/view-context-component.js","components/map-polygon-component/map-polygon-component.js","components/project-information-component/project-information-component.js","components/project-information-component/countries-list.js","components/submit-data-component/submit-data-component.js","components/sidebar-component/sidebar-data.js","components/sidebar-component/sidebar-component.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Home","props","state","file","markdownFile","markdown","axios","get","this","then","response","setState","data","children","Component","Admin","addUserlocal","event","preventDefault","prevUsers","usersLocal","newUser","formEntry","username","some","user","alert","email","handleChange","name","target","value","prevState","deleteUser","params","oldUsers","filter","subsetArrays","array","variable","map","item","saveChanges","usersToAdd","usersToDelete","usersOnline","localusers","includes","length","method","url","newUsers","headers","accept","console","log","catch","error","deleteUsers","userForm","className","Form","onSubmit","Group","controlId","Label","Control","type","onChange","Button","variant","index","onClick","e","id","_id","bind","AppContext","createContext","Login","context","_","cloneDeep","authenticateUser","authenticated","password","undefined","newState","newContext","React","contextType","legfunc","label","typologies","participants","attributes","biofilters","minValue","maxValue","AgroEcoData","AgroEco","tableHeader","renderDefaultValue","tableBody","biofilter","FormControl","bioFiltersArray","forEach","biofilterSubset","biofilterIndex","parseFloat","agroEcoData","Table","striped","bordered","hover","ContextScoreData","scores","attributesIndex","push","scoreType","attribute","score","participantIndex","typologyIndex","participant","typology","ContextScore","renderRadarChart","avergeScores","scoreLabels","radarData","meta","class","color","defaultOptions","size","axes","scales","captions","captionMargin","dots","zoomDistance","setViewBox","options","smoothing","points","d","toFixed","i","axisProps","scaleProps","fill","shapeProps","captionProps","textAnchor","fontSize","fontFamily","dotProps","mouseEnter","dot","mouseLeave","parseInt","scoresArray","changeIndividualScores","changeAverages","arr","query","element","average","averageAttribute","attributetoAverage","reduce","accumulator","currentValue","renderRowAverage","contextRow","rowAttribute","rowTypology","rowParticipant","as","allRows","key","rowSpan","colSpan","contextScores","newSelections","JSON","parse","stringify","func","MatrixData","farmerAttributes","farmers","legumeFunctions","blankFarmer","number","gender","selections","total","summary","scoreTypes","scoresIndividual","legumefunction","legumeFunction","ParticipatoryMatrix","addFarmer","farmersArray","newfarmertoAdd","updateTotal","updateFarmerSummary","farmEntryFields","scoringInput","farmerNameInput","farmerDetailsSelectInput","farmer","updateFarmerName","defaultValue","updateFarmerScore","updateFarmerDetailesSelect","whichFarmer","farmerIndex","legumefuncs","whichValue","funct","funcIndex","newScore","selection","tableRows","calculateAttributeRank","individualScore","firstScore","secondScore","numberOfScores","numberOfOccurences","occurences","conversion","rank","updateTypologyScore","scoresByLegumeFunction","individualScores","mapThroughFarmers","summaryscore","summaryScoreIndex","totalScoreTemp","farmerSelection","selectionIndex","resultsTable","scoreTypeIndex","participatoryMatrixScores","scoreSum","relevantFarmers","farmerSelectionIndex","toLowerCase","PairwiseRankingData","male","pairwiseSelection","totals","female","averages","previousidentifiers","outerArrayIndex","function1","innerArrayIndex","function2","intermediateidentifier","sort","identifier","join","funct1","funct2","PairwiseRanking","updateSelections","selectedValue","selectionArr","selectionItem","pairfemalewiseSelection","upDateTotalScore","totalsArray","totalsItem","totalsIndex","updateAverage","totalsArrayMale","totalsArrayFemale","newAverages","newAverage","pairWiseTable","itemIndex","pairWiseResultsTable","pairWiseScores","DataEntry","renderComponents","components","component","functionFitForm","legfuncCopy","contextFitForm","attributesCopy","legumeResultsToAdd","functionFit","contextFit","agroEcoFit","overallFit","overallRank","legfunction","agroEcoCopy","agroecofiltter","agroEcoFilter","biofiltersCopy","biofiltersCleaned","resultsData","agroEcoFilters","agroEcoFitSummary","functionFitSummary","contextFitSummary","emptyScoresForLegume","legumes","resultsFilter","selectOptions","orderOptions","numberOfLegumesOptions","whichResults","order","numberOfLegumes","formFilled","allLegumes","food","feed","income","fuel","land","labour","seed","water","markets","rainfall","min","max","temp","alt","soilpH","legumeTypes","sources","legume","legumesData","Results","initialiseResults","newLegumes","newLegume","results","contextData","newContextAverages","newcontextscore","contextscore","pairWiseData","participatoryMatrixData","newFunctionAverages","newfunction","pairwisescoreaverages","pairwisescore","matrixscore","calculateLegumeScores","legumeContextScores","legumecontext","formcontext","scoreToReturn","legumeFunctionScores","formfunction","legumeAgroEcoScores","legumeMin","legumeMax","formvalue","newLegumeState","legumeContextScore","contextAttribute","functionAttribute","legumeAgroEco","agroEcoSummary","agroecoscoreAccumulator","agroecoscore","contextAccumulator","contextScore","functionAccumulator","functionScore","avgFit","firstLegume","valuesEncountered","secondLegume","checkFormFilled","returnResultsForSummaryTable","agroEcoTable","orderAndFilterLegume","agroEcoItem","contextFitTable","contextItem","functionFitTable","functionItem","returnRank","returnScore","compareScores","a","b","scoreA","scoreB","legumeArr","slice","changeCellColour","summaryTable","renderLegumeResults","changeSelection","resultsFilters","FormGroup","FormLabel","selectionoption","orderoption","numberoption","renderBody","ViewContext","initialiseContext","appData","center","lat","lng","markerpositions","DraggableMarker","markerRef","useRef","updateMarker","useMemo","dragend","marker","current","newArray","clone","newLat","getLatLng","newLng","changeMarkerPositions","Marker","draggable","eventHandlers","position","ref","DraggablePolygon","Polygon","pathOptions","positions","location","MapPolygon","useState","markerPositions","mapCenter","AppContextMap","useContext","useEffect","MapContainer","zoom","scrollWheelZoom","TileLayer","attribution","countryNames","code","country","projectID","uuidv4","ProjectInformation","userLocationFound","userLocation","projectName","majorRegion","minorRegion","communityName","communityType","description","date","Date","projectInfo","FormText","placeholder","readOnly","selected","rows","SubmitData","currentProject","submitData","dataToSubmit","retrieveProjects","previousProjects","iconSize","sidebarlinkcName","SidebarData","title","routeKey","path","icon","cName","Sidebar","toggleSidebar","sideBarOpen","returnTopBarInformation","project","newProject","to","App","Provider","exact","from","Boolean","window","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f45a4f86.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/home-component-markdown.0579c1b4.md\";","import React, { Component } from \"react\";\nimport \"./home-component.css\";\nimport axios from \"axios\";\nimport ReactMarkdown from \"react-markdown\";\nimport markdownFile from \"./home-component-markdown.md\";\n\nclass Home extends Component {\n    // Initialising state for the component\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            file: markdownFile,\n            markdown: \"\",\n        };\n    }\n\n    // Importing markdown when the file is loaded\n    componentDidMount() {\n        axios.get(this.state.file).then((response) => {\n            this.setState({\n                markdown: response.data,\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <ReactMarkdown children={this.state.markdown}></ReactMarkdown>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\n\nimport \"./admin-data-entry-component.css\";\n\nclass Admin extends Component {\n    /////////////////////////////////////////////////////////////////////////////////\n    // Initialising variables\n    /////////////////////////////////////////////////////////////////////////////////\n    constructor(props) {\n        super(props);\n        //console.log(\"Constructor\");\n        this.state = {\n            usersLocal: [],\n            usersOnline: [],\n\n            formEntry: {\n                username: \"\",\n                email: \"\",\n            },\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.addUserlocal = this.addUserlocal.bind(this);\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Loaded when the page loads. Fetches entries from the database\n    /////////////////////////////////////////////////////////////////////////////////\n    componentDidMount() {\n        axios({\n            method: \"get\",\n            url: \"https://l-gorman.com/api/users\",\n            headers: {\n                accept: \"application/json\",\n            },\n        })\n            .then((response) => {\n                this.setState({\n                    usersLocal: response.data,\n                    usersOnline: response.data,\n                });\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Function for adding user\n    /////////////////////////////////////////////////////////////////////////////////\n    addUserlocal = (event) => {\n        event.preventDefault();\n        //console.log(\"About to update state\");\n        const prevUsers = this.state.usersLocal;\n        const newUser = this.state.formEntry;\n\n        // Checking if the username exists already\n        if (newUser.username === \"\") {\n            alert(\"No username entered\");\n            return;\n        }\n        if (prevUsers.some((user) => user.username === newUser.username)) {\n            alert(\"Username already exists\");\n            return;\n        }\n\n        // Checking if the email exists already\n        if (prevUsers.some((user) => user.email === newUser.email)) {\n            alert(\"email already registered\");\n            return;\n        }\n\n        // Updating state\n        this.setState({\n            usersLocal: [...prevUsers, newUser],\n            formEntry: {\n                username: \"\",\n                email: \"\",\n            },\n        });\n    };\n\n    handleChange = (event) => {\n        event.preventDefault();\n        const name = [event.target.name];\n        const value = event.target.value;\n        this.setState((prevState) => ({\n            formEntry: {\n                ...prevState.formEntry,\n                [name]: value,\n            },\n        }));\n    };\n    /////////////////////////////////////////////////////////////////////////////////\n    // Function for deleting user\n    /////////////////////////////////////////////////////////////////////////////////\n    deleteUser = (event, params = {}) => {\n        event.preventDefault();\n\n        const oldUsers = this.state.usersLocal;\n        const newUser = oldUsers.filter(\n            (user) =>\n                user.email !== params.email || user.username !== params.username\n        );\n        //console.log(newUser);\n\n        this.setState((prevState) => ({\n            usersLocal: newUser,\n        }));\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Subset Arrays\n    /////////////////////////////////////////////////////////////////////////////////\n\n    subsetArrays = (array, variable) => {\n        return array.map((item) => {\n            return item[variable];\n        });\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Making Changes to Db\n    /////////////////////////////////////////////////////////////////////////////////\n    saveChanges = (event) => {\n        //event.preventDefault();\n\n        const usersLocal = this.state.usersLocal;\n        const usersOnline = this.state.usersOnline;\n\n        //console.log(this.subsetArrays(usersOnline, \"email\"));\n        let usersToAdd = [];\n        let usersToDelete = [];\n\n        usersToAdd = usersLocal.filter(\n            (localusers) =>\n                !this.subsetArrays(usersOnline, \"email\").includes(\n                    localusers.email\n                ) &&\n                !this.subsetArrays(usersOnline, \"username\").includes(\n                    localusers.username\n                )\n        );\n\n        usersToDelete = usersOnline.filter(\n            (localusers) =>\n                !this.subsetArrays(usersLocal, \"email\").includes(\n                    localusers.email\n                ) &&\n                !this.subsetArrays(usersLocal, \"username\").includes(\n                    localusers.username\n                )\n        );\n\n        //console.log(usersToDelete);\n\n        //console.log(usersToDelete);\n\n        if (usersToAdd.length > 0) {\n            axios({\n                method: \"post\",\n                url: \"https://l-gorman.com/api/users/insertmany/\",\n                data: { newUsers: usersToAdd },\n                headers: {\n                    accept: \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                },\n            })\n                .then((response) => {\n                    console.log(response);\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        }\n\n        if (usersToDelete.length > 0) {\n            axios({\n                method: \"post\",\n                url: \"https://l-gorman.com/api/users/deletemany/\",\n                data: { deleteUsers: usersToDelete },\n                headers: {\n                    accept: \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                },\n            })\n                .then((response) => {\n                    console.log(response);\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        }\n\n        this.setState(() => ({\n            usersOnline: usersLocal,\n        }));\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // Checking if the component has updated\n    /////////////////////////////////////////////////////////////////////////////////\n    componentDidUpdate() {\n        console.log(this.state);\n    }\n\n    userForm = () => {\n        return (\n            <>\n                <div className=\"form-container\">\n                    <h2>New Users</h2>\n                    <Form onSubmit={this.addUserlocal}>\n                        <Form.Group controlId=\"basicusername\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control\n                                name=\"username\"\n                                type=\"text\"\n                                onChange={this.handleChange}\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"basicemail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                name=\"email\"\n                                type=\"email\"\n                                onChange={this.handleChange}\n                            />\n                        </Form.Group>\n\n                        <Button\n                            className=\"delete-button\"\n                            variant=\"primary\"\n                            type=\"submit\"\n                        >\n                            Add User\n                        </Button>\n                    </Form>\n                </div>\n                <div className=\"form-container\">\n                    <h2>Users</h2>\n                    {this.state.usersLocal.map((user, index) => {\n                        return (\n                            <div\n                                className=\"user-container\"\n                                key={\"user \" + user.email + \" \" + user.username}\n                            >\n                                {index + 1}. {user.username} ({user.email})\n                                <div className=\"deleteButton\">\n                                    <Button\n                                        onClick={(e) =>\n                                            this.deleteUser(e, {\n                                                id: user._id,\n                                                username: user.username,\n                                                email: user.email,\n                                            })\n                                        }\n                                    >\n                                        Delete User\n                                    </Button>\n                                </div>\n                            </div>\n                        );\n                    })}\n                    <div className=\"user-container\">\n                        <Button\n                            onClick={this.saveChanges}\n                            className=\"deleteButton\"\n                        >\n                            Submit\n                        </Button>\n                    </div>\n                </div>\n            </>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>Admin component</h1>\n                <this.userForm />\n            </div>\n        );\n    }\n}\n\nexport default Admin;\n","import React, { createContext } from \"react\";\n\n// Skeleton of the app data\n/*\n    user: {},\n    agroEcoData: {},\n    contextScores: {},\n    pairWiseScores: {},\n    participatoryMatrixScores: {},\n    results: {},\n*/\n\n// Creating the app context to be used with the react contextapi\nconst AppContext = createContext();\n\nexport default AppContext;\n","import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nimport AppContext from \"../../AppContext\";\n\nimport _ from \"lodash\";\n\nimport \"./login-component.css\";\n\nclass Login extends React.Component {\n    // Initialising context\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            authenticated: false,\n        };\n    }\n\n    componentDidMount() {\n        if (this.context.user !== undefined) {\n            const newState = _.cloneDeep(this.context.user);\n            this.setState(newState);\n        }\n\n        if (this.context.user === undefined) {\n            const newContext = _.cloneDeep(this.state);\n            this.context.user = newContext;\n        }\n    }\n    componentDidUpdate() {\n        const newContext = _.cloneDeep(this.state);\n        this.context.user = newContext;\n    }\n\n    handleChange = (event, props) => {\n        this.setState({\n            [props.variable]: event.target.value,\n        });\n\n        this.context.user = _.cloneDeep(this.state);\n    };\n\n    authenticateUser = (event) => {\n        event.preventDefault();\n        this.setState({\n            authenticated: true,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"form-container\">\n                <h1>Login</h1>\n                <Form>\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        value={this.state.username}\n                        onChange={(event) =>\n                            this.handleChange(event, { variable: \"username\" })\n                        }\n                    />\n                    {/* <Form.Label>Project ID</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        value={this.state.projectID}\n                        onChange={(event) =>\n                            this.handleChange(event, { variable: \"projectID\" })\n                        }\n                    /> */}\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        value={this.state.password}\n                        onChange={(event) =>\n                            this.handleChange(event, { variable: \"password\" })\n                        }\n                    />\n\n                    <Button\n                        className=\"submitButton\"\n                        type=\"submit\"\n                        onClick={this.authenticateUser}\n                    >\n                        Authenticate\n                    </Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","export const legfunc = [\n    {\n        name: \"Food\",\n        label: \"food\",\n    },\n    {\n        name: \"Feed\",\n        label: \"feed\",\n    },\n    {\n        name: \"Income\",\n        label: \"income\",\n    },\n    {\n        name: \"Erosion Control\",\n        label: \"erosion-control\",\n    },\n    {\n        name: \"Fuel\",\n        label: \"fuel\",\n    },\n    {\n        name: \"Soil Fertility\",\n        label: \"soil-fertility\",\n    },\n];\n\nexport const typologies = [\n    {\n        name: \"Low\",\n        label: \"low\",\n    },\n    {\n        name: \"Medium\",\n        label: \"med\",\n    },\n    {\n        name: \"High\",\n        label: \"high\",\n    },\n];\n\nexport const participants = [\n    {\n        name: \"Farmer\",\n        label: \"farmer\",\n    },\n    {\n        name: \"Expert\",\n        label: \"expert\",\n    },\n];\n\nexport const attributes = [\n    {\n        name: \"Land\",\n        label: \"land\",\n    },\n    {\n        name: \"Labour\",\n        label: \"labour\",\n    },\n    {\n        name: \"Seed\",\n        label: \"seed\",\n    },\n    {\n        name: \"Inputs and services\",\n        label: \"inp-serv\",\n    },\n    {\n        name: \"Knowledge and skills\",\n        label: \"knowl-skill\",\n    },\n    {\n        name: \"Water\",\n        label: \"water\",\n    },\n    {\n        name: \"Markets\",\n        label: \"markets\",\n    },\n];\n\nexport const biofilters = [\n    {\n        name: \"Rainfall (mm/year)\",\n        label: \"rainfall\",\n        minValue: 280,\n        maxValue: 4290,\n        value: (280 + 4290) / 2,\n    },\n    {\n        name: \"Temperature (mean °C/month)\",\n        label: \"temp\",\n        minValue: 0,\n        maxValue: 45,\n        value: 45 / 2,\n    },\n\n    {\n        name: \"Altitude (average masl)\",\n        label: \"alt\",\n        minValue: 0,\n        maxValue: 3800,\n        value: 3800 / 2,\n    },\n\n    {\n        name: \"Soil pH (average)\",\n        label: \"soilpH\",\n        minValue: 4,\n        maxValue: 9,\n        value: (4 + 9) / 2,\n    },\n];\n","import { biofilters } from \"../data-entry-component/data-entry-data\";\nimport _ from \"lodash\";\n\nconst biofiltersCopy = _.cloneDeep(biofilters);\nconst AgroEcoData = {\n    biofilters: biofiltersCopy,\n};\n\nexport { AgroEcoData };\n","// Component to render the \"agro-ecological-filter\" for data entry\n// This component allows users to specify the context for their study\n\nimport React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport _ from \"lodash\";\nimport { AgroEcoData } from \"./agro-ecological-data\";\n\nimport \"./agro-ecological-filter.css\";\n\nimport AppContext from \"../../AppContext\";\n\nclass AgroEco extends React.Component {\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = _.cloneDeep(AgroEcoData);\n    }\n\n    componentDidMount() {\n        if (this.context.agroEcoData !== undefined) {\n            const newState = this.context.agroEcoData;\n            this.setState(newState);\n        } else {\n            const newContext = this.state;\n            this.context.agroEcoData = newContext;\n        }\n    }\n\n    componentDidUpdate() {\n        const newContext = this.state;\n        this.context.agroEcoData = newContext;\n        console.log(this.context.agroEcoData);\n    }\n    tableHeader = () => {\n        return (\n            <thead>\n                <tr>\n                    <th>Biofilters</th>\n                    <th>Site Values</th>\n                </tr>\n            </thead>\n        );\n    };\n\n    renderDefaultValue = (props) => {\n        return props.value;\n    };\n    tableBody = () => {\n        return (\n            <tbody>\n                {this.state.biofilters.map((biofilter, index) => {\n                    return (\n                        <tr key={\"agro-eco-table\" + biofilter.label}>\n                            <td>{biofilter.name}</td>\n                            <td>\n                                <FormControl\n                                    type=\"number\"\n                                    value={this.renderDefaultValue({\n                                        value: biofilter.value,\n                                    })}\n                                    onChange={(event) => {\n                                        this.handleChange(event, {\n                                            biofilter: biofilter,\n                                        });\n                                    }}\n                                />\n                            </td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        );\n    };\n\n    handleChange = (event, props) => {\n        const bioFiltersArray = this.state.biofilters;\n\n        // if (\n        //     event.target.value < biofilter.minValue ||\n        //     event.target.value > biofilter.maxValue\n        // ) {\n        //     alert(\"Outside of range\");\n        //     return;\n        // }\n\n        bioFiltersArray.forEach((biofilterSubset, biofilterIndex) => {\n            if (biofilterSubset.label === props.biofilter.label) {\n                bioFiltersArray[biofilterIndex].value = parseFloat(\n                    event.target.value\n                );\n            }\n        });\n\n        this.setState({\n            biofilters: bioFiltersArray,\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Agroecological Filter</h2>\n\n                <div className=\"table-container\">\n                    <Form>\n                        <Table striped bordered hover>\n                            {this.tableHeader()}\n\n                            {this.tableBody()}\n                        </Table>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AgroEco;\n","/* Creating all of the possible combinations for context scores \n Could be done in a better way with a series of map functions, or some sort of recursive for loop\nThis is the quickest/best way I could come up with*/\n\nimport {\n    typologies,\n    participants,\n    attributes,\n} from \"../data-entry-component/data-entry-data\";\n\nconst ContextScoreData = {\n    attributes: attributes,\n    participants: participants,\n    typologies: typologies,\n    scores: [],\n};\n\nfor (\n    let attributesIndex = 0;\n    attributesIndex < attributes.length;\n    attributesIndex++\n) {\n    // Giving room to add average scores for each attribute\n    ContextScoreData.scores.push({\n        scoreType: \"average\",\n        attribute: attributes[attributesIndex],\n        score: 0,\n    });\n\n    for (\n        let participantIndex = 0;\n        participantIndex < participants.length;\n        participantIndex++\n    ) {\n        for (\n            let typologyIndex = 0;\n            typologyIndex < typologies.length;\n            typologyIndex++\n        ) {\n            // Giving room to add individual scores for each entry\n            ContextScoreData.scores.push({\n                scoreType: \"individual\",\n                attribute: attributes[attributesIndex],\n                participant: participants[participantIndex],\n                typology: typologies[typologyIndex],\n                score: 0,\n            });\n        }\n    }\n}\n\nexport { ContextScoreData };\n","import React from \"react\";\nimport { ContextScoreData } from \"./context-scores-data\";\n\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport RadarChart from \"react-svg-radar-chart\";\nimport \"react-svg-radar-chart/build/css/index.css\";\n\nimport _ from \"lodash\";\n\nimport \"./context-scores-component.css\";\n\nimport AppContext from \"../../AppContext\";\n\nclass ContextScore extends React.Component {\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = _.cloneDeep(ContextScoreData);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.changeIndividualScores = this.changeIndividualScores.bind(this);\n        this.changeAverages = this.changeAverages.bind(this);\n        this.averageAttribute = this.averageAttribute.bind(this);\n        this.renderRowAverage = this.renderRowAverage.bind(this);\n        this.renderDefaultValue = this.renderDefaultValue.bind(this);\n        this.contextRow = this.contextRow.bind(this);\n        this.allRows = this.allRows.bind(this);\n        this.tableHeader = this.tableHeader.bind(this);\n        this.renderRadarChart = this.renderRadarChart.bind(this);\n    }\n\n    componentDidMount() {\n        //console.log(\"Component did mount!\");\n\n        if (this.context.contextScores !== undefined) {\n            const newState = this.context.contextScores;\n            this.setState(newState);\n            // console.log(\"Set state with old context\");\n        } else {\n            const newContext = this.state;\n            this.context.contextScores = newContext;\n            // console.log(\"Set context with new state\");\n        }\n    }\n\n    componentDidUpdate() {\n        const newContext = this.state;\n        this.context.contextScores = newContext;\n\n        //console.log(this.context);\n\n        console.log(this.state);\n    }\n\n    renderRadarChart = () => {\n        const avergeScores = {};\n        const scoreLabels = {};\n        this.state.scores.forEach((score) => {\n            if (score.scoreType === \"average\") {\n                avergeScores[score.attribute.label] = score.score / 4;\n                scoreLabels[score.attribute.label] = score.attribute.name;\n            }\n        });\n\n        const radarData = [\n            {\n                data: avergeScores,\n                meta: {\n                    class: \"radar-style\",\n                    color: \"green\",\n                },\n            },\n        ];\n\n        const noSmoothing = (points) => {\n            let d =\n                \"M\" + points[0][0].toFixed(4) + \",\" + points[0][1].toFixed(4);\n            for (let i = 1; i < points.length; i++) {\n                d +=\n                    \"L\" +\n                    points[i][0].toFixed(4) +\n                    \",\" +\n                    points[i][1].toFixed(4);\n            }\n            return d + \"z\";\n        };\n\n        const defaultOptions = {\n            size: 200,\n            axes: true, // show axes?\n            scales: 5, // show scale circles?\n            captions: true, // show captions?\n            captionMargin: 10,\n            dots: true, // show dots?\n            zoomDistance: 1.2, // where on the axes are the captions?\n            setViewBox: (options) =>\n                `-${options.captionMargin} 0 ${\n                    options.size + options.captionMargin * 2\n                } ${options.size}`, // custom viewBox ?\n            smoothing: noSmoothing, // shape smoothing function\n            axisProps: () => ({ className: \"axis\" }),\n            scaleProps: () => ({ className: \"scale\", fill: \"none\" }),\n            shapeProps: () => ({ className: \"shape\" }),\n            captionProps: () => ({\n                className: \"caption\",\n                textAnchor: \"middle\",\n                fontSize: 10,\n                fontFamily: \"sans-serif\",\n            }),\n            dotProps: () => ({\n                className: \"dot\",\n                mouseEnter: (dot) => {\n                    console.log(dot);\n                },\n                mouseLeave: (dot) => {\n                    console.log(dot);\n                },\n            }),\n        };\n\n        return (\n            <div className=\"radar-container\">\n                <RadarChart\n                    captions={scoreLabels}\n                    data={radarData}\n                    size={450}\n                    options={defaultOptions}\n                />\n            </div>\n        );\n    };\n\n    handleChange = (event, props) => {\n        props.score = parseInt(event.target.value); // Ensuring that the entered value is an integer\n        const scoresArray = this.state.scores;\n\n        this.changeIndividualScores(scoresArray, props);\n        this.changeAverages(scoresArray, props);\n\n        this.setState({\n            scores: scoresArray,\n        });\n    };\n\n    // Change individual scores in an array through filtering\n    changeIndividualScores = (arr, query) => {\n        arr.forEach((element, index) => {\n            if (\n                element.participant === query.participant &&\n                element.attribute === query.attribute &&\n                element.typology === query.typology\n            ) {\n                arr[index].score = query.score;\n            }\n        });\n    };\n\n    changeAverages = (arr) => {\n        arr.forEach((element, index) => {\n            if (element.scoreType === \"average\") {\n                let average = this.averageAttribute(arr, element.attribute);\n                arr[index].score = average;\n            }\n        });\n    };\n\n    // Update Averages after we see a score change\n    averageAttribute = (arr, attributetoAverage) => {\n        //axisToAverage.forEach((element, index) => {});\n        const scores = [];\n        arr.forEach((element, index) => {\n            if (\n                element.attribute === attributetoAverage &&\n                element.scoreType === \"individual\"\n            ) {\n                scores.push(arr[index].score);\n            }\n        });\n\n        const total = scores.reduce(\n            (accumulator, currentValue) => accumulator + currentValue,\n            0\n        );\n        const average = total / scores.length;\n        return average;\n    };\n\n    renderRowAverage = (props) => {\n        return (\n            <td>\n                {this.averageAttribute(\n                    this.state.scores,\n                    props.attribute\n                ).toFixed(2)}\n            </td>\n        );\n    };\n\n    // Ensuring that the correct values are preselected in the table\n    renderDefaultValue = (props) => {\n        {\n            const valueToReturn = this.state.scores.filter((element, index) => {\n                if (\n                    element.scoreType === \"individual\" &&\n                    element.attribute === props.attribute &&\n                    element.participant === props.participant &&\n                    element.typology === props.typology\n                ) {\n                    return true;\n                }\n            });\n\n            return valueToReturn[0].score;\n        }\n    };\n\n    // A function for generating a row in the input table\n    contextRow = (props) => {\n        const rowAttribute = props.attribute;\n        //console.log(\"---------------Row--------------------\");\n\n        return (\n            <tr>\n                {/* Mapping across the different attributes to return a form to enter score (0-4).\n                e.g \n                - Typology-low-> Farmer -> Land score\n                - Typology-high -> Expert -> Seed score*/}\n                <td>{rowAttribute.name}</td>\n                {this.state.typologies.map((rowTypology) => {\n                    return this.state.participants.map((rowParticipant) => {\n                        // console.log(\n                        //     \"||\" +\n                        //         rowTypology.name +\n                        //         \"||\" +\n                        //         rowParticipant.name +\n                        //         \"||\" +\n                        //         rowAttribute.name\n                        // );\n\n                        return (\n                            <td\n                                key={\n                                    \"table-entry-\" +\n                                    rowTypology.name +\n                                    \"-\" +\n                                    rowParticipant.name +\n                                    \"-\" +\n                                    rowAttribute.name\n                                }\n                            >\n                                <FormControl\n                                    as=\"select\"\n                                    key={props.key}\n                                    value={this.renderDefaultValue({\n                                        typology: rowTypology,\n                                        participant: rowParticipant,\n                                        attribute: rowAttribute,\n                                    })}\n                                    onChange={(event) =>\n                                        this.handleChange(\n                                            event,\n                                            (props = {\n                                                typology: rowTypology,\n                                                participant: rowParticipant,\n                                                attribute: rowAttribute,\n                                            })\n                                        )\n                                    }\n                                    key={\n                                        \"form-control-\" +\n                                        rowTypology.name +\n                                        \"-\" +\n                                        rowParticipant.name +\n                                        \"-\" +\n                                        rowAttribute.name\n                                    }\n                                >\n                                    {[0, 1, 2, 3, 4].map((score) => {\n                                        return (\n                                            <option\n                                                key={\n                                                    \"form-option-\" +\n                                                    rowTypology.name +\n                                                    \"-\" +\n                                                    rowParticipant.name +\n                                                    \"-\" +\n                                                    rowAttribute.name +\n                                                    \"-\" +\n                                                    score\n                                                }\n                                            >\n                                                {score}\n                                            </option>\n                                        );\n                                    })}\n                                </FormControl>\n                            </td>\n                        );\n                    });\n                })}\n                {this.renderRowAverage({ attribute: rowAttribute })}\n            </tr>\n        );\n    };\n\n    // Using the contextRow and map functions to generate all of the rows in the table\n    allRows = () => {\n        if (this.state !== null) {\n            // console.log(\"rendering all rows\");\n            return this.state.attributes.map((attribute) => {\n                return this.contextRow({\n                    attribute: attribute,\n                    key: \"context-row-\" + attribute.name,\n                });\n            });\n        } else {\n            return <h1>Null State</h1>;\n        }\n    };\n\n    // Creating the header for the table. This is a split header which accounts for typologies and participants\n    tableHeader = () => {\n        if (this.state !== null) {\n            // console.log(\"Header rendering\");\n            return (\n                <thead>\n                    {/* Adding The typology Headers */}\n                    <tr>\n                        <th rowSpan=\"2\"></th>\n                        {this.state.typologies.map((typology) => {\n                            return (\n                                <th\n                                    key={\"typology-header\" + typology.name}\n                                    colSpan=\"2\"\n                                >\n                                    Typology - {typology.name}\n                                </th>\n                            );\n                        })}\n                        {/* Adding The Average Score Headers */}\n\n                        <th key=\"average-header\" rowSpan=\"2\">\n                            Mean Score (0-4)\n                        </th>\n                    </tr>\n                    {/* Adding The Participant Headers */}\n                    <tr key=\"participant-header-row\">\n                        {this.state.typologies.map((typology) => {\n                            return this.state.participants.map(\n                                (participant) => {\n                                    return (\n                                        <th\n                                            key={\n                                                \"participant-header\" +\n                                                participant.name\n                                            }\n                                        >\n                                            {participant.name}\n                                        </th>\n                                    );\n                                }\n                            );\n                        })}\n                    </tr>\n                </thead>\n            );\n        } else {\n            return <h1>Null State</h1>;\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Context Scoring</h2>\n                <Form>\n                    <Table striped bordered hover>\n                        {this.tableHeader()}\n                        <tbody>{this.allRows()}</tbody>\n                    </Table>\n                </Form>\n                {this.renderRadarChart()}\n            </div>\n        );\n    }\n}\n\nexport default ContextScore;\n","import { typologies, legfunc } from \"../data-entry-component/data-entry-data\";\n\nconst newSelections = JSON.parse(JSON.stringify(legfunc));\nnewSelections.forEach((func, index) => {\n    if ([0, 1].includes(index)) {\n        func.score = 4;\n    }\n    if ([2, 3, 4, 5].includes(index)) {\n        func.score = 3;\n    }\n});\nconst newFarmer = {\n    // Setting initial values\n    number: 0,\n    name: \"Jane Bloggs\",\n    gender: \"Female\",\n    typology: \"Medium\",\n    selections: newSelections,\n    total: 0,\n};\n\nconst MatrixData = {\n    farmerAttributes: [\n        {\n            name: \"Number\",\n            label: \"number\",\n        },\n        {\n            name: \"Name\",\n            label: \"name\",\n        },\n        {\n            name: \"Gender\",\n            label: \"gender\",\n        },\n        {\n            name: \"Typology\",\n            label: \"typology\",\n        },\n        {\n            name: \"Matrix Selections\",\n            label: \"selections\",\n        },\n        {\n            name: \"Total\",\n            label: \"total\",\n        },\n    ],\n    farmers: [],\n    legumeFunctions: legfunc,\n    blankFarmer: newFarmer,\n    typology: typologies,\n    gender: [\n        {\n            name: \"Male\",\n            label: \"male\",\n        },\n        {\n            name: \"Female\",\n            label: \"female\",\n        },\n    ],\n    summary: {\n        scoreTypes: [],\n        scoresIndividual: [],\n    },\n};\n\nlegfunc.forEach((legumefunction) => {\n    MatrixData.summary.scoresIndividual.push({\n        legumeFunction: legumefunction,\n        scores: [\n            {\n                name: \"Total\",\n                label: \"total\",\n                score: 0,\n            },\n            {\n                name: \"Score (0-5)\",\n                label: \"score\",\n                score: 0,\n            },\n            {\n                name: \"Average Rank\",\n                label: \"rank\",\n                score: 0,\n            },\n        ],\n    });\n});\n\nlegfunc.forEach((legumefunction, index) => {\n    MatrixData.gender.map((gender) => {\n        MatrixData.summary.scoresIndividual[index].scores.push({\n            name: gender.name + \" (0-5)\",\n            label: gender.label,\n            type: \"gender\",\n            score: 0,\n        });\n    });\n    MatrixData.typology.map((typology) => {\n        MatrixData.summary.scoresIndividual[index].scores.push({\n            name: typology.name + \" (0-5)\",\n            label: typology.name,\n            type: \"typology\",\n            score: 0,\n        });\n    });\n});\n\nMatrixData.summary.scoreTypes = MatrixData.summary.scoresIndividual[0].scores;\n\nexport { MatrixData };\n","import React from \"react\";\nimport _ from \"lodash\";\n\nimport \"./participatory-matrix-scoring.css\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { MatrixData } from \"./participatory-matrix-data\";\n\nimport AppContext from \"../../AppContext\";\n\nclass ParticipatoryMatrix extends React.Component {\n    static contextType = AppContext;\n    constructor(props) {\n        super(props);\n        this.state = _.cloneDeep(MatrixData);\n\n        this.addFarmer = this.addFarmer.bind(this);\n        this.farmEntryFields = this.farmEntryFields.bind(this);\n        this.farmerNameInput = this.farmerNameInput.bind(this);\n        this.scoringInput = this.scoringInput.bind(this);\n        this.farmerDetailsSelectInput = this.farmerDetailsSelectInput.bind(\n            this\n        );\n        this.updateFarmerScore = this.updateFarmerScore.bind(this);\n        this.updateTotal = this.updateTotal.bind(this);\n        this.updateFarmerName = this.updateFarmerName.bind(this);\n        this.updateFarmerDetailesSelect = this.updateFarmerDetailesSelect.bind(\n            this\n        );\n        this.tableHeader = this.tableHeader.bind(this);\n        this.tableRows = this.tableRows.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.context.participatoryMatrixScores !== undefined) {\n            const newState = this.context.participatoryMatrixScores;\n            this.setState(newState);\n        } else {\n            const newContext = this.state;\n            this.context.participatoryMatrixScores = newContext;\n\n            this.addFarmer();\n        }\n        //console.log(this.state);\n    }\n\n    componentDidUpdate() {\n        const newContext = this.state;\n        this.context.participatoryMatrixScores = newContext;\n\n        //console.log(this.state);\n    }\n\n    addFarmer = () => {\n        //This is so important to make sure that we are creating a clean copy\n        //Deep cloning\n        let farmersArray = _.cloneDeep(this.state.farmers);\n        let number = farmersArray.length + 1;\n\n        let newfarmertoAdd = _.cloneDeep(this.state.blankFarmer);\n        newfarmertoAdd.number = number;\n\n        farmersArray.push(newfarmertoAdd);\n\n        this.setState(\n            {\n                farmers: farmersArray,\n            },\n            () => {\n                this.updateTotal();\n                this.updateFarmerSummary();\n            }\n        );\n    };\n\n    farmEntryFields = (props) => {\n        //console.log(props);\n\n        if (props.attribute.label === \"selections\") {\n            return this.scoringInput(props);\n        } else {\n            if (props.attribute.label === \"name\") {\n                return this.farmerNameInput(props);\n            } else {\n                return this.farmerDetailsSelectInput(props);\n            }\n        }\n    };\n\n    farmerNameInput = (props) => {\n        return (\n            <td>\n                <FormControl\n                    value={props.farmer.name}\n                    type=\"text\"\n                    onChange={(event) => this.updateFarmerName(event, props)}\n                />\n            </td>\n        );\n    };\n\n    scoringInput = (props) => {\n        return (\n            <td>\n                <FormControl\n                    defaultValue={props.legumeFunctions.score}\n                    type=\"number\"\n                    onChange={(event) => this.updateFarmerScore(event, props)}\n                />\n            </td>\n        );\n    };\n\n    farmerDetailsSelectInput = (props) => {\n        return (\n            <td>\n                <FormControl\n                    as=\"select\"\n                    defaultValue={props.farmer[props.attribute.label]}\n                    onChange={(event) =>\n                        this.updateFarmerDetailesSelect(event, props)\n                    }\n                >\n                    {this.state[props.attribute.label].map((attribute) => {\n                        return (\n                            <option\n                                key={\n                                    \"form-option-\" +\n                                    props.attribute.label +\n                                    \"-\" +\n                                    props.farmer.number +\n                                    \"-\" +\n                                    attribute.label\n                                }\n                            >\n                                {attribute.name}\n                            </option>\n                        );\n                    })}\n                </FormControl>\n            </td>\n        );\n    };\n\n    updateFarmerScore = (event, props) => {\n        let farmersArray = [...this.state.farmers];\n\n        //console.log(farmersArray);\n        //console.log(props);\n        // Finding which farmer to subset\n        let whichFarmer = \"\";\n        farmersArray.forEach((farmer, farmerIndex) => {\n            if (farmer.number === props.farmer.number) {\n                whichFarmer = farmerIndex;\n            }\n        });\n\n        let legumefuncs = this.state.legumeFunctions;\n        let whichValue = \"\";\n        // Finding which value to update\n        legumefuncs.forEach((funct, funcIndex) => {\n            if (funct.label === props.legumeFunctions.label) {\n                whichValue = funcIndex;\n            }\n        });\n\n        let newScore = { ...farmersArray[whichFarmer].selections[whichValue] };\n        newScore.score = parseInt(event.target.value);\n        farmersArray[whichFarmer].selections[whichValue] = newScore;\n        this.setState({\n            farmers: farmersArray,\n        });\n\n        this.updateTotal();\n        this.updateFarmerSummary();\n    };\n\n    updateTotal = () => {\n        const farmers = this.state.farmers;\n\n        farmers.map((farmer) => {\n            farmer.total = 0;\n\n            farmer.selections.map((selection) => {\n                farmer.total += selection.score;\n            });\n        });\n\n        this.setState({\n            farmers: farmers,\n        });\n    };\n\n    updateFarmerName = (event, props) => {\n        let farmersArray = [...this.state.farmers];\n\n        farmersArray.forEach((farmer, farmerIndex) => {\n            if (farmer.number === props.farmer.number) {\n                farmersArray[farmerIndex].name = event.target.value;\n            }\n        });\n        this.setState({ farmers: farmersArray });\n    };\n\n    updateFarmerDetailesSelect = (event, props) => {\n        let farmersArray = [...this.state.farmers]; // making a shallow copy\n        farmersArray.forEach((farmer, farmerIndex) => {\n            if (farmer.number === props.farmer.number) {\n                farmersArray[farmerIndex][props.attribute.label] =\n                    event.target.value;\n            }\n        });\n        this.setState({ farmers: farmersArray });\n        this.updateFarmerSummary();\n    };\n\n    tableHeader = () => {\n        if (this.state !== null) {\n            return (\n                <thead>\n                    <tr>\n                        <th rowSpan=\"2\">Farmer Number</th>\n                        <th rowSpan=\"2\">Farmer Name</th>\n                        <th rowSpan=\"2\">Gender</th>\n                        <th rowSpan=\"2\">Typology</th>\n                        <th rowSpan=\"1\" colSpan=\"6\">\n                            Functions\n                        </th>\n                        <th rowSpan=\"2\">Total</th>\n                    </tr>\n                    <tr>\n                        {this.state.legumeFunctions.map((funct) => {\n                            return (\n                                <th\n                                    key={\n                                        \"participatory-matrix-head-\" +\n                                        funct.label\n                                    }\n                                >\n                                    {funct.name}\n                                </th>\n                            );\n                        })}\n                    </tr>\n                </thead>\n            );\n        } else {\n            return <h1>Null State</h1>;\n        }\n    };\n\n    tableRows = () => {\n        if (this.state !== null) {\n            return this.state.farmers.map((farmer) => {\n                return (\n                    <tr key={\"participatory-matrix-body-\" + farmer.number}>\n                        {this.state.farmerAttributes.map((attribute) => {\n                            // Returning a value for each of the potential selections\n                            if (attribute.label === \"selections\") {\n                                return farmer.selections.map((selection) => {\n                                    return this.farmEntryFields({\n                                        key:\n                                            \"participatory-matrix-body-\" +\n                                            farmer.number +\n                                            selection.label,\n                                        attribute: attribute,\n                                        farmer: farmer,\n                                        legumeFunctions: selection,\n                                        farmer: farmer,\n                                    });\n                                });\n\n                                // Return the farmers number for the row number\n                            } else if (attribute.label === \"number\") {\n                                return (\n                                    <td\n                                        key={\n                                            \"select-input\" +\n                                            farmer.number +\n                                            \"-\" +\n                                            attribute.label\n                                        }\n                                    >\n                                        {farmer.number}\n                                    </td>\n                                );\n                                // Return the total score for that particular farmer\n                            } else if (attribute.label === \"total\") {\n                                return (\n                                    <td\n                                        key={\n                                            \"select-input\" +\n                                            farmer.number +\n                                            \"-\" +\n                                            attribute.label\n                                        }\n                                    >\n                                        {farmer.total}\n                                    </td>\n                                );\n                            } else {\n                                return this.farmEntryFields({\n                                    key:\n                                        \"farmEntry-field-\" +\n                                        attribute.label +\n                                        \"-\" +\n                                        farmer.number,\n                                    attribute: attribute,\n                                    farmer: farmer,\n                                });\n                            }\n                        })}\n                    </tr>\n                );\n            });\n        } else {\n            return <h1>Null State</h1>;\n        }\n    };\n\n    calculateAttributeRank = () => {\n        const scoresIndividual = _.cloneDeep(\n            this.state.summary.scoresIndividual\n        );\n\n        // Initialise the ranks\n        scoresIndividual.forEach((individualScore) => {\n            // Setting rank to zero\n            individualScore.scores[2].score = 1;\n        });\n\n        // Actually ranking the scores (draws included)\n        scoresIndividual.forEach((firstScore) => {\n            scoresIndividual.forEach((secondScore) => {\n                if (firstScore.scores[1].score > secondScore.scores[1].score) {\n                    firstScore.scores[2].score = firstScore.scores[2].score;\n                }\n                if (firstScore.scores[1].score < secondScore.scores[1].score) {\n                    firstScore.scores[2].score += 1;\n                }\n            });\n        });\n\n        // Averaging the ranks based on number of ties\n        const numberOfScores = this.state.legumeFunctions.length;\n        const numberOfOccurences = [];\n        for (let i = 0; i < numberOfScores; i++) {\n            numberOfOccurences[i] = {\n                number: i + 1,\n                occurences: 0,\n                conversion: i + 1,\n            };\n        }\n\n        // Finding out how to convert to ranking average\n        scoresIndividual.forEach((firstScore) => {\n            numberOfOccurences.forEach((rank) => {\n                if (firstScore.scores[2].score == rank.number) {\n                    rank.occurences += 1;\n                    rank.conversion =\n                        (rank.occurences + 2 * rank.number - 1) / 2;\n                }\n            });\n        });\n\n        //applying ranking average conversion\n        scoresIndividual.forEach((firstScore) => {\n            numberOfOccurences.forEach((rank) => {\n                if (firstScore.scores[2].score == rank.number) {\n                    firstScore.scores[2].score = rank.conversion;\n                }\n            });\n        });\n\n        this.setState((prevState) => {\n            return {\n                ...prevState,\n                summary: {\n                    ...prevState.summary,\n                    scoresIndividual: scoresIndividual,\n                },\n            };\n        });\n    };\n\n    // Return a score from the farmer if they match the correct criteria\n    mapThroughFarmers(props) {\n        const farmers = _.cloneDeep(this.state.farmers);\n\n        let scoreSum = 0;\n        let relevantFarmers = 0;\n\n        farmers.map((farmer, farmerIndex) => {\n            farmer.selections.map((farmerSelection, farmerSelectionIndex) => {\n                // If the farmer has the correct gender\n                // If the farmer is selecting the correct attribute\n                // return Score\n                // else\n                // return 0\n\n                if (props.variable === \"typology\") {\n                    if (\n                        props.typology.toLowerCase() ===\n                            farmer.typology.toLowerCase() &&\n                        props.selection.label === farmerSelection.label\n                    ) {\n                        relevantFarmers += 1;\n                        scoreSum += parseFloat(\n                            (farmerSelection.score * 5) / 20\n                        );\n                    }\n                }\n                if (props.variable === \"gender\") {\n                    if (\n                        props.gender.toLowerCase() ===\n                            farmer.gender.toLowerCase() &&\n                        props.selection.label === farmerSelection.label\n                    ) {\n                        relevantFarmers += 1;\n                        scoreSum += parseFloat(\n                            (farmerSelection.score * 5) / 20\n                        );\n                    }\n                }\n            });\n        });\n\n        if (relevantFarmers > 0) {\n            return parseFloat(scoreSum / relevantFarmers).toFixed(2);\n        }\n\n        return parseFloat(scoreSum).toFixed(2);\n    }\n\n    // updateGenderScore = () => {\n    //     const summary = _.cloneDeep(this.state.summary.scoresIndividual);\n\n    //     summary.map((scoresByLegumeFunction) => {\n    //         scoresByLegumeFunction.scores.map((individualScores) => {\n    //             if (individualScores.type === \"gender\") {\n    //                 individualScores.score = this.mapThroughFarmers({\n    //                     variable: \"gender\",\n    //                     gender: individualScores.label,\n    //                     selection: scoresByLegumeFunction.legumeFunction,\n    //                 });\n    //             }\n    //         });\n    //     });\n\n    //     this.setState((prevState) => {\n    //         return {\n    //             ...prevState,\n    //             summary: {\n    //                 ...prevState.summary,\n    //                 scoresIndividual: summary,\n    //             },\n    //         };\n    //     });\n    // };\n\n    updateTypologyScore = () => {\n        const summary = _.cloneDeep(this.state.summary.scoresIndividual);\n\n        summary.map((scoresByLegumeFunction) => {\n            scoresByLegumeFunction.scores.map((individualScores) => {\n                if (individualScores.type === \"typology\") {\n                    individualScores.score = this.mapThroughFarmers({\n                        variable: \"typology\",\n                        typology: individualScores.label,\n                        selection: scoresByLegumeFunction.legumeFunction,\n                    });\n                }\n                if (individualScores.type === \"gender\") {\n                    individualScores.score = this.mapThroughFarmers({\n                        variable: \"gender\",\n                        gender: individualScores.label,\n                        selection: scoresByLegumeFunction.legumeFunction,\n                    });\n                }\n            });\n        });\n\n        this.setState(\n            (prevState) => {\n                return {\n                    ...prevState,\n                    summary: {\n                        ...prevState.summary,\n                        scoresIndividual: summary,\n                    },\n                };\n            },\n            () => {\n                this.calculateAttributeRank();\n            }\n        );\n    };\n\n    updateFarmerSummary = () => {\n        const summary = _.cloneDeep(this.state.summary.scoresIndividual);\n        const farmers = _.cloneDeep(this.state.farmers);\n        // Update total score per attribute\n        summary.forEach((summaryscore, summaryScoreIndex) => {\n            summary[summaryScoreIndex].scores[0].score = 0;\n            let totalScoreTemp = _.cloneDeep(\n                summary[summaryScoreIndex].scores[0].score\n            );\n            farmers.forEach((farmer) => {\n                farmer.selections.forEach((farmerSelection, selectionIndex) => {\n                    if (\n                        farmerSelection.label ==\n                        summaryscore.legumeFunction.label\n                    ) {\n                        // Setting total score\n\n                        totalScoreTemp +=\n                            farmerSelection.score / farmers.length;\n\n                        summary[summaryScoreIndex].scores[0].score = parseFloat(\n                            parseFloat(totalScoreTemp).toFixed(2)\n                        );\n                        // Setting 0-5 score\n                        summary[summaryScoreIndex].scores[1].score = parseFloat(\n                            parseFloat((totalScoreTemp * 5) / 20).toFixed(2)\n                        );\n                    }\n                });\n            });\n        });\n\n        this.setState(\n            (prevState) => {\n                return {\n                    ...prevState,\n                    summary: {\n                        ...prevState.summary,\n                        scoresIndividual: summary,\n                    },\n                };\n            },\n            () => {\n                //this.updateGenderScore();\n                this.updateTypologyScore();\n            }\n        );\n    };\n\n    resultsTable = () => {\n        return (\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th rowSpan=\"2\">Summary Type</th>\n                        <th\n                            rowSpan=\"1\"\n                            colSpan={this.state.legumeFunctions.length}\n                        >\n                            Function\n                        </th>\n                    </tr>\n\n                    <tr>\n                        {this.state.legumeFunctions.map((funct) => {\n                            return (\n                                <th\n                                    key={\n                                        \"participatory-matrix-head-\" +\n                                        funct.label\n                                    }\n                                >\n                                    {funct.name}\n                                </th>\n                            );\n                        })}\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {this.state.summary.scoreTypes.map(\n                        (type, scoreTypeIndex) => {\n                            return (\n                                <tr>\n                                    <td>{type.name}</td>\n                                    {this.state.summary.scoresIndividual.map(\n                                        (individualScore) => {\n                                            return (\n                                                <td>\n                                                    {\n                                                        individualScore.scores[\n                                                            scoreTypeIndex\n                                                        ].score\n                                                    }\n                                                </td>\n                                            );\n                                        }\n                                    )}\n                                </tr>\n                            );\n                        }\n                    )}\n                </tbody>\n            </Table>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Participatory Matrix Scoring</h2>\n                <p>\n                    Complete participatory matrix scoring exercise. Each\n                    individual has 20 beans which they can distribute across\n                    legume functions. Use the \"Add Farmer\" button to add as many\n                    farmers as you need for the exercises. These scores are\n                    averaged and automatically transcribed into Legume Option\n                    Scores.\n                </p>\n                <Form>\n                    <Table striped bordered hover>\n                        {this.tableHeader()}\n                        <tbody>{this.tableRows()}</tbody>\n                    </Table>\n                    <Button className=\"float-right\" onClick={this.addFarmer}>\n                        Add Farmer\n                    </Button>\n                </Form>\n\n                {this.resultsTable()}\n            </div>\n        );\n    }\n}\n\nexport default ParticipatoryMatrix;\n","import { legfunc } from \"../data-entry-component/data-entry-data\";\n\nlet PairwiseRankingData = {\n    legumeFunctions: legfunc,\n    male: {\n        pairwiseSelection: [],\n        totals: [],\n    },\n    female: {\n        pairwiseSelection: [],\n        totals: [],\n    },\n    averages: [],\n};\n\n// Creating all of the potential pairwise functions for each of the entries\nlet previousidentifiers = [];\nfor (\n    let outerArrayIndex = 0;\n    outerArrayIndex < PairwiseRankingData.legumeFunctions.length;\n    outerArrayIndex++\n) {\n    let function1 = PairwiseRankingData.legumeFunctions[outerArrayIndex];\n\n    PairwiseRankingData.male.totals.push({\n        attribute: function1,\n        value: 0,\n    });\n\n    PairwiseRankingData.female.totals.push({\n        attribute: function1,\n        value: 0,\n    });\n\n    PairwiseRankingData.averages.push({\n        attribute: function1,\n        value: 0,\n    });\n\n    for (\n        let innerArrayIndex = 0;\n        innerArrayIndex < PairwiseRankingData.legumeFunctions.length;\n        innerArrayIndex++\n    ) {\n        let function2 = PairwiseRankingData.legumeFunctions[innerArrayIndex];\n\n        // Checking if the pair is the same\n        if (function1 !== function2) {\n            let intermediateidentifier = [function1.label, function2.label];\n            intermediateidentifier.sort();\n            let identifier = intermediateidentifier.join(\"_\");\n\n            if (!previousidentifiers.includes(identifier)) {\n                PairwiseRankingData.male.pairwiseSelection.push({\n                    funct1: function1,\n                    funct2: function2,\n                    identifier: identifier,\n                    value: function1,\n                });\n\n                PairwiseRankingData.female.pairwiseSelection.push({\n                    funct1: function1,\n                    funct2: function2,\n                    identifier: identifier,\n                    value: function1,\n                });\n                previousidentifiers.push(identifier);\n            }\n        }\n    }\n}\nexport default PairwiseRankingData;\n","import React, { Component } from \"react\";\nimport PairwiseRankingData from \"./pairwise-ranking-data\";\n\nimport \"./pairwise-ranking-component.css\";\n\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nimport AppContext from \"../../AppContext\";\n\nclass PairwiseRanking extends Component {\n    static contextType = AppContext;\n    constructor(props) {\n        super(props);\n\n        this.state = PairwiseRankingData;\n    }\n\n    componentDidMount() {\n        //console.log(this.state);\n\n        if (this.context.pairWiseScores !== undefined) {\n            const newState = this.context.pairWiseScores;\n            this.setState(newState);\n        } else {\n            const newContext = this.state;\n            this.context.pairWiseScores = newContext;\n        }\n        this.upDateTotalScore(\"male\");\n        this.upDateTotalScore(\"female\");\n    }\n    componentDidUpdate() {\n        const newContext = this.state;\n        this.context.pairWiseScores = newContext;\n        console.log(this.state);\n    }\n\n    updateSelections = (event, props) => {\n        if (event.target.value == \"\") {\n            alert(\"Must not select empty value\");\n            return;\n        }\n        // Converting legume function name into legume function item\n        let selectedValue = \"\";\n\n        if (event.target.value === props.funct1.name) {\n            selectedValue = props.funct1;\n        }\n        if (event.target.value === props.funct2.name) {\n            selectedValue = props.funct2;\n        }\n\n        let selectionArr = this.state[props.gender].pairwiseSelection;\n        selectionArr.forEach((selectionItem, selectionIndex) => {\n            if (\n                selectionItem.funct1 === props.funct1 &&\n                selectionItem.funct2 === props.funct2\n            ) {\n                selectionArr[selectionIndex].value = selectedValue;\n                //console.log(selectionArr);\n            }\n        });\n\n        const gender = props.gender;\n        this.setState((prevState) => ({\n            [gender]: {\n                ...prevState[gender],\n                pairfemalewiseSelection: selectionArr,\n            },\n        }));\n\n        this.upDateTotalScore(gender);\n    };\n\n    upDateTotalScore = (gender) => {\n        const totalsArray = this.state[gender].totals;\n        totalsArray.forEach((totalsItem, totalsIndex) => {\n            totalsArray[totalsIndex].value = 0;\n            this.state[gender].pairwiseSelection.forEach((selectionItem) => {\n                if (selectionItem.value === totalsItem.attribute) {\n                    totalsArray[totalsIndex].value++;\n                }\n            });\n        });\n        this.setState((prevState) => ({\n            [gender]: {\n                ...prevState[gender],\n                totals: totalsArray,\n            },\n        }));\n\n        this.updateAverage();\n    };\n\n    updateAverage = () => {\n        const totalsArrayMale = this.state[\"male\"].totals;\n        const totalsArrayFemale = this.state[\"female\"].totals;\n\n        const newAverages = this.state.averages;\n\n        newAverages.map((average, index) => {\n            const newAverage =\n                (totalsArrayMale[index].value +\n                    totalsArrayFemale[index].value) /\n                2;\n            newAverages[index].value = newAverage;\n            this.setState({\n                averages: newAverages,\n            });\n        });\n    };\n\n    pairWiseTable = (props) => {\n        const tableGender = props.gender;\n        return (\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th>Pair</th>\n                        <th>Selection Female</th>\n                        <th>Selection Male</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state[props.gender].pairwiseSelection.map(\n                        (item, itemIndex) => {\n                            return (\n                                <tr\n                                    key={\n                                        \"pairwise-ranking-table-row\" +\n                                        item.funct1.name +\n                                        item.funct2.name\n                                    }\n                                >\n                                    <td\n                                        key={\n                                            \"pairwise-ranking-table-item-name\" +\n                                            item.funct1.name +\n                                            \"-\" +\n                                            item.funct2.name\n                                        }\n                                    >\n                                        {item.funct1.name +\n                                            \" vs \" +\n                                            item.funct2.name}\n                                    </td>\n                                    <td\n                                        key={\n                                            \"pairwise-ranking-table-item-form\" +\n                                            item.funct1.name +\n                                            \"-\" +\n                                            item.funct2.name +\n                                            \"-female\"\n                                        }\n                                    >\n                                        <FormControl\n                                            value={\n                                                this.state[\"female\"]\n                                                    .pairwiseSelection[\n                                                    itemIndex\n                                                ].value.name\n                                            }\n                                            key={\n                                                \"pairwise-ranking-table-form\" +\n                                                item.funct1.name +\n                                                \"-\" +\n                                                item.funct2.name +\n                                                \"-female\"\n                                            }\n                                            as=\"select\"\n                                            onChange={(\n                                                event,\n\n                                                props = {\n                                                    funct1: item.funct1,\n                                                    funct2: item.funct2,\n                                                    gender: \"female\",\n                                                }\n                                            ) =>\n                                                this.updateSelections(\n                                                    event,\n                                                    props\n                                                )\n                                            }\n                                        >\n                                            <option>{item.funct1.name}</option>\n                                            <option>{item.funct2.name}</option>\n                                        </FormControl>\n                                    </td>\n                                    <td\n                                        key={\n                                            \"pairwise-ranking-table-item-form\" +\n                                            item.funct1.name +\n                                            \"-\" +\n                                            item.funct2.name +\n                                            \"-male\"\n                                        }\n                                    >\n                                        <FormControl\n                                            as=\"select\"\n                                            value={\n                                                this.state[\"male\"]\n                                                    .pairwiseSelection[\n                                                    itemIndex\n                                                ].value.name\n                                            }\n                                            key={\n                                                \"pairwise-ranking-table-form\" +\n                                                item.funct1.name +\n                                                \"-\" +\n                                                item.funct2.name +\n                                                \"-male\"\n                                            }\n                                            onChange={(\n                                                event,\n\n                                                props = {\n                                                    funct1: item.funct1,\n                                                    funct2: item.funct2,\n                                                    gender: \"male\",\n                                                }\n                                            ) =>\n                                                this.updateSelections(\n                                                    event,\n                                                    props\n                                                )\n                                            }\n                                        >\n                                            <option>{item.funct1.name}</option>\n                                            <option>{item.funct2.name}</option>\n                                        </FormControl>\n                                    </td>\n                                </tr>\n                            );\n                        }\n                    )}\n                </tbody>\n            </Table>\n        );\n    };\n\n    pairWiseResultsTable = (props) => {\n        return (\n            <Table striped bordered hover className=\"table-style\">\n                <thead>\n                    <tr>\n                        <th>Attribute</th>\n                        <th>Count Female</th>\n                        <th>Count Male</th>\n                        <th>Average Count</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state.legumeFunctions.map((item, index) => {\n                        return (\n                            <tr key={\"pairwise-results-table-row-\" + item.name}>\n                                <td\n                                    key={\n                                        \"pairwise-results-table-row-item-\" +\n                                        item.name\n                                    }\n                                >\n                                    {item.name}\n                                </td>\n                                <td\n                                    key={\n                                        \"pairwise-results-table-row-item-female-\" +\n                                        item.name\n                                    }\n                                >\n                                    {this.state.female.totals[index].value}\n                                </td>\n                                <td\n                                    key={\n                                        \"pairwise-results-table-row-item-male-\" +\n                                        item.name\n                                    }\n                                >\n                                    {this.state.male.totals[index].value}\n                                </td>\n\n                                <td\n                                    key={\n                                        \"pairwise-results-table-row-item-average-\" +\n                                        item.name\n                                    }\n                                >\n                                    {this.state.averages[index].value}\n                                </td>\n                            </tr>\n                        );\n                    })}\n                    {/*this.state[props.gender].totals.map((item) => {\n                        return (\n                            <tr>\n                                <td>{item.attribute.name}</td>\n                                <td>{item.value}</td>\n                            </tr>\n                        );\n                    })*/}\n                </tbody>\n            </Table>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Pairwise Component Ranking</h2>\n                <p>\n                    Select the most important attribute out of the following\n                    pairs\n                </p>\n                <div className=\"table-container\">\n                    <Form className=\"table-container\">\n                        {this.pairWiseTable({ gender: \"female\" })}\n                    </Form>\n                    {this.pairWiseResultsTable({\n                        gender: \"female\",\n                        className: \"results-table-pairwise\",\n                    })}\n                </div>\n\n                <div className=\"table-container\"></div>\n            </div>\n        );\n    }\n}\nexport default PairwiseRanking;\n","import React from \"react\";\n\nimport \"./data-entry-component.css\";\n\nimport AgroEco from \"../agro-ecological-filter-component/agro-ecological-filter\";\nimport ContextScore from \"../context-scores-component/context-scores-component\";\nimport ParticipatoryMatrix from \"../participatory-matrix-scoring-component/participatory-matrix-scoring\";\nimport PairwiseRanking from \"../pairwise-ranking-component/pairwise-ranking-component\";\n\n// import Results from \"../results-component/results-component\";\n\nclass DataEntry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            components: [\n                <ContextScore key=\"contextScore\" />,\n                <PairwiseRanking key=\"pairwise\" />,\n                <ParticipatoryMatrix key=\"matrix\" />,\n                <AgroEco key=\"agroeco\" />,\n                //<Results key=\"results\" />,\n            ],\n        };\n    }\n\n    renderComponents = () => {};\n    render() {\n        return (\n            <div>\n                <h1>Data Entry</h1>\n                <div className=\"data-entry-container\">\n                    {this.state.components.map((component) => {\n                        return component;\n                    })}\n                    ;\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DataEntry;\n","import {\n    legfunc,\n    attributes,\n    biofilters,\n} from \"../data-entry-component/data-entry-data\";\nimport _ from \"lodash\";\n\n// data on all of the legumes initially\n\n// go through the legume functions, and average matrix score and pairwise ranking score\nconst functionFitForm = [];\nlet legfuncCopy = _.cloneDeep(legfunc);\nlegfuncCopy.forEach((legumefunction) => {\n    functionFitForm.push({\n        legumeFunction: legumefunction,\n        score: 0,\n    });\n});\n\n// simply pass through the context scores\nconst contextFitForm = [];\nlet attributesCopy = _.cloneDeep(attributes);\nattributesCopy.forEach((attribute) => {\n    contextFitForm.push({\n        attribute: attribute,\n        score: 0,\n    });\n});\n\n// Adding all of the attributes to the initial legumes\n// For each component we have to add an averageScore and an overall rank\n// For the final summary, we are only presenting the ranks\nlet legumeResultsToAdd = {\n    functionFit: [],\n    contextFit: [],\n    agroEcoFit: [],\n    overallFit: [],\n};\n\n// Adding legume function scores to each legume\nattributesCopy.map((attribute) => {\n    legumeResultsToAdd.contextFit.push({\n        attribute: attribute,\n        score: 0,\n    });\n});\nlegumeResultsToAdd.contextFit.push({\n    overallFit: 0,\n});\nlegumeResultsToAdd.contextFit.push({\n    overallRank: 1,\n});\n\n// Adding context scores to each legume\nlegfuncCopy.map((legfunction) => {\n    legumeResultsToAdd.functionFit.push({\n        legumeFunction: legfunction,\n        score: 0,\n    });\n});\nlegumeResultsToAdd.functionFit.push({\n    overallFit: 0,\n});\nlegumeResultsToAdd.functionFit.push({\n    overallRank: 1,\n});\n\n// Adding agroEco scores to each legume\nconst agroEcoCopy = _.cloneDeep(biofilters);\n\nagroEcoCopy.map((agroecofiltter) => {\n    legumeResultsToAdd.agroEcoFit.push({\n        agroEcoFilter: agroecofiltter,\n        score: 0,\n    });\n});\nlegumeResultsToAdd.agroEcoFit.push({\n    overallFit: 0,\n});\nlegumeResultsToAdd.agroEcoFit.push({\n    overallRank: 1,\n});\n\n// Overall Scores\nlegumeResultsToAdd.overallFit.push({\n    overallFit: 0,\n});\nlegumeResultsToAdd.overallFit.push({\n    overallRank: 1,\n});\n\nconst agroEcoFilters = [];\n\nconst biofiltersCopy = _.cloneDeep(biofilters);\nconst biofiltersCleaned = [];\nbiofiltersCopy.map((biofilter) => {\n    biofiltersCleaned.push({\n        name: biofilter.name,\n        label: biofilter.label,\n    });\n});\n\n// Compiling all of the results data together\nconst resultsData = {\n    legumeFunctions: legfuncCopy,\n    attributes: attributes,\n    agroEcoFilters: biofiltersCleaned,\n    agroEcoFitSummary: agroEcoCopy,\n\n    functionFitSummary: functionFitForm,\n    contextFitSummary: contextFitForm,\n    emptyScoresForLegume: legumeResultsToAdd,\n    legumes: [],\n\n    resultsFilter: {\n        selectOptions: [\n            \"Summary\",\n            \"AgroEco Scores\",\n            \"Context Scores\",\n            \"Function Scores\",\n        ],\n        orderOptions: [\n            \"Overall Score\",\n            \"AgroEco Score\",\n            \"Context Score\",\n            \"Function Score\",\n        ],\n        numberOfLegumesOptions: [\"5\", \"10\", \"20\", \"All\"],\n\n        selection: {\n            whichResults: \"Summary\",\n            order: \"Overall Score\",\n            numberOfLegumes: \"5\",\n        },\n    },\n\n    formFilled: false,\n};\n\nexport { resultsData };\n","export const allLegumes = [\n    {\n        name: \"Pigeon pea (Cajanus cajan)\",\n        type: \"Grain legume perennial\",\n        food: 4,\n        feed: 2,\n        income: 3,\n        \"erosion-control\": 3,\n        fuel: 2,\n        \"soil-fertility\": 3,\n        land: 1,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 530.0, max: 4030.0 }],\n        temp: [{ min: 16.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 4.5, max: 8.0 }],\n    },\n    {\n        name:\n            \"Climbing beans (Phaseolus vulgaris), local types available in W Ethiopia, harvested several (4-5) years before reseeding)\",\n        type: \"Grain legume perennial\",\n        food: 4,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 1,\n        labour: 1,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 3,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 3000.0 }],\n        temp: [{ min: 6.0, max: 29.0 }],\n        alt: [{ min: 500.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name: \"Climbing beans (Phaseolus vulgaris) annual type\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 1,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 3,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 3000.0 }],\n        temp: [{ min: 6.0, max: 29.0 }],\n        alt: [{ min: 500.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name: \"Bush bean (Phaseolus vulgaris)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 1,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 1,\n        \"soil-fertility\": 1,\n        land: 2,\n        labour: 3,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 3,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 3000.0 }],\n        temp: [{ min: 6.0, max: 29.0 }],\n        alt: [{ min: 500.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name: \"Groundnuts (Arachis hypogaea L.)\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 3,\n        land: 4,\n        labour: 4,\n        seed: 1,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 2,\n        markets: 1,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 310.0, max: 3000.0 }],\n        temp: [{ min: 10.0, max: 45.0 }],\n        alt: [{ min: 0.0, max: 1600.0 }],\n        soilpH: [{ min: 4.0, max: 8.0 }],\n    },\n    {\n        name: \"Soybean grain type (Glycine max L.)\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 2,\n        land: 3,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 2,\n        markets: 4,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 700.0, max: 2000.0 }],\n        temp: [{ min: 10.0, max: 30.0 }],\n        alt: [{ min: 0.0, max: 1400.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name: \"Soybean/dual purpose grain plus fodder (Glycine max L.)\",\n        type: \"Grain legume seasonal\",\n        food: 2,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 3,\n        fuel: 1,\n        \"soil-fertility\": 4,\n        land: 3,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 2,\n        markets: 4,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 700.0, max: 2000.0 }],\n        temp: [{ min: 10.0, max: 30.0 }],\n        alt: [{ min: 0.0, max: 1400.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name: \"Faba bean (Vicia faba L.) \",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 300.0, max: 2090.0 }],\n        temp: [{ min: 6.0, max: 28.0 }],\n        alt: [{ min: 1800.0, max: 3200.0 }],\n        soilpH: [{ min: 4.5, max: 8.3 }],\n    },\n    {\n        name: \"Cowpea \\u2013 grain type (Vigna unguiculata)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 1,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 400.0, max: 2000.0 }],\n        temp: [{ min: 13.0, max: 28.0 }],\n        alt: [{ min: 0.0, max: 1500.0 }],\n        soilpH: [{ min: 4.3, max: 7.9 }],\n    },\n    {\n        name: \"Cowpea \\u2013 forage type (Vigna unguiculata)\",\n        type: \"Grain legume seasonal\",\n        food: 2,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 2,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 3,\n        seed: 3,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 400.0, max: 2000.0 }],\n        temp: [{ min: 13.0, max: 28.0 }],\n        alt: [{ min: 0.0, max: 1500.0 }],\n        soilpH: [{ min: 4.3, max: 7.9 }],\n    },\n    {\n        name: \"Bambara nut (Voandzou subterraneous)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 0,\n        income: 0,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 1,\n        labour: 1,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name:\n            \"Chickpea (Cicer arietinum L.) \\u2013 desi type (for food)- following the main crop\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 3,\n        seed: 1,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 1500.0 }],\n        temp: [{ min: 7.0, max: 28.0 }],\n        alt: [{ min: 1170.0, max: 1900.0 }],\n        soilpH: [{ min: 5.0, max: 8.3 }],\n    },\n    {\n        name:\n            \"Chickpea (Cicer arietinum L.) \\u2013 kabuli type (for export)-main crop\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 2,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 3,\n        labour: 3,\n        seed: 3,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 3,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 1500.0 }],\n        temp: [{ min: 7.0, max: 28.0 }],\n        alt: [{ min: 1170.0, max: 1900.0 }],\n        soilpH: [{ min: 5.0, max: 8.3 }],\n    },\n    {\n        name: \"Green grams/Mung bean (Vigna radiata)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 1,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 1,\n        land: 2,\n        labour: 3,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 1,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Lentils (Lens culinaris Medik.)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 3,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 280.0, max: 2430.0 }],\n        temp: [{ min: 6.0, max: 27.0 }],\n        alt: [{ min: 1000.0, max: 3800.0 }],\n        soilpH: [{ min: 4.5, max: 8.2 }],\n    },\n    {\n        name: \"Lupins \\u2013 Sweet lupin (new), traditional (Et)\",\n        type: \"Grain legume seasonal\",\n        food: 2,\n        feed: 1,\n        income: 3,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 4,\n        land: 1,\n        labour: 1,\n        seed: 2,\n        \"inp-serv\": 0,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 350.0, max: 1660.0 }],\n        temp: [{ min: 6.0, max: 26.0 }],\n        alt: [{ min: 1600.0, max: 3000.0 }],\n        soilpH: [{ min: 5.0, max: 7.0 }],\n    },\n    {\n        name:\n            \"Field Pea (Pisum sativum L), adapted to high rainfall environment\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 3,\n        income: 4,\n        \"erosion-control\": 2,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 3,\n        labour: 2,\n        seed: 2,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 3,\n        markets: 1,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name:\n            \"Field pea (Pisum absynicum var. sativum)-adapted to low rainfall environment\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 3,\n        income: 3,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 2,\n        land: 2,\n        labour: 2,\n        seed: 3,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Grass pea \\u2013 (Lathyrus spp)\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 1,\n        income: 3,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 320.0, max: 1360.0 }],\n        temp: [{ min: 5.0, max: 27.0 }],\n        alt: [{ min: 800.0, max: 3000.0 }],\n        soilpH: [{ min: 4.5, max: 8.3 }],\n    },\n    {\n        name: \"Cluster bean (Cyamopsis tetragonoloba L.)\",\n        type: \"Grain legume seasonal\",\n        food: 3,\n        feed: 1,\n        income: 3,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 380.0, max: 2410.0 }],\n        temp: [{ min: 12.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 1000.0 }],\n        soilpH: [{ min: 5.3, max: 8.3 }],\n    },\n    {\n        name: \"Dolichos lablab (Lablab purpureus)- for grain\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 4,\n        income: 3,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 2500.0 }],\n        temp: [{ min: 15.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2100.0 }],\n        soilpH: [{ min: 4.5, max: 7.8 }],\n    },\n    {\n        name: \"French beans (Phaseolus vulgaris)\",\n        type: \"Grain legume seasonal\",\n        food: 4,\n        feed: 0,\n        income: 4,\n        \"erosion-control\": 1,\n        fuel: 0,\n        \"soil-fertility\": 1,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 4,\n        \"knowl-skill\": 3,\n        water: 4,\n        markets: 4,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Desmodium silverleaf (Desmodium uncinatum)\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 3,\n        labour: 1,\n        seed: 3,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 750.0, max: 2400.0 }],\n        temp: [{ min: 3.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2500.0 }],\n        soilpH: [{ min: 6.5, max: 7.5 }],\n    },\n    {\n        name: \"Clover (Trifolium)\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 1,\n        \"erosion-control\": 2,\n        fuel: 0,\n        \"soil-fertility\": 2,\n        land: 1,\n        labour: 3,\n        seed: 3,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 3,\n        water: 3,\n        markets: 0,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Alfalfa/lucerne (Medicago sativa)\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 3,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 500.0, max: 2700.0 }],\n        temp: [{ min: 4.0, max: 27.0 }],\n        alt: [{ min: 300.0, max: 3000.0 }],\n        soilpH: [{ min: 5.5, max: 8.8 }],\n    },\n    {\n        name: \"Stylosanthes guianensis - semi-erect -forage type\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 500.0, max: 2000.0 }],\n        temp: [{ min: 15.0, max: 27.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 4.0, max: 7.7 }],\n    },\n    {\n        name: \"Stylosanthes hamata - bush/branching type-forage type\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 1700.0 }],\n        temp: [{ min: 22.0, max: 30.0 }],\n        alt: [{ min: 0.0, max: 500.0 }],\n        soilpH: [{ min: 4.0, max: 6.0 }],\n    },\n    {\n        name: \"Stylosanthes scabra -erect - forage type\",\n        type:\n            \"Herbaceous legumes - Perennial/regrowth (ability regrowth after seasonal harvesting)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 3,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 500.0, max: 1700.0 }],\n        temp: [{ min: 20.0, max: 30.0 }],\n        alt: [{ min: 0.0, max: 600.0 }],\n        soilpH: [{ min: 4.0, max: 7.0 }],\n    },\n    {\n        name: \"Hairy Vetch (Vicia villosa )\",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 3,\n        water: 3,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 310.0, max: 1660.0 }],\n        temp: [{ min: 4.0, max: 21.0 }],\n        alt: [{ min: 1800.0, max: 3000.0 }],\n        soilpH: [{ min: 4.9, max: 8.2 }],\n    },\n    {\n        name: \"Vicia dasycarpa\",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 4,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 3,\n        water: 3,\n        markets: 2,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Velvet bean (Mucuna pruriens) \",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 0,\n        feed: 1,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 4,\n        land: 3,\n        labour: 2,\n        seed: 3,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 4,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 650.0, max: 3000.0 }],\n        temp: [{ min: 15.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2100.0 }],\n        soilpH: [{ min: 4.5, max: 7.7 }],\n    },\n    {\n        name: \"Lablab- forage type (Lablab purpureus)\",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 3,\n        feed: 4,\n        income: 3,\n        \"erosion-control\": 2,\n        fuel: 1,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 600.0, max: 2500.0 }],\n        temp: [{ min: 15.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2100.0 }],\n        soilpH: [{ min: 4.5, max: 7.8 }],\n    },\n    {\n        name: \"Crotolaria juncea\",\n        type:\n            \"Herbaceous legumes - Seasonal/no-regrowth (harvest after one season, then need reseeding)\",\n        food: 0,\n        feed: 1,\n        income: 0,\n        \"erosion-control\": 3,\n        fuel: 0,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 490.0, max: 4290.0 }],\n        temp: [{ min: 8.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2500.0 }],\n        soilpH: [{ min: 4.5, max: 7.5 }],\n    },\n    {\n        name: \"Calliandra calothyrus\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 4,\n        fuel: 3,\n        \"soil-fertility\": 3,\n        land: 1,\n        labour: 1,\n        seed: 3,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 1200.0, max: 4290.0 }],\n        temp: [{ min: 10.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 4.5, max: 7.5 }],\n    },\n    {\n        name: \"Gliricidia sepium\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 3,\n        income: 1,\n        \"erosion-control\": 4,\n        fuel: 4,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 2,\n        seed: 3,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 4,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 800.0, max: 4000.0 }],\n        temp: [{ min: 15.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 4.3, max: 8.0 }],\n    },\n    {\n        name: \"Leucaena leucocephala\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 0,\n        \"erosion-control\": 4,\n        fuel: 4,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 500.0, max: 4100.0 }],\n        temp: [{ min: 15.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 1350.0 }],\n        soilpH: [{ min: 4.6, max: 8.7 }],\n    },\n    {\n        name: \"Leucaena trichandra\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 900.0, max: 3500.0 }],\n        temp: [{ min: 10.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 8.7 }],\n    },\n    {\n        name: \"Leucaena diversifolia\",\n        type: \"Tree legumes - coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 500.0, max: 4000.0 }],\n        temp: [{ min: 3.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 8.7 }],\n    },\n    {\n        name: \"Tree lucerne (Chamaecytisus palmensis)\",\n        type: \"Tree legumes \\u2013 coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 300.0, max: 1600.0 }],\n        temp: [{ min: 3.0, max: 28.0 }],\n        alt: [{ min: 1000.0, max: 2500.0 }],\n        soilpH: [{ min: 5.0, max: 8.7 }],\n    },\n    {\n        name: \"Sesbania sesban\",\n        type: \"Tree legumes \\u2013 non coppicing\",\n        food: 0,\n        feed: 4,\n        income: 2,\n        \"erosion-control\": 4,\n        fuel: 3,\n        \"soil-fertility\": 3,\n        land: 1,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 2,\n        markets: 3,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 500.0, max: 2500.0 }],\n        temp: [{ min: 15.0, max: 30.0 }],\n        alt: [{ min: 0.0, max: 2300.0 }],\n        soilpH: [{ min: 5.0, max: 7.5 }],\n    },\n    {\n        name: \"Sesbania grandiflora\",\n        type: \"Tree legumes \\u2013 non coppicing\",\n        food: 0,\n        feed: 3,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 3,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 700.0, max: 3000.0 }],\n        temp: [{ min: 22.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 1000.0 }],\n        soilpH: [{ min: 4.5, max: 8.7 }],\n    },\n    {\n        name: \"Tephrosia (Tephrosia vogelii)\",\n        type: \"Tree legumes \\u2013 non coppicing\",\n        food: 0,\n        feed: 0,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 3,\n        seed: 2,\n        \"inp-serv\": 1,\n        \"knowl-skill\": 1,\n        water: 1,\n        markets: 2,\n        \"agroecology-source\": \"Lexsys\",\n        rainfall: [{ min: 870.0, max: 2670.0 }],\n        temp: [{ min: 13.0, max: 29.0 }],\n        alt: [{ min: 0.0, max: 2100.0 }],\n        soilpH: [{ min: 4.5, max: 6.5 }],\n    },\n    {\n        name: \"Faidherbia albidia\",\n        type: \"Tree legumes \\u2013 non coppicing\",\n        food: 0,\n        feed: 3,\n        income: 2,\n        \"erosion-control\": 3,\n        fuel: 3,\n        \"soil-fertility\": 4,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": null,\n        rainfall: [{ min: null, max: null }],\n        temp: [{ min: null, max: null }],\n        alt: [{ min: null, max: null }],\n        soilpH: [{ min: null, max: null }],\n    },\n    {\n        name: \"Acacia angustissima\",\n        type: \"Tree legumes \\u2013 non coppicing\",\n        food: 0,\n        feed: 2,\n        income: 3,\n        \"erosion-control\": 3,\n        fuel: 4,\n        \"soil-fertility\": 3,\n        land: 2,\n        labour: 2,\n        seed: 1,\n        \"inp-serv\": 2,\n        \"knowl-skill\": 2,\n        water: 1,\n        markets: 3,\n        \"agroecology-source\": \"SoFT\",\n        rainfall: [{ min: 800.0, max: 3000.0 }],\n        temp: [{ min: 10.0, max: 35.0 }],\n        alt: [{ min: 0.0, max: 2000.0 }],\n        soilpH: [{ min: 5.0, max: 8.7 }],\n    },\n];\n","import { allLegumes } from \"./legume-information-clean\";\n\nconst legumeTypes = [];\nconst sources = [];\nallLegumes.map((legume) => {\n    if (!legumeTypes.includes(legume.type)) {\n        legumeTypes.push(legume.type);\n    }\n    if (\n        !sources.includes(legume[\"agroecology-source\"]) &&\n        legume[\"agroecology-source\"] !== null\n    ) {\n        sources.push(legume[\"agroecology-source\"]);\n    }\n});\n\nconst legumesData = {\n    allLegumes: allLegumes,\n    legumeTypes: legumeTypes,\n    sources: sources,\n};\n\nexport { legumesData };\n","import React, { Component } from \"react\";\n\nimport { Table } from \"react-bootstrap\";\n\nimport _ from \"lodash\";\nimport \"./results-component.css\";\n\nimport { resultsData } from \"./results-data\";\nimport AppContext from \"../../AppContext\";\n\nimport { Form, FormControl, FormLabel, FormGroup } from \"react-bootstrap\";\n\nimport { legumesData } from \"../legumes-component/legume-data\";\n\nclass Results extends Component {\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        this.state = resultsData;\n\n        this.initialiseResults = this.initialiseResults.bind(this);\n        this.legumeContextScores = this.legumeContextScores.bind(this);\n        this.legumeFunctionScores = this.legumeFunctionScores.bind(this);\n        this.legumeAgroEcoScores = this.legumeAgroEcoScores.bind(this);\n        this.calculateLegumeScores = this.calculateLegumeScores.bind(this);\n        this.checkFormFilled = this.checkFormFilled.bind(this);\n    }\n\n    // Adding empty results attribute to fill for each of the legumes\n    // Loading the results from the form and getting the correct averages\n\n    initialiseResults = () => {\n        // Adding empty results to each legume\n        //const newLegumes = _.cloneDeep(legumesData.allLegumes.slice(0, 10));\n        const newLegumes = _.cloneDeep(legumesData.allLegumes);\n        newLegumes.map((newLegume) => {\n            newLegume.results = _.cloneDeep(this.state.emptyScoresForLegume);\n        });\n\n        // Adding form Results\n\n        // Not much editing for agroeco\n        const agroEcoData = _.cloneDeep(this.context.agroEcoData);\n\n        //Extract average scores for context\n        const contextData = _.cloneDeep(this.context.contextScores.scores);\n        const newContextAverages = _.cloneDeep(this.state.contextFitSummary);\n\n        newContextAverages.map((newcontextscore) => {\n            contextData.map((contextscore) => {\n                if (\n                    contextscore.scoreType === \"average\" &&\n                    newcontextscore.attribute.label ===\n                        contextscore.attribute.label\n                ) {\n                    newcontextscore.score = 4 - contextscore.score;\n                }\n            });\n        });\n\n        // For the functional summary, need to average results from the pairwise selections and\n        // from the participatory score matching\n\n        const pairWiseData = _.cloneDeep(this.context.pairWiseScores.averages);\n        const participatoryMatrixData = _.cloneDeep(\n            this.context.participatoryMatrixScores.summary.scoresIndividual\n        );\n\n        const newFunctionAverages = _.cloneDeep(this.state.functionFitSummary);\n\n        newFunctionAverages.map((newfunction) => {\n            pairWiseData.map((pairwisescoreaverages) => {\n                if (\n                    pairwisescoreaverages.attribute.label ===\n                    newfunction.legumeFunction.label\n                ) {\n                    newfunction.pairwisescore = pairwisescoreaverages.value;\n                }\n            });\n        });\n\n        newFunctionAverages.map((newfunction) => {\n            participatoryMatrixData.map((matrixscore) => {\n                if (\n                    matrixscore.legumeFunction.label ===\n                    newfunction.legumeFunction.label\n                ) {\n                    newfunction.matrixscore = matrixscore.scores[1].score;\n                }\n            });\n        });\n\n        newFunctionAverages.map((newfunction) => {\n            newfunction.score = parseFloat(\n                (\n                    newfunction.pairwisescore / 2 +\n                    newfunction.matrixscore / 2\n                ).toFixed(2)\n            );\n        });\n\n        // Set initial state and then calculate initial results for legumes\n        this.setState(\n            {\n                legumes: newLegumes,\n                agroEcoFitSummary: agroEcoData.biofilters,\n                contextFitSummary: newContextAverages,\n                functionFitSummary: newFunctionAverages,\n            },\n            () => {\n                this.calculateLegumeScores();\n            }\n        );\n    };\n\n    legumeContextScores = (props) => {\n        // Context Scores\n        // console.log(\"Legume Context: \" + props.legumecontext);\n        // console.log(\"Form Context: \" + props.formcontext);\n\n        let legumecontext = parseFloat(props.legumecontext);\n        let formcontext = parseFloat(props.formcontext);\n        // Condition 1\n        if (\n            legumecontext - formcontext > -0.5 &&\n            legumecontext - formcontext <= 0\n        ) {\n            let scoreToReturn = 4 + (legumecontext - formcontext) / 2;\n            if (scoreToReturn > 0) {\n                return scoreToReturn;\n            }\n        }\n\n        // Condition 2\n        if (\n            legumecontext - formcontext < 0.5 &&\n            legumecontext - formcontext >= 0\n        ) {\n            let scoreToReturn = 4 - (legumecontext - formcontext) / 2;\n            if (scoreToReturn > 0) {\n                return scoreToReturn;\n            }\n        }\n\n        // Condition 3\n        if (legumecontext > formcontext) {\n            let scoreToReturn = 4 - (legumecontext - formcontext) * 2;\n            if (scoreToReturn > 0) {\n                return scoreToReturn;\n            }\n        }\n\n        // Condition 4\n        if (formcontext > legumecontext) {\n            return 4;\n        }\n\n        return 0;\n    };\n\n    legumeFunctionScores = (props) => {\n        // Calculating the averages for each of the legumes\n        // Function Scores\n\n        let formfunction = props.formfunction;\n        let legumefunction = props.legumefunction;\n        if (formfunction === 0) {\n            return 0;\n        }\n        if (legumefunction < formfunction) {\n            return (legumefunction * formfunction) / 8;\n        }\n        return (legumefunction * formfunction) / 4;\n    };\n\n    legumeAgroEcoScores = (props) => {\n        //console.log(props.legumeMin);\n        //console.log(props.legumeMax);\n        //console.log(props.formvalue);\n\n        let legumeMin = props.legumeMin;\n        let legumeMax = props.legumeMax;\n        let formvalue = props.formvalue;\n\n        if (formvalue >= legumeMin && formvalue <= legumeMax) {\n            return 1;\n        } else {\n            return 0;\n        }\n    };\n\n    calculateLegumeScores = () => {\n        const newLegumeState = _.cloneDeep(this.state.legumes);\n\n        newLegumeState.map((legume) => {\n            // Set context scores\n            // map through individual legumes\n            legume.results.contextFit.map((legumeContextScore) => {\n                // Map through the contextFit summaries\n                this.state.contextFitSummary.map((contextAttribute) => {\n                    if (legumeContextScore.attribute !== undefined) {\n                        // Match the attribute in the legume to the attribute in the context fit sumary\n                        if (\n                            contextAttribute.attribute.label ===\n                            legumeContextScore.attribute.label\n                        ) {\n                            // Assign the context score\n                            // console.log(legumeContextScore);\n                            // console.log(contextAttribute);\n                            // console.log(\n                            //     \"Legume Attribute: \" +\n                            //         contextAttribute.attribute.label\n                            // );\n                            //console.log(legume);\n\n                            legumeContextScore.score = this.legumeContextScores(\n                                // Props to send to the function\n                                {\n                                    legumecontext:\n                                        legume[\n                                            contextAttribute.attribute.label\n                                        ],\n                                    formcontext: contextAttribute.score,\n                                }\n                            );\n                            // console.log(legumeContextScore.score);\n                        }\n                    }\n                });\n            });\n\n            // Set function scores\n            legume.results.functionFit.map((legumeFunction) => {\n                this.state.functionFitSummary.map((functionAttribute) => {\n                    if (\n                        functionAttribute.legumeFunction !== undefined &&\n                        legumeFunction.legumeFunction !== undefined\n                    ) {\n                        if (\n                            functionAttribute.legumeFunction.label ===\n                            legumeFunction.legumeFunction.label\n                        ) {\n                            legumeFunction.score = this.legumeFunctionScores({\n                                formfunction: functionAttribute.score,\n                                legumefunction:\n                                    legume[\n                                        functionAttribute.legumeFunction.label\n                                    ],\n                            });\n                        }\n                    }\n                });\n            });\n\n            // set agroeco scores\n            legume.results.agroEcoFit.map((legumeAgroEco) => {\n                this.state.agroEcoFitSummary.map((agroEcoSummary) => {\n                    if (legumeAgroEco.agroEcoFilter !== undefined) {\n                        if (\n                            legumeAgroEco.agroEcoFilter.label ===\n                            agroEcoSummary.label\n                        ) {\n                            legumeAgroEco.score = this.legumeAgroEcoScores({\n                                legumeMin: legume[agroEcoSummary.label][0].min,\n                                legumeMax: legume[agroEcoSummary.label][0].max,\n                                formvalue: agroEcoSummary.value,\n                            });\n                            // console.log(legumeAgroEco);\n                            // console.log(agroEcoSummary);\n                            // console.log(legume[agroEcoSummary.label][0].min);\n                            // console.log(legume[agroEcoSummary.label][0].max);\n                        }\n                    }\n                });\n            });\n        });\n\n        // Update overall scores\n        newLegumeState.map((legume) => {\n            // Sum agroEco Scores\n            let agroecoscoreAccumulator = 0;\n            legume.results.agroEcoFit.forEach((agroecoscore) => {\n                if (agroecoscore.agroEcoFilter !== undefined) {\n                    agroecoscoreAccumulator += agroecoscore.score;\n                }\n            });\n            legume.results.agroEcoFit.forEach((agroecoscore) => {\n                if (agroecoscore.overallFit !== undefined) {\n                    agroecoscore.overallFit = agroecoscoreAccumulator;\n                }\n            });\n\n            // Sum context Scores\n            let contextAccumulator = 0;\n            legume.results.contextFit.forEach((contextScore) => {\n                if (contextScore.attribute !== undefined) {\n                    contextAccumulator += contextScore.score;\n                }\n            });\n            legume.results.contextFit.forEach((contextScore) => {\n                if (contextScore.overallFit !== undefined) {\n                    contextScore.overallFit = contextAccumulator;\n                }\n            });\n            // Sum function scores\n            let functionAccumulator = 0;\n            legume.results.functionFit.forEach((functionScore) => {\n                if (functionScore.legumeFunction !== undefined) {\n                    functionAccumulator += functionScore.score;\n                }\n            });\n            legume.results.functionFit.forEach((functionScore) => {\n                if (functionScore.overallFit !== undefined) {\n                    functionScore.overallFit = functionAccumulator;\n                }\n            });\n\n            // Set overall Score\n            legume.results.overallFit.map((avgFit) => {\n                if (avgFit.overallFit !== undefined) {\n                    avgFit.overallFit =\n                        (agroecoscoreAccumulator /\n                            this.state.agroEcoFilters.length +\n                            contextAccumulator /\n                                (this.state.attributes.length * 4) +\n                            functionAccumulator /\n                                (this.state.legumeFunctions.length * 4)) /\n                        3;\n                }\n            });\n        });\n\n        // Set ranking the scores (draws included)\n        newLegumeState.forEach((firstLegume) => {\n            // Overall rank is the fifth item in the array\n            firstLegume.results.agroEcoFit[5].overallRank = 1;\n            let valuesEncountered = [];\n            newLegumeState.forEach((secondLegume) => {\n                //-------------------------------------------------------------------------------------------------\n                // AgroEco Rank\n                if (\n                    // Overall rank is the fifth item in the array\n\n                    firstLegume.results.agroEcoFit[4].overallFit <\n                        secondLegume.results.agroEcoFit[4].overallFit &&\n                    // Making sure the value has not been encountered before.\n                    // If it has, there is no need to push the rank further down the list\n                    !valuesEncountered.includes(\n                        secondLegume.results.agroEcoFit[4].overallFit\n                    )\n                ) {\n                    //\n                    valuesEncountered.push(\n                        secondLegume.results.agroEcoFit[4].overallFit\n                    );\n                    firstLegume.results.agroEcoFit[5].overallRank += 1;\n                }\n                //-------------------------------------------------------------------------------------------------\n                // Context Rank\n                if (\n                    // Overall rank is the 8th item in the array\n\n                    firstLegume.results.contextFit[7].overallFit <\n                        secondLegume.results.contextFit[7].overallFit &&\n                    // Making sure the value has not been encountered before.\n                    // If it has, there is no need to push the rank further down the list\n                    !valuesEncountered.includes(\n                        secondLegume.results.contextFit[7].overallFit\n                    )\n                ) {\n                    //\n                    valuesEncountered.push(\n                        secondLegume.results.contextFit[7].overallFit\n                    );\n                    firstLegume.results.contextFit[8].overallRank += 1;\n                }\n                // Function Rank\n                //-------------------------------------------------------------------------------------------------\n                if (\n                    // Overall rank is the 7th item in the array\n\n                    firstLegume.results.functionFit[6].overallFit <\n                        secondLegume.results.functionFit[6].overallFit &&\n                    // Making sure the value has not been encountered before.\n                    // If it has, there is no need to push the rank further down the list\n                    !valuesEncountered.includes(\n                        secondLegume.results.functionFit[6].overallFit\n                    )\n                ) {\n                    //\n                    valuesEncountered.push(\n                        secondLegume.results.functionFit[6].overallFit\n                    );\n                    firstLegume.results.functionFit[7].overallRank += 1;\n                }\n\n                // Overall Rank\n                //-------------------------------------------------------------------------------------------------\n                if (\n                    // Overall rank is the first item in the array\n\n                    firstLegume.results.overallFit[0].overallFit <\n                        secondLegume.results.overallFit[0].overallFit &&\n                    // Making sure the value has not been encountered before.\n                    // If it has, there is no need to push the rank further down the list\n                    !valuesEncountered.includes(\n                        secondLegume.results.overallFit[0].overallFit\n                    )\n                ) {\n                    //\n                    valuesEncountered.push(\n                        secondLegume.results.overallFit[0].overallFit\n                    );\n                    firstLegume.results.overallFit[1].overallRank += 1;\n                }\n            });\n        });\n\n        this.setState({\n            legumes: newLegumeState,\n        });\n    };\n\n    checkFormFilled = () => {\n        if (\n            this.context.agroEcoData !== undefined &&\n            this.context.contextScores !== undefined &&\n            this.context.pairWiseScores !== undefined &&\n            this.context.participatoryMatrixScores !== undefined\n        ) {\n            this.setState(\n                {\n                    formFilled: true,\n                },\n                () => {\n                    this.initialiseResults();\n                }\n            );\n        }\n    };\n\n    componentDidMount() {\n        if (this.context.results !== undefined) {\n            const newState = this.context.results;\n            this.setState(newState);\n        } else {\n            const newContext = this.state;\n            this.context.results = newContext;\n        }\n        //console.log(this.state);\n\n        this.checkFormFilled();\n    }\n    componentDidUpdate() {\n        const newContext = this.state;\n        this.context.results = newContext;\n        console.log(this.state);\n    }\n\n    returnResultsForSummaryTable = (props) => {\n        if (props.item.score !== undefined) {\n            return <td>{parseFloat(props.item.score).toFixed(2)}</td>;\n        }\n        if (props.item.overallFit !== undefined) {\n            return <td>{parseFloat(props.item.overallFit).toFixed(2)}</td>;\n        }\n        if (props.item.overallRank !== undefined) {\n            return <td>{parseInt(props.item.overallRank)}</td>;\n        }\n    };\n\n    agroEcoTable = () => {\n        return (\n            <div>\n                <h1>AgroEco Fit</h1>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Legume Name</th>\n                            {this.state.agroEcoFilters.map((agroEcoFilter) => {\n                                return <th>{agroEcoFilter.label}</th>;\n                            })}\n                            <th>total score</th>\n                            <th>overall rank</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.orderAndFilterLegume().map((legume) => {\n                            return (\n                                <tr>\n                                    <td>{legume.name}</td>\n                                    {legume.results.agroEcoFit.map(\n                                        (agroEcoItem) => {\n                                            return this.returnResultsForSummaryTable(\n                                                {\n                                                    item: agroEcoItem,\n                                                }\n                                            );\n                                        }\n                                    )}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    };\n\n    contextFitTable = () => {\n        return (\n            <div>\n                <h1>Context Fit</h1>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Legume Name</th>\n                            {this.state.attributes.map((attribute) => {\n                                return <th>{attribute.label}</th>;\n                            })}\n                            <th>total score</th>\n                            <th>overall rank</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.orderAndFilterLegume().map((legume) => {\n                            return (\n                                <tr>\n                                    <td>{legume.name}</td>\n                                    {legume.results.contextFit.map(\n                                        (contextItem) => {\n                                            return this.returnResultsForSummaryTable(\n                                                {\n                                                    item: contextItem,\n                                                }\n                                            );\n                                        }\n                                    )}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    };\n\n    functionFitTable = () => {\n        return (\n            <div>\n                <h1>Function Fit</h1>\n\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Legume Name</th>\n                            {this.state.legumeFunctions.map(\n                                (legumeFunction) => {\n                                    return <th>{legumeFunction.label}</th>;\n                                }\n                            )}\n                            <th>total score</th>\n                            <th>overall rank</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.orderAndFilterLegume().map((legume) => {\n                            return (\n                                <tr>\n                                    <td>{legume.name}</td>\n                                    {legume.results.functionFit.map(\n                                        (functionItem) => {\n                                            return this.returnResultsForSummaryTable(\n                                                {\n                                                    item: functionItem,\n                                                }\n                                            );\n                                        }\n                                    )}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    };\n\n    returnRank = (props) => {\n        let scoreToReturn = 0;\n        props.arr.map((item) => {\n            if (item.overallRank !== undefined) {\n                scoreToReturn = item.overallRank;\n            }\n        });\n\n        return scoreToReturn;\n    };\n\n    returnScore = (props) => {\n        let scoreToReturn = 0;\n        props.arr.map((item) => {\n            if (item.overallFit !== undefined) {\n                scoreToReturn = item.overallFit;\n            }\n        });\n\n        return parseFloat(scoreToReturn).toFixed(2);\n    };\n\n    compareScores = (a, b, props) => {\n        let scoreA = \"\";\n        a.results[props.scoreType].map((item) => {\n            if (item.overallFit !== undefined) {\n                scoreA = item.overallFit;\n            }\n        });\n        let scoreB = \"\";\n        b.results[props.scoreType].map((item) => {\n            if (item.overallFit !== undefined) {\n                scoreB = item.overallFit;\n            }\n        });\n\n        if (scoreA < scoreB) {\n            return 1;\n        }\n        if (scoreA > scoreB) {\n            return -1;\n        }\n        return 0;\n    };\n\n    orderAndFilterLegume = () => {\n        const filter = this.state.resultsFilter.selection.order;\n\n        let legumeArr = _.cloneDeep(this.state.legumes);\n\n        // Filter by overall score\n        if (filter === \"Overall Score\") {\n            legumeArr.sort((a, b) =>\n                this.compareScores(a, b, { scoreType: \"overallFit\" })\n            );\n            console.log(legumeArr);\n        }\n        // Filter by AgroEcoScore\n        if (filter === \"AgroEco Score\") {\n            legumeArr.sort((a, b) =>\n                this.compareScores(a, b, { scoreType: \"agroEcoFit\" })\n            );\n            console.log(legumeArr);\n        }\n        // Filter by ContextScore\n        if (filter === \"Context Score\") {\n            legumeArr.sort((a, b) =>\n                this.compareScores(a, b, { scoreType: \"contextFit\" })\n            );\n            console.log(legumeArr);\n        }\n        // Filter by Function Fit\n        if (filter === \"Function Score\") {\n            legumeArr.sort((a, b) =>\n                this.compareScores(a, b, { scoreType: \"functionFit\" })\n            );\n            console.log(legumeArr);\n        }\n\n        if (this.state.resultsFilter.selection.numberOfLegumes == \"5\") {\n            legumeArr = legumeArr.slice(0, 5);\n        }\n\n        if (this.state.resultsFilter.selection.numberOfLegumes == \"10\") {\n            legumeArr = legumeArr.slice(0, 10);\n        }\n\n        if (this.state.resultsFilter.selection.numberOfLegumes == \"20\") {\n            legumeArr = legumeArr.slice(0, 20);\n        }\n\n        return legumeArr;\n    };\n\n    changeCellColour = () => {\n        return \"blue\";\n    };\n\n    summaryTable = () => {\n        return (\n            <div>\n                <h1>Summary</h1>\n                <Table bordered striped hover>\n                    <thead>\n                        <tr>\n                            <th>Legume Name</th>\n                            <th>Agro-Eco score</th>\n                            <th>Agro-Eco rank</th>\n                            <th>Context score</th>\n                            <th>Context rank</th>\n                            <th>Function score</th>\n                            <th>Function rank</th>\n\n                            <th>Overall score (0-1)</th>\n                            <th>Overall rank</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.orderAndFilterLegume().map((legume) => {\n                            return (\n                                <tr>\n                                    <td>{legume.name}</td>\n                                    <td\n                                    // style={{\n                                    //     backgroundColor: this.changeCellColour(),\n                                    // }}\n                                    >\n                                        {this.returnScore({\n                                            arr: legume.results.agroEcoFit,\n                                        })}\n                                    </td>\n                                    <td>\n                                        {this.returnRank({\n                                            arr: legume.results.agroEcoFit,\n                                        })}\n                                    </td>\n                                    <td>\n                                        {this.returnScore({\n                                            arr: legume.results.contextFit,\n                                        })}\n                                    </td>\n                                    <td>\n                                        {this.returnRank({\n                                            arr: legume.results.contextFit,\n                                        })}\n                                    </td>\n                                    <td>\n                                        {this.returnScore({\n                                            arr: legume.results.functionFit,\n                                        })}\n                                    </td>\n                                    <td>\n                                        {this.returnRank({\n                                            arr: legume.results.functionFit,\n                                        })}\n                                    </td>\n                                    <td>\n                                        {this.returnScore({\n                                            arr: legume.results.overallFit,\n                                        })}\n                                    </td>\n                                    <td>\n                                        {this.returnRank({\n                                            arr: legume.results.overallFit,\n                                        })}\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    };\n\n    renderLegumeResults = () => {\n        if (this.state.resultsFilter.selection.whichResults === \"Summary\") {\n            return this.summaryTable();\n        }\n\n        if (\n            this.state.resultsFilter.selection.whichResults === \"AgroEco Scores\"\n        ) {\n            return this.agroEcoTable();\n        }\n\n        if (\n            this.state.resultsFilter.selection.whichResults === \"Context Scores\"\n        ) {\n            return this.contextFitTable();\n        }\n\n        if (\n            this.state.resultsFilter.selection.whichResults ===\n            \"Function Scores\"\n        ) {\n            return this.functionFitTable();\n        }\n    };\n\n    changeSelection = (event, props) => {\n        this.setState(\n            (prevState) => {\n                return {\n                    ...prevState,\n                    resultsFilter: {\n                        ...prevState.resultsFilter,\n                        selection: {\n                            ...prevState.resultsFilter.selection,\n                            [props.type]: event.target.value,\n                        },\n                    },\n                };\n            },\n            () => this.orderAndFilterLegume()\n        );\n    };\n\n    resultsFilters = () => {\n        return (\n            <div className=\"results-form\">\n                <Form className=\"results-form\">\n                    <FormGroup controlId=\"resultsSelect\" className=\"form-item\">\n                        <FormLabel>Results</FormLabel>\n\n                        <FormControl\n                            value={\n                                this.state.resultsFilter.selection.whichResults\n                            }\n                            onChange={(event) =>\n                                this.changeSelection(event, {\n                                    type: \"whichResults\",\n                                })\n                            }\n                            as=\"select\"\n                        >\n                            {this.state.resultsFilter.selectOptions.map(\n                                (selectionoption) => {\n                                    return <option>{selectionoption}</option>;\n                                }\n                            )}\n                        </FormControl>\n                    </FormGroup>\n\n                    <FormGroup\n                        value={this.state.resultsFilter.selection.order}\n                        onChange={(event) =>\n                            this.changeSelection(event, {\n                                type: \"order\",\n                            })\n                        }\n                        controlId=\"resultsFilter\"\n                        className=\"form-item\"\n                    >\n                        <FormLabel>Order by:</FormLabel>\n\n                        <FormControl\n                            as=\"select\"\n                            value={this.state.resultsFilter.selection.order}\n                            onChange={(event) =>\n                                this.changeSelection(event, {\n                                    type: \"order\",\n                                })\n                            }\n                        >\n                            {this.state.resultsFilter.orderOptions.map(\n                                (orderoption) => {\n                                    return <option>{orderoption}</option>;\n                                }\n                            )}\n                        </FormControl>\n                    </FormGroup>\n\n                    <FormGroup controlId=\"resultsFilter\" className=\"form-item\">\n                        <FormLabel>Number of Legumes Displayed</FormLabel>\n\n                        <FormControl\n                            as=\"select\"\n                            value={\n                                this.state.resultsFilter.selection\n                                    .numberOfLegumes\n                            }\n                            onChange={(event) =>\n                                this.changeSelection(event, {\n                                    type: \"numberOfLegumes\",\n                                })\n                            }\n                        >\n                            {this.state.resultsFilter.numberOfLegumesOptions.map(\n                                (numberoption) => {\n                                    return <option>{numberoption}</option>;\n                                }\n                            )}\n                        </FormControl>\n                    </FormGroup>\n                </Form>\n            </div>\n        );\n    };\n\n    renderBody = () => {\n        if (this.state.formFilled === false) {\n            return <h1>No data entered yet. Please fill in data-entry form</h1>;\n        }\n        if (this.state.formFilled === true) {\n            return (\n                <div>\n                    {this.resultsFilters()}\n                    <div>{this.renderLegumeResults()}</div>\n                </div>\n            );\n        }\n    };\n\n    render() {\n        return <div>{this.renderBody()}</div>;\n    }\n}\n\nexport default Results;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nimport AppContext from \"../../AppContext\";\n\nclass ViewContext extends Component {\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        console.log(AppContext);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n        this.initialiseContext();\n    }\n\n    initialiseContext = () => {\n        const appVariables = [\n            \"agroEcoData\",\n            \"contextScores\",\n            \"location\",\n            \"pairWiseScores\",\n            \"participatoryMatrixScores\",\n            \"projectInfo\",\n            \"results\",\n            \"user\",\n        ];\n\n        const appData = {};\n\n        appVariables.map((variable) => {\n            if (this.context[variable] !== undefined) {\n                appData[variable] = _.cloneDeep(this.context[variable]);\n            }\n        });\n\n        this.setState(appData);\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>App Context</h1>\n                <pre>{JSON.stringify(this.state, null, 2)}</pre>\n            </div>\n        );\n    }\n}\n\nexport default ViewContext;\n","import React, {\n    useState,\n    useCallback,\n    useRef,\n    useMemo,\n    useEffect,\n    useContext,\n    createContext,\n} from \"react\";\n\nimport _ from \"lodash\";\nimport \"./map-polygon-component.css\";\n\nimport AppContext from \"../../AppContext\";\n\nimport { MapContainer, Marker, Popup, TileLayer, Polygon } from \"react-leaflet\";\n\nlet center = {\n    lat: 51.4,\n    lng: 0,\n};\n// if (\"geolocation\" in navigator) {\n//     navigator.geolocation.getCurrentPosition(function (position) {\n//         center = {\n//             lat: position.coords.latitude,\n//             lng: position.coords.longitude,\n//         };\n//         //console.log(\"Latitude is :\", );\n//         //console.log(\"Longitude is :\", );\n//     });\n//     console.log(\"Available\");\n// } else {\n//     //console.log(\"Not Available\");\n// }\n\nlet markerpositions = [];\n\nif (AppContext.location === undefined) {\n    markerpositions = [\n        {\n            lat: center.lat + 0.01,\n            lng: center.lng - 0.01,\n        },\n        {\n            lat: center.lat + 0.01,\n            lng: center.lng + 0.01,\n        },\n        {\n            lat: center.lat - 0.01,\n            lng: center.lng + 0.01,\n        },\n        {\n            lat: center.lat - 0.01,\n            lng: center.lng - 0.01,\n        },\n    ];\n}\n\nif (AppContext.location !== undefined) {\n    markerpositions = AppContext.location;\n}\n\nfunction DraggableMarker(props) {\n    const markerRef = useRef(null);\n\n    const updateMarker = useMemo(\n        () => ({\n            dragend() {\n                const marker = markerRef.current;\n\n                if (marker != null) {\n                    let newArray = _.clone(props.center);\n                    let newLat = marker.getLatLng().lat;\n                    let newLng = marker.getLatLng().lng;\n                    newArray[props.index].lat = newLat;\n                    newArray[props.index].lng = newLng;\n                    props.changeMarkerPositions(newArray);\n\n                    //console.log(marker.getLatLng().lat);\n                }\n            },\n        }),\n        []\n    );\n\n    return (\n        <>\n            <Marker\n                draggable={true}\n                eventHandlers={updateMarker}\n                position={props.center[props.index]}\n                ref={markerRef}\n            ></Marker>\n        </>\n    );\n}\n\nfunction DraggablePolygon(props) {\n    return (\n        <Polygon\n            pathOptions={{ color: \"purple\" }}\n            positions={props.positions}\n        />\n    );\n}\n\nfunction MapPolygon() {\n    const [markerPositions, changeMarkerPositions] = useState(markerpositions);\n\n    const [mapCenter, changeCenter] = useState(center);\n\n    const AppContextMap = useContext(AppContext);\n    // console.log(AppContextMap);\n    useEffect(() => {\n        AppContextMap.location = markerPositions;\n        // console.log(markerPositions);\n    });\n\n    return (\n        <div className=\"leaflet-container\">\n            <MapContainer center={mapCenter} zoom={13} scrollWheelZoom={false}>\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n\n                <DraggablePolygon positions={markerPositions} />\n\n                <DraggableMarker\n                    center={markerPositions}\n                    index={0}\n                    changeMarkerPositions={changeMarkerPositions}\n                />\n                <DraggableMarker\n                    center={markerPositions}\n                    index={1}\n                    changeMarkerPositions={changeMarkerPositions}\n                />\n                <DraggableMarker\n                    center={markerPositions}\n                    index={2}\n                    changeMarkerPositions={changeMarkerPositions}\n                />\n                <DraggableMarker\n                    center={markerPositions}\n                    index={3}\n                    changeMarkerPositions={changeMarkerPositions}\n                />\n            </MapContainer>\n        </div>\n    );\n}\n\nexport default MapPolygon;\n","import React, { Component } from \"react\";\nimport AppContext from \"../../AppContext\";\n\nimport MapPolygon from \"../map-polygon-component/map-polygon-component\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport \"./project-information-component.css\";\n\nimport { countryList } from \"./countries-list\";\nimport {\n    Button,\n    Form,\n    FormControl,\n    FormText,\n    FormLabel,\n    FormGroup,\n} from \"react-bootstrap\";\n\nlet countryNames = [];\n\ncountryList.forEach((country) => {\n    countryNames.push(country.name);\n});\n\nconst projectID = uuidv4();\nclass ProjectInformation extends Component {\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userLocationFound: false,\n            userLocation: {},\n            projectName: \"\",\n            projectID: projectID,\n            country: \"\",\n            majorRegion: \"\",\n            minorRegion: \"\",\n            communityName: \"\",\n            communityType: \"\",\n            description: \"\",\n            date: new Date(),\n            countryNames: countryNames,\n        };\n    }\n\n    componentDidMount() {\n        if (this.context.projectInfo === undefined) {\n            const newContext = this.state;\n            this.context.projectInfo = newContext;\n        }\n        if (this.context.projectInfo !== undefined) {\n            const newState = this.context.projectInfo;\n            this.setState(newState);\n        }\n\n        console.log(this.state);\n        // console.log(this.state.countryNames);\n    }\n\n    // geoLocate = () => {\n    //     let userlocation = {};\n    //     if (\"geolocation\" in navigator) {\n    //         navigator.geolocation.getCurrentPosition(function (\n    //             position\n    //         ) {\n    //             userlocation = {\n    //                 lat: position.coords.latitude,\n    //                 lng: position.coords.longitude,\n    //             };\n\n    //             console.log(userlocation);\n    //             return userlocation;\n    //             //console.log(\"Longitude is :\", );\n    //         });\n    //         console.log(\"Available\");\n    //         this.setState({\n    //             userLocationFound: true,\n    //             userLocation: userlocation,\n    //         });\n    //     } else {\n    //         //console.log(\"Not Available\");\n    //     }\n    // };\n\n    componentDidUpdate() {\n        console.log(this.state);\n        const newContext = this.state;\n        this.context.projectInfo = newContext;\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Project info</h1>\n                <Form className=\"form-display\">\n                    <FormGroup className=\"short-form-entry\">\n                        <FormLabel>Project Name</FormLabel>\n                        <FormControl\n                            type=\"text\"\n                            value={this.state.projectName}\n                            onChange={(event) =>\n                                this.setState({\n                                    projectName: event.target.value,\n                                })\n                            }\n                        />\n                        <FormText className=\"text-muted\">\n                            A memorable name for your project.\n                        </FormText>\n                    </FormGroup>\n\n                    <FormGroup className=\"short-form-entry\">\n                        <FormLabel>Project ID</FormLabel>\n                        <FormControl\n                            type=\"text\"\n                            placeholder={this.state.projectID}\n                            readOnly\n                        />\n                        <FormText className=\"text-muted\">\n                            A universally unique identifier (uuid) for your\n                            project.\n                        </FormText>\n                    </FormGroup>\n\n                    <FormGroup className=\"short-form-entry\">\n                        <FormLabel>Country</FormLabel>\n                        <FormControl as=\"select\">\n                            {this.state.countryNames.map((country) => {\n                                return <option>{country}</option>;\n                            })}\n                        </FormControl>\n                    </FormGroup>\n\n                    <FormGroup className=\"short-form-entry\">\n                        <FormLabel>Major Region</FormLabel>\n                        <FormControl></FormControl>\n                        <FormText className=\"text-muted\">\n                            e.g. state/province\n                        </FormText>\n                    </FormGroup>\n\n                    <FormGroup className=\"short-form-entry\">\n                        <FormLabel>Minor Region</FormLabel>\n                        <FormControl></FormControl>\n                        <FormText className=\"text-muted\">e.g. county</FormText>\n                    </FormGroup>\n\n                    <FormGroup className=\"short-form-entry\">\n                        <FormLabel>Community Name</FormLabel>\n                        <FormControl></FormControl>\n                    </FormGroup>\n\n                    <FormGroup className=\"short-form-entry\">\n                        <FormLabel>Community Type</FormLabel>\n                        <FormControl></FormControl>\n                        <FormText className=\"text-muted\">\n                            e.g. village/sub-village\n                        </FormText>\n                    </FormGroup>\n\n                    <FormGroup className=\"short-form-entry\">\n                        <FormLabel>Date</FormLabel>\n                        <DatePicker\n                            selected={this.state.date}\n                            onChange={(date) => this.setState({ date: date })}\n                        />\n                        <FormText className=\"text-muted\">\n                            The date the data-collection ended\n                        </FormText>\n                    </FormGroup>\n\n                    <FormGroup className=\"long-form-entry\">\n                        <FormLabel>Project Description</FormLabel>\n                        <FormControl\n                            as=\"textarea\"\n                            rows={4}\n                            value={this.state.description}\n                            onChange={(event) =>\n                                this.setState({\n                                    description: event.target.value,\n                                })\n                            }\n                        ></FormControl>\n                    </FormGroup>\n                </Form>\n\n                <div className=\"map-container\">\n                    <h2>Geolocation</h2>\n                    <MapPolygon />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProjectInformation;\n","const countryList = [\n    { name: \"Afghanistan\", code: \"AF\" },\n    { name: \"Åland Islands\", code: \"AX\" },\n    { name: \"Albania\", code: \"AL\" },\n    { name: \"Algeria\", code: \"DZ\" },\n    { name: \"American Samoa\", code: \"AS\" },\n    { name: \"AndorrA\", code: \"AD\" },\n    { name: \"Angola\", code: \"AO\" },\n    { name: \"Anguilla\", code: \"AI\" },\n    { name: \"Antarctica\", code: \"AQ\" },\n    { name: \"Antigua and Barbuda\", code: \"AG\" },\n    { name: \"Argentina\", code: \"AR\" },\n    { name: \"Armenia\", code: \"AM\" },\n    { name: \"Aruba\", code: \"AW\" },\n    { name: \"Australia\", code: \"AU\" },\n    { name: \"Austria\", code: \"AT\" },\n    { name: \"Azerbaijan\", code: \"AZ\" },\n    { name: \"Bahamas\", code: \"BS\" },\n    { name: \"Bahrain\", code: \"BH\" },\n    { name: \"Bangladesh\", code: \"BD\" },\n    { name: \"Barbados\", code: \"BB\" },\n    { name: \"Belarus\", code: \"BY\" },\n    { name: \"Belgium\", code: \"BE\" },\n    { name: \"Belize\", code: \"BZ\" },\n    { name: \"Benin\", code: \"BJ\" },\n    { name: \"Bermuda\", code: \"BM\" },\n    { name: \"Bhutan\", code: \"BT\" },\n    { name: \"Bolivia\", code: \"BO\" },\n    { name: \"Bosnia and Herzegovina\", code: \"BA\" },\n    { name: \"Botswana\", code: \"BW\" },\n    { name: \"Bouvet Island\", code: \"BV\" },\n    { name: \"Brazil\", code: \"BR\" },\n    { name: \"British Indian Ocean Territory\", code: \"IO\" },\n    { name: \"Brunei Darussalam\", code: \"BN\" },\n    { name: \"Bulgaria\", code: \"BG\" },\n    { name: \"Burkina Faso\", code: \"BF\" },\n    { name: \"Burundi\", code: \"BI\" },\n    { name: \"Cambodia\", code: \"KH\" },\n    { name: \"Cameroon\", code: \"CM\" },\n    { name: \"Canada\", code: \"CA\" },\n    { name: \"Cape Verde\", code: \"CV\" },\n    { name: \"Cayman Islands\", code: \"KY\" },\n    { name: \"Central African Republic\", code: \"CF\" },\n    { name: \"Chad\", code: \"TD\" },\n    { name: \"Chile\", code: \"CL\" },\n    { name: \"China\", code: \"CN\" },\n    { name: \"Christmas Island\", code: \"CX\" },\n    { name: \"Cocos (Keeling) Islands\", code: \"CC\" },\n    { name: \"Colombia\", code: \"CO\" },\n    { name: \"Comoros\", code: \"KM\" },\n    { name: \"Congo\", code: \"CG\" },\n    { name: \"Congo, The Democratic Republic of the\", code: \"CD\" },\n    { name: \"Cook Islands\", code: \"CK\" },\n    { name: \"Costa Rica\", code: \"CR\" },\n    { name: \"Cote D'Ivoire\", code: \"CI\" },\n    { name: \"Croatia\", code: \"HR\" },\n    { name: \"Cuba\", code: \"CU\" },\n    { name: \"Cyprus\", code: \"CY\" },\n    { name: \"Czech Republic\", code: \"CZ\" },\n    { name: \"Denmark\", code: \"DK\" },\n    { name: \"Djibouti\", code: \"DJ\" },\n    { name: \"Dominica\", code: \"DM\" },\n    { name: \"Dominican Republic\", code: \"DO\" },\n    { name: \"Ecuador\", code: \"EC\" },\n    { name: \"Egypt\", code: \"EG\" },\n    { name: \"El Salvador\", code: \"SV\" },\n    { name: \"Equatorial Guinea\", code: \"GQ\" },\n    { name: \"Eritrea\", code: \"ER\" },\n    { name: \"Estonia\", code: \"EE\" },\n    { name: \"Ethiopia\", code: \"ET\" },\n    { name: \"Falkland Islands (Malvinas)\", code: \"FK\" },\n    { name: \"Faroe Islands\", code: \"FO\" },\n    { name: \"Fiji\", code: \"FJ\" },\n    { name: \"Finland\", code: \"FI\" },\n    { name: \"France\", code: \"FR\" },\n    { name: \"French Guiana\", code: \"GF\" },\n    { name: \"French Polynesia\", code: \"PF\" },\n    { name: \"French Southern Territories\", code: \"TF\" },\n    { name: \"Gabon\", code: \"GA\" },\n    { name: \"Gambia\", code: \"GM\" },\n    { name: \"Georgia\", code: \"GE\" },\n    { name: \"Germany\", code: \"DE\" },\n    { name: \"Ghana\", code: \"GH\" },\n    { name: \"Gibraltar\", code: \"GI\" },\n    { name: \"Greece\", code: \"GR\" },\n    { name: \"Greenland\", code: \"GL\" },\n    { name: \"Grenada\", code: \"GD\" },\n    { name: \"Guadeloupe\", code: \"GP\" },\n    { name: \"Guam\", code: \"GU\" },\n    { name: \"Guatemala\", code: \"GT\" },\n    { name: \"Guernsey\", code: \"GG\" },\n    { name: \"Guinea\", code: \"GN\" },\n    { name: \"Guinea-Bissau\", code: \"GW\" },\n    { name: \"Guyana\", code: \"GY\" },\n    { name: \"Haiti\", code: \"HT\" },\n    { name: \"Heard Island and Mcdonald Islands\", code: \"HM\" },\n    { name: \"Holy See (Vatican City State)\", code: \"VA\" },\n    { name: \"Honduras\", code: \"HN\" },\n    { name: \"Hong Kong\", code: \"HK\" },\n    { name: \"Hungary\", code: \"HU\" },\n    { name: \"Iceland\", code: \"IS\" },\n    { name: \"India\", code: \"IN\" },\n    { name: \"Indonesia\", code: \"ID\" },\n    { name: \"Iran, Islamic Republic Of\", code: \"IR\" },\n    { name: \"Iraq\", code: \"IQ\" },\n    { name: \"Ireland\", code: \"IE\" },\n    { name: \"Isle of Man\", code: \"IM\" },\n    { name: \"Israel\", code: \"IL\" },\n    { name: \"Italy\", code: \"IT\" },\n    { name: \"Jamaica\", code: \"JM\" },\n    { name: \"Japan\", code: \"JP\" },\n    { name: \"Jersey\", code: \"JE\" },\n    { name: \"Jordan\", code: \"JO\" },\n    { name: \"Kazakhstan\", code: \"KZ\" },\n    { name: \"Kenya\", code: \"KE\" },\n    { name: \"Kiribati\", code: \"KI\" },\n    { name: \"Korea, Democratic People's Republic of\", code: \"KP\" },\n    { name: \"Korea, Republic of\", code: \"KR\" },\n    { name: \"Kuwait\", code: \"KW\" },\n    { name: \"Kyrgyzstan\", code: \"KG\" },\n    { name: \"Lao People's Democratic Republic\", code: \"LA\" },\n    { name: \"Latvia\", code: \"LV\" },\n    { name: \"Lebanon\", code: \"LB\" },\n    { name: \"Lesotho\", code: \"LS\" },\n    { name: \"Liberia\", code: \"LR\" },\n    { name: \"Libyan Arab Jamahiriya\", code: \"LY\" },\n    { name: \"Liechtenstein\", code: \"LI\" },\n    { name: \"Lithuania\", code: \"LT\" },\n    { name: \"Luxembourg\", code: \"LU\" },\n    { name: \"Macao\", code: \"MO\" },\n    { name: \"Macedonia, The Former Yugoslav Republic of\", code: \"MK\" },\n    { name: \"Madagascar\", code: \"MG\" },\n    { name: \"Malawi\", code: \"MW\" },\n    { name: \"Malaysia\", code: \"MY\" },\n    { name: \"Maldives\", code: \"MV\" },\n    { name: \"Mali\", code: \"ML\" },\n    { name: \"Malta\", code: \"MT\" },\n    { name: \"Marshall Islands\", code: \"MH\" },\n    { name: \"Martinique\", code: \"MQ\" },\n    { name: \"Mauritania\", code: \"MR\" },\n    { name: \"Mauritius\", code: \"MU\" },\n    { name: \"Mayotte\", code: \"YT\" },\n    { name: \"Mexico\", code: \"MX\" },\n    { name: \"Micronesia, Federated States of\", code: \"FM\" },\n    { name: \"Moldova, Republic of\", code: \"MD\" },\n    { name: \"Monaco\", code: \"MC\" },\n    { name: \"Mongolia\", code: \"MN\" },\n    { name: \"Montserrat\", code: \"MS\" },\n    { name: \"Morocco\", code: \"MA\" },\n    { name: \"Mozambique\", code: \"MZ\" },\n    { name: \"Myanmar\", code: \"MM\" },\n    { name: \"Namibia\", code: \"NA\" },\n    { name: \"Nauru\", code: \"NR\" },\n    { name: \"Nepal\", code: \"NP\" },\n    { name: \"Netherlands\", code: \"NL\" },\n    { name: \"Netherlands Antilles\", code: \"AN\" },\n    { name: \"New Caledonia\", code: \"NC\" },\n    { name: \"New Zealand\", code: \"NZ\" },\n    { name: \"Nicaragua\", code: \"NI\" },\n    { name: \"Niger\", code: \"NE\" },\n    { name: \"Nigeria\", code: \"NG\" },\n    { name: \"Niue\", code: \"NU\" },\n    { name: \"Norfolk Island\", code: \"NF\" },\n    { name: \"Northern Mariana Islands\", code: \"MP\" },\n    { name: \"Norway\", code: \"NO\" },\n    { name: \"Oman\", code: \"OM\" },\n    { name: \"Pakistan\", code: \"PK\" },\n    { name: \"Palau\", code: \"PW\" },\n    { name: \"Palestinian Territory, Occupied\", code: \"PS\" },\n    { name: \"Panama\", code: \"PA\" },\n    { name: \"Papua New Guinea\", code: \"PG\" },\n    { name: \"Paraguay\", code: \"PY\" },\n    { name: \"Peru\", code: \"PE\" },\n    { name: \"Philippines\", code: \"PH\" },\n    { name: \"Pitcairn\", code: \"PN\" },\n    { name: \"Poland\", code: \"PL\" },\n    { name: \"Portugal\", code: \"PT\" },\n    { name: \"Puerto Rico\", code: \"PR\" },\n    { name: \"Qatar\", code: \"QA\" },\n    { name: \"Reunion\", code: \"RE\" },\n    { name: \"Romania\", code: \"RO\" },\n    { name: \"Russian Federation\", code: \"RU\" },\n    { name: \"RWANDA\", code: \"RW\" },\n    { name: \"Saint Helena\", code: \"SH\" },\n    { name: \"Saint Kitts and Nevis\", code: \"KN\" },\n    { name: \"Saint Lucia\", code: \"LC\" },\n    { name: \"Saint Pierre and Miquelon\", code: \"PM\" },\n    { name: \"Saint Vincent and the Grenadines\", code: \"VC\" },\n    { name: \"Samoa\", code: \"WS\" },\n    { name: \"San Marino\", code: \"SM\" },\n    { name: \"Sao Tome and Principe\", code: \"ST\" },\n    { name: \"Saudi Arabia\", code: \"SA\" },\n    { name: \"Senegal\", code: \"SN\" },\n    { name: \"Serbia and Montenegro\", code: \"CS\" },\n    { name: \"Seychelles\", code: \"SC\" },\n    { name: \"Sierra Leone\", code: \"SL\" },\n    { name: \"Singapore\", code: \"SG\" },\n    { name: \"Slovakia\", code: \"SK\" },\n    { name: \"Slovenia\", code: \"SI\" },\n    { name: \"Solomon Islands\", code: \"SB\" },\n    { name: \"Somalia\", code: \"SO\" },\n    { name: \"South Africa\", code: \"ZA\" },\n    { name: \"South Georgia and the South Sandwich Islands\", code: \"GS\" },\n    { name: \"Spain\", code: \"ES\" },\n    { name: \"Sri Lanka\", code: \"LK\" },\n    { name: \"Sudan\", code: \"SD\" },\n    { name: \"Suriname\", code: \"SR\" },\n    { name: \"Svalbard and Jan Mayen\", code: \"SJ\" },\n    { name: \"Swaziland\", code: \"SZ\" },\n    { name: \"Sweden\", code: \"SE\" },\n    { name: \"Switzerland\", code: \"CH\" },\n    { name: \"Syrian Arab Republic\", code: \"SY\" },\n    { name: \"Taiwan, Province of China\", code: \"TW\" },\n    { name: \"Tajikistan\", code: \"TJ\" },\n    { name: \"Tanzania, United Republic of\", code: \"TZ\" },\n    { name: \"Thailand\", code: \"TH\" },\n    { name: \"Timor-Leste\", code: \"TL\" },\n    { name: \"Togo\", code: \"TG\" },\n    { name: \"Tokelau\", code: \"TK\" },\n    { name: \"Tonga\", code: \"TO\" },\n    { name: \"Trinidad and Tobago\", code: \"TT\" },\n    { name: \"Tunisia\", code: \"TN\" },\n    { name: \"Turkey\", code: \"TR\" },\n    { name: \"Turkmenistan\", code: \"TM\" },\n    { name: \"Turks and Caicos Islands\", code: \"TC\" },\n    { name: \"Tuvalu\", code: \"TV\" },\n    { name: \"Uganda\", code: \"UG\" },\n    { name: \"Ukraine\", code: \"UA\" },\n    { name: \"United Arab Emirates\", code: \"AE\" },\n    { name: \"United Kingdom\", code: \"GB\" },\n    { name: \"United States\", code: \"US\" },\n    { name: \"United States Minor Outlying Islands\", code: \"UM\" },\n    { name: \"Uruguay\", code: \"UY\" },\n    { name: \"Uzbekistan\", code: \"UZ\" },\n    { name: \"Vanuatu\", code: \"VU\" },\n    { name: \"Venezuela\", code: \"VE\" },\n    { name: \"Viet Nam\", code: \"VN\" },\n    { name: \"Virgin Islands, British\", code: \"VG\" },\n    { name: \"Virgin Islands, U.S.\", code: \"VI\" },\n    { name: \"Wallis and Futuna\", code: \"WF\" },\n    { name: \"Western Sahara\", code: \"EH\" },\n    { name: \"Yemen\", code: \"YE\" },\n    { name: \"Zambia\", code: \"ZM\" },\n    { name: \"Zimbabwe\", code: \"ZW\" },\n];\n\nexport { countryList };\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nimport axios from \"axios\";\n\nimport { TiTick } from \"react-icons/ti\";\nimport { ImCross } from \"react-icons/im\";\n\nimport { Button } from \"react-bootstrap\";\n\nimport AppContext from \"../../AppContext\";\n\nclass SubmitData extends Component {\n    static contextType = AppContext;\n\n    constructor(props) {\n        super(props);\n        console.log(AppContext);\n\n        this.state = {\n            currentProject: {},\n            previousProjects: [],\n        };\n    }\n\n    componentDidMount() {\n        this.initialiseContext();\n        //console.log(navigator.onLine);\n    }\n    componentDidUpdate() {\n        console.log(this.state);\n    }\n\n    initialiseContext = () => {\n        const appNames = {};\n\n        const appVariables = [\n            \"agroEcoData\",\n            \"contextScores\",\n            \"location\",\n            \"pairWiseScores\",\n            \"participatoryMatrixScores\",\n            \"projectInfo\",\n            \"results\",\n            \"user\",\n        ];\n\n        const appData = {};\n\n        appVariables.map((variable) => {\n            if (this.context[variable] !== undefined) {\n                appData[variable] = _.cloneDeep(this.context[variable]);\n            }\n        });\n\n        this.setState({ currentProject: appData });\n    };\n\n    submitData = () => {\n        const dataToSubmit = _.cloneDeep(this.state.currentProject);\n        console.log(dataToSubmit);\n        axios({\n            method: \"post\",\n            url: \"https://l-gorman.com/api/projects/submit-data/\",\n            data: dataToSubmit,\n            headers: {\n                accept: \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n        })\n            .then((response) => {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    retrieveProjects = () => {\n        axios({\n            method: \"get\",\n            url: \"https://l-gorman.com/api/projects/get-projects/\",\n            headers: {\n                accept: \"application/json\",\n            },\n        })\n            .then((response) => {\n                this.setState({\n                    previousProjects: response.data,\n                });\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    };\n\n    // offlineResults = () => {\n    //     if (!navigator.onLine) {\n    //         return (\n    //             <h1>\n    //                 Offline: Wait for internet connection before submitting data\n    //                 or viewing previous projects\n    //             </h1>\n    //         );\n    //     }\n    // };\n\n    render() {\n        return (\n            <div>\n                <h1>App Context</h1>\n                <Button onClick={this.submitData}>Submit</Button>\n                <Button onClick={this.retrieveProjects}>\n                    Get all Projects\n                </Button>\n                <h1>Current Project</h1>\n                <pre>{JSON.stringify(this.state.currentProject, null, 2)}</pre>\n                <h1>Fetched projects</h1>\n                <pre>\n                    {JSON.stringify(this.state.previousProjects, null, 2)}\n                </pre>\n            </div>\n        );\n    }\n}\n\nexport default SubmitData;\n","import React, { Component } from \"react\";\n\nimport { AiOutlineDatabase, AiFillHome, AiOutlineSend } from \"react-icons/ai\";\nimport { RiUserSettingsLine } from \"react-icons/ri\";\nimport { VscAccount } from \"react-icons/vsc\";\nimport { FaLeaf, FaDatabase } from \"react-icons/fa\";\nimport { GoGraph, GoSettings } from \"react-icons/go\";\nimport Home from \"../home-component/home-component\";\nimport Admin from \"../admin-data-entry-component/admin-data-entry-component\";\nimport Login from \"../login-component/login-component\";\nimport DataEntry from \"../data-entry-component/data-entry-component\";\nimport Results from \"../results-component/results-component\";\nimport ViewContext from \"../view-context-component/view-context-component\";\nimport ProjectInformation from \"../project-information-component/project-information-component\";\nimport SubmitData from \"../submit-data-component/submit-data-component\";\n//import Legumes from \"../legumes-component/legumes-component\";\n\n// Set the icon size for the imported icons\nconst iconSize = 30;\n\nconst sidebarlinkcName = \"sidebar-nav-link\";\n\nconst SidebarData = [\n    {\n        title: \"Home\",\n        routeKey: \"home-route\",\n        component: <Home />,\n        path: \"/home\",\n        icon: <AiFillHome size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n    {\n        title: \"Data Entry\",\n        routeKey: \"data-entry-route\",\n        component: <DataEntry />,\n        path: \"/data-entry\",\n\n        icon: <AiOutlineDatabase size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n    {\n        title: \"Project Information\",\n        routeKey: \"project-info-route\",\n        component: <ProjectInformation />,\n        path: \"/project-info\",\n\n        icon: <GoSettings size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n\n    {\n        title: \"Results\",\n        routeKey: \"results-route\",\n        component: <Results />,\n        path: \"/results\",\n\n        icon: <GoGraph size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n\n    {\n        title: \"Admin\",\n        routeKey: \"admin-route\",\n        component: <Admin />,\n        path: \"/admin\",\n        icon: <RiUserSettingsLine size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n    {\n        title: \"Login\",\n        routeKey: \"login-route\",\n        component: <Login />,\n        path: \"/login\",\n        icon: <VscAccount size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n    {\n        title: \"Submit Data\",\n        routeKey: \"submit-data-route\",\n        component: <SubmitData />,\n        path: \"/submit-data\",\n        icon: <AiOutlineSend size={iconSize} />,\n        cName: sidebarlinkcName,\n    },\n\n    // {\n    //     title: \"View App Data\",\n    //     routeKey: \"app-data-route\",\n    //     component: <ViewContext />,\n    //     path: \"/app-data\",\n    //     icon: <FaDatabase size={iconSize} />,\n    //     cName: sidebarlinkcName,\n    // },\n    // {\n    //     title: \"Specify Location\",\n    //     routeKey: \"location\",\n    //     component: <MapPolygon />,\n    //     path: \"/location\",\n    //     icon: <FiMapPin size={iconSize} />,\n    //     cName: sidebarlinkcName,\n    // },\n];\n\nexport default SidebarData;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { AiOutlineMenu } from \"react-icons/ai\";\nimport \"./sidebar-component.css\";\nimport SidebarData from \"./sidebar-data\";\n\nimport _ from \"lodash\";\nimport AppContext from \"../../AppContext\";\n\nclass Sidebar extends React.Component {\n    static contextType = AppContext;\n    constructor(props) {\n        super(props);\n\n        // Setting the initial state to closed\n\n        this.state = {\n            sideBarOpen: false,\n            user: \"\",\n            project: \"\",\n        };\n    }\n\n    componentDidMount() {}\n\n    componentDidUpdate() {}\n\n    initialiseContext() {\n        let newUser = \"\";\n        if (this.context.user !== undefined) {\n            newUser = _.cloneDeep(this.context.user.username);\n            this.setState({\n                user: newUser,\n            });\n        }\n\n        let newProject = \"\";\n        if (this.context.projectInfo !== undefined) {\n            newProject = _.cloneDeep(this.context.projectInfo.projectName);\n            this.setState({\n                project: newProject,\n            });\n        }\n    }\n\n    // When this function is trigered, state of the side-bar is change, which triggers a change in the css\n    toggleSidebar = () => {\n        this.setState(\n            {\n                sideBarOpen: !this.state.sideBarOpen,\n            },\n            () => this.initialiseContext()\n        );\n    };\n\n    returnTopBarInformation = () => {\n        return (\n            <div className=\"top-bar-items\">\n                <p className=\"top-bar-text\">User: {this.state.user}</p>\n                <p className=\"top-bar-text\">Project: {this.state.project}</p>\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <div className=\"container_row\">\n                <div className=\"top-bar\">\n                    <a onClick={this.toggleSidebar}>\n                        <AiOutlineMenu size={50} color=\"white\" />\n                    </a>\n                    {this.returnTopBarInformation()}\n                </div>\n\n                <div\n                    className={\n                        this.state.sideBarOpen\n                            ? \"sidebar-container active\"\n                            : \"sidebar-container\"\n                    }\n                >\n                    <div\n                        key=\"sidebar-header \"\n                        className=\"sidebar-header-container\"\n                    >\n                        <h2>LegumeCHOICE</h2>\n\n                        <a onClick={this.toggleSidebar}>\n                            <div className=\"close-menu-icon\">\n                                <IoIosArrowBack size={40} color=\"white\" />\n                            </div>\n                        </a>\n                    </div>\n\n                    <div className=\"link-container\">\n                        <ul>\n                            {SidebarData.map((item, index) => {\n                                return (\n                                    <Link\n                                        key={index + \"-link-item\"}\n                                        className={item.cName}\n                                        to={item.path}\n                                        onClick={this.toggleSidebar}\n                                    >\n                                        <div className=\"sidebar-list-item\">\n                                            <li\n                                                className=\"sidebar-list-item\"\n                                                key={index + \"-list-item\"}\n                                            >\n                                                <span className=\"side-bar-link-icon\">\n                                                    {item.icon}\n                                                </span>\n                                                <span className=\"side-bar-link-text\">\n                                                    {item.title}\n                                                </span>\n                                            </li>\n                                        </div>\n                                    </Link>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;\n","import React from \"react\";\n\nimport {\n    //BrowserRouter as Router,\n    HashRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\n\nimport Sidebar from \"./components/sidebar-component/sidebar-component\";\n\n// In this location, we have all of the details of each of the individual components\nimport SidebarData from \"./components/sidebar-component/sidebar-data\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AppContext from \"./AppContext\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = AppContext;\n    }\n\n    render() {\n        {\n            /*basename={process.env.PUBLIC_URL + \"/\"}*/\n        }\n        return (\n            <Router>\n                <div>\n                    <AppContext.Provider value={this.state}>\n                        <Sidebar />\n                        <div className=\"outer-page-container\">\n                            <div className=\"inner-page-container\">\n                                <Switch>\n                                    {/* Context provider specifies which components should have access to the context */}\n                                    {SidebarData.map((item) => {\n                                        // Return Each of the components and their specified routes\n                                        return (\n                                            <Route\n                                                exact\n                                                path={item.path}\n                                                key={item.routeKey}\n                                            >\n                                                {item.component}\n                                            </Route>\n                                        );\n                                    })}\n                                    <Redirect exact from=\"/\" to=\"/home\" />\n                                </Switch>\n                            </div>\n                        </div>\n                    </AppContext.Provider>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}